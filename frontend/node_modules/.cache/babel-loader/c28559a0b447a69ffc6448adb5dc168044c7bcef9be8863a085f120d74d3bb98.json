{"ast":null,"code":"import React,{useEffect,useState,useRef}from\"react\";import SockJS from\"sockjs-client\";import{Client}from\"@stomp/stompjs\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Dashboard(){const[machines,setMachines]=useState([]);const[users,setUsers]=useState([{id:1,name:\"User1\"}]);const[currentUserId,setCurrentUserId]=useState(1);const[notifications,setNotifications]=useState([]);const[completedWashes,setCompletedWashes]=useState(new Set());const clientRef=useRef(null);const intervalRef=useRef(null);useEffect(()=>{// Reset data on page load\nfetch(\"/api/machines/reset\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}}).catch(e=>console.error(\"Reset failed\",e));const socket=new SockJS(\"/ws\");const client=new Client({webSocketFactory:()=>socket,reconnectDelay:5000,onConnect:()=>{console.log(\"WebSocket connected\");client.subscribe(\"/topic/machines\",msg=>{try{setMachines(JSON.parse(msg.body));}catch(e){console.error(\"parse machines\",e);}});client.subscribe(\"/topic/notifications\",msg=>{try{const payload=JSON.parse(msg.body);handleNotification(payload);}catch(e){console.error(\"parse notification\",e);}});client.subscribe(\"/topic/washHistory\",msg=>{try{const completedUsers=JSON.parse(msg.body);setCompletedWashes(new Set(completedUsers));}catch(e){console.error(\"parse wash history\",e);}});},onStompError:frame=>{console.error('STOMP error',frame);}});client.activate();clientRef.current=client;fetchMachines();intervalRef.current=setInterval(()=>{setMachines(prev=>[...prev]);},1000);if(typeof Notification!==\"undefined\"&&Notification.permission===\"default\"){Notification.requestPermission();}return()=>{if(clientRef.current)clientRef.current.deactivate();if(intervalRef.current)clearInterval(intervalRef.current);};},[]);function fetchMachines(){fetch(\"/api/machines\").then(r=>{if(!r.ok)throw new Error('Network response was not ok');return r.json();}).then(data=>setMachines(data)).catch(e=>console.error(\"fetch machines\",e));}function remainingSeconds(endTime){if(!endTime)return 0;const diff=Math.floor(new Date(endTime).getTime()/1000-Date.now()/1000);return diff>0?diff:0;}function fmtSeconds(totalSec){if(totalSec<=0)return\"0m 0s\";const mins=Math.floor(totalSec/60);const secs=totalSec%60;return\"\".concat(mins,\"m \").concat(secs,\"s\");}function handleNotification(payload){if(!payload||payload.type!==\"PRE_NOTIFY\")return;if(Number(payload.userId)!==Number(currentUserId))return;const mins=Math.ceil(payload.minutesUntilStart);const machineName=payload.machineName||\"Machine \".concat(payload.machineId);const notifMsg=\"Your turn on \".concat(machineName,\" starts in \").concat(mins,\" minute(s)!\");setNotifications(prev=>[...prev,{id:Date.now(),message:notifMsg,machineId:payload.machineId}]);setTimeout(()=>{setNotifications(prev=>prev.filter(n=>n.id!==Date.now()));},10000);if(typeof Notification!==\"undefined\"&&Notification.permission===\"granted\"){new Notification(\"WashSimple\",{body:notifMsg,icon:\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='75' font-size='80'>💧</text></svg>\"});}}function addNewUser(){const name=prompt(\"Enter new username:\");if(!name||!name.trim())return;if(users.some(u=>u.name===name.trim())){alert(\"Username already exists!\");return;}const id=Date.now();setUsers(prev=>[...prev,{id,name:name.trim()}]);setCurrentUserId(id);}function totalRemainingSecondsForMachine(m){var _m$queue;let total=0;if(m.inUse&&m.endTime)total+=remainingSeconds(m.endTime);if((_m$queue=m.queue)!==null&&_m$queue!==void 0&&_m$queue.length){m.queue.forEach(q=>{total+=(q.minutes||50)*60;});}return total;}function remainingSecondsForUser(m,userId){var _m$queue2;let total=0;if(m.inUse&&Number(m.currentUserId)===Number(userId)){return remainingSeconds(m.endTime);}if(m.inUse&&m.endTime){total+=remainingSeconds(m.endTime);}if((_m$queue2=m.queue)!==null&&_m$queue2!==void 0&&_m$queue2.length){for(let q of m.queue){if(Number(q.userId)===Number(userId))break;total+=(q.minutes||50)*60;}}return total;}function getCurrentUserQueues(){return machines.filter(m=>Number(m.currentUserId)===Number(currentUserId)||m.queue&&m.queue.some(q=>Number(q.userId)===Number(currentUserId)));}async function joinQueue(machineId){var _machine$queue,_machine$queue2;const machine=machines.find(m=>m.id===machineId);if(!machine)return;if(completedWashes.has(currentUserId)){alert(\"You have already washed your clothes today!\");return;}const userInAnyMachine=machines.some(mm=>Number(mm.currentUserId)===Number(currentUserId)||mm.queue&&mm.queue.some(q=>Number(q.userId)===Number(currentUserId)));if(userInAnyMachine){alert(\"You are already using or queued for another machine.\");return;}const minutesStr=prompt(\"Enter your wash duration (minutes):\",\"50\");if(!minutesStr)return;const minutes=parseInt(minutesStr,10);if(isNaN(minutes)||minutes<=0){alert(\"Please enter a valid number of minutes.\");return;}let totalWaitSec=0;if(machine.inUse&&machine.endTime)totalWaitSec+=remainingSeconds(machine.endTime);(_machine$queue=machine.queue)===null||_machine$queue===void 0?void 0:_machine$queue.forEach(q=>totalWaitSec+=(q.minutes||50)*60);const ok=window.confirm(\"Machine: \".concat(machine.name,\"\\n\")+\"Current queue: \".concat(((_machine$queue2=machine.queue)===null||_machine$queue2===void 0?void 0:_machine$queue2.length)||0,\" user(s)\\n\")+\"Estimated wait: \".concat(Math.ceil(totalWaitSec/60),\" minutes\\n\\n\")+\"Join queue?\");if(!ok)return;try{const res=await fetch(\"/api/machines/join\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({machineId,userId:currentUserId,minutes})});if(!res.ok)throw new Error('Failed to join queue');const j=await res.json();if(j.error){alert(j.error);}else{alert(\"Joined queue at position \".concat(j.position,\". You'll be notified 2 minutes before your turn.\"));fetchMachines();}}catch(error){console.error(\"Error joining queue:\",error);alert(\"Failed to join queue. Please try again.\");}}async function startWashing(machineId){const machine=machines.find(m=>m.id===machineId);if(!machine)return;if(completedWashes.has(currentUserId)){alert(\"You have already washed your clothes today!\");return;}const minutesStr=prompt(\"Enter minutes for wash:\",\"50\");if(!minutesStr)return;const minutes=parseInt(minutesStr,10);if(isNaN(minutes)||minutes<=0){alert(\"Please enter a valid number of minutes.\");return;}try{const res=await fetch(\"/api/machines/start\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({machineId,userId:currentUserId,minutes})});if(!res.ok)throw new Error('Failed to start washing');const j=await res.json();if(j.error){alert(j.error);}else if(j.started){alert(\"Wash started! Will end at \".concat(new Date(j.endTime).toLocaleTimeString()));fetchMachines();}}catch(error){console.error(\"Error starting wash:\",error);alert(\"Failed to start washing. Please try again.\");}}const currentUserQueues=getCurrentUserQueues();return/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[notifications.length>0&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:'20px',right:'20px',zIndex:1000,display:'flex',flexDirection:'column',gap:'12px'},children:notifications.map(notif=>/*#__PURE__*/_jsx(\"div\",{style:{background:'linear-gradient(135deg, #10b981 0%, #059669 100%)',color:'white',padding:'16px 20px',borderRadius:'12px',boxShadow:'0 8px 24px rgba(16, 185, 129, 0.4)',maxWidth:'320px',animation:'slideIn 0.3s ease-out',fontWeight:'600'},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',gap:'8px'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'20px'},children:\"\\uD83D\\uDD14\"}),/*#__PURE__*/_jsx(\"span\",{children:notif.message})]})},notif.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-title\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"header-title-icon\",children:\"\\uD83D\\uDCA7\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"WashSimple\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-controls\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"header-controls-icon\",children:\"\\uD83D\\uDC64\"}),/*#__PURE__*/_jsx(\"select\",{value:currentUserId,onChange:e=>setCurrentUserId(Number(e.target.value)),className:\"user-select\",children:users.map(u=>/*#__PURE__*/_jsx(\"option\",{value:u.id,children:u.name},u.id))}),/*#__PURE__*/_jsx(\"button\",{onClick:addNewUser,className:\"add-user-btn\",children:\"+ Add User\"})]})]}),completedWashes.has(currentUserId)?/*#__PURE__*/_jsxs(\"div\",{style:{background:'linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%)',padding:'20px',borderRadius:'12px',border:'1px solid #10b981',textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'center',gap:'10px',marginBottom:'8px'},children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:'24px'},children:\"\\u2705\"}),/*#__PURE__*/_jsx(\"strong\",{style:{color:'#065f46',fontSize:'16px'},children:\"Wash Completed!\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{color:'#047857',fontSize:'14px',fontWeight:'500'},children:\"You have already washed your clothes today.\"})]}):currentUserQueues.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"active-sessions\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"active-sessions-label\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"active-sessions-label-icon\",children:\"\\uD83D\\uDD14\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"Your Active Sessions:\"})]}),currentUserQueues.map(m=>{var _m$queue3;const waitSec=remainingSecondsForUser(m,currentUserId);const isWashing=Number(m.currentUserId)===Number(currentUserId)&&m.inUse;const queueIndex=(_m$queue3=m.queue)===null||_m$queue3===void 0?void 0:_m$queue3.findIndex(q=>Number(q.userId)===Number(currentUserId));return/*#__PURE__*/_jsxs(\"div\",{className:\"session-card \".concat(isWashing?'session-card-washing':'session-card-queued'),children:[/*#__PURE__*/_jsx(\"strong\",{children:m.name}),/*#__PURE__*/_jsx(\"div\",{className:\"session-card-details\",children:isWashing?/*#__PURE__*/_jsxs(_Fragment,{children:[\"\\uD83D\\uDD04 Washing \\u2022 \",fmtSeconds(waitSec),\" left\"]}):/*#__PURE__*/_jsxs(_Fragment,{children:[\"\\u23F3 Position \",queueIndex+1,\" \\u2022 ~\",Math.ceil(waitSec/60),\" min wait\"]})})]},m.id);})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-sessions\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"no-sessions-icon\",children:\"\\uD83D\\uDE0A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"no-sessions-text\",children:\"No active sessions. Start a wash or join a queue below!\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"machine-grid\",children:machines.map(m=>{var _m$queue4;const totalSec=totalRemainingSecondsForMachine(m);const occupied=totalSec>0;const isOwner=Number(m.currentUserId)===Number(currentUserId);const hasCompletedWash=completedWashes.has(currentUserId);const userInAnyMachine=machines.some(mm=>Number(mm.currentUserId)===Number(currentUserId)||mm.queue&&mm.queue.some(q=>Number(q.userId)===Number(currentUserId)));return/*#__PURE__*/_jsxs(\"div\",{className:\"card \".concat(isOwner?'card-owner':''),children:[/*#__PURE__*/_jsx(\"h3\",{children:m.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"status-indicator \".concat(occupied?'status-indicator-occupied':'status-indicator-available')}),/*#__PURE__*/_jsx(\"strong\",{children:occupied?\"Occupied\":\"Available\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-icon\",children:\"\\u23F0\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Remaining: \",/*#__PURE__*/_jsx(\"strong\",{children:fmtSeconds(totalSec)})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-row\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-icon\",children:\"\\uD83D\\uDC65\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Queue: \",/*#__PURE__*/_jsxs(\"strong\",{children:[((_m$queue4=m.queue)===null||_m$queue4===void 0?void 0:_m$queue4.length)||0,\" user(s)\"]})]})]}),isOwner&&m.inUse&&/*#__PURE__*/_jsxs(\"div\",{className:\"info-row\",style:{color:'#10b981',fontWeight:600},children:[/*#__PURE__*/_jsx(\"span\",{className:\"info-icon\",children:\"\\u2713\"}),/*#__PURE__*/_jsx(\"span\",{children:\"You're washing\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>joinQueue(m.id),disabled:userInAnyMachine||hasCompletedWash,className:\"btn-join-queue\",title:hasCompletedWash?\"You've already washed today\":\"\",children:\"Join Queue\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>startWashing(m.id),disabled:!isOwner&&userInAnyMachine||m.inUse&&!isOwner||hasCompletedWash,className:\"btn-start\",title:hasCompletedWash?\"You've already washed today\":\"\",children:isOwner&&m.inUse?\"Extend\":\"Start\"})]})]},m.id);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"queue-panel\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"All Queues\"}),machines.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"queue-empty\",children:\"No machines available\"}):machines.map(m=>{var _users$find,_m$queue5;return/*#__PURE__*/_jsxs(\"div\",{className:\"queue-machine\",children:[/*#__PURE__*/_jsx(\"strong\",{children:m.name}),!m.inUse&&(!m.queue||m.queue.length===0)?/*#__PURE__*/_jsx(\"div\",{className:\"queue-no-users\",children:\"No active users\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"queue-details\",children:[m.inUse&&/*#__PURE__*/_jsxs(\"div\",{className:\"queue-current-user\",children:[\"\\uD83D\\uDD04 \",((_users$find=users.find(u=>u.id===m.currentUserId))===null||_users$find===void 0?void 0:_users$find.name)||\"User\".concat(m.currentUserId),/*#__PURE__*/_jsxs(\"div\",{className:\"queue-current-user-time\",children:[fmtSeconds(remainingSeconds(m.endTime)),\" remaining\"]})]}),(_m$queue5=m.queue)===null||_m$queue5===void 0?void 0:_m$queue5.map((q,idx)=>{var _users$find2;return/*#__PURE__*/_jsxs(\"div\",{className:\"queue-item\",children:[\"#\",idx+1,\" \",((_users$find2=users.find(u=>u.id===q.userId))===null||_users$find2===void 0?void 0:_users$find2.name)||\"User\".concat(q.userId),/*#__PURE__*/_jsxs(\"div\",{className:\"queue-item-time\",children:[q.minutes,\" minutes scheduled\"]})]},q.userId);})]})]},m.id);})]})]})]})});}","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Client","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Dashboard","machines","setMachines","users","setUsers","id","name","currentUserId","setCurrentUserId","notifications","setNotifications","completedWashes","setCompletedWashes","Set","clientRef","intervalRef","fetch","method","headers","catch","e","console","error","socket","client","webSocketFactory","reconnectDelay","onConnect","log","subscribe","msg","JSON","parse","body","payload","handleNotification","completedUsers","onStompError","frame","activate","current","fetchMachines","setInterval","prev","Notification","permission","requestPermission","deactivate","clearInterval","then","r","ok","Error","json","data","remainingSeconds","endTime","diff","Math","floor","Date","getTime","now","fmtSeconds","totalSec","mins","secs","concat","type","Number","userId","ceil","minutesUntilStart","machineName","machineId","notifMsg","message","setTimeout","filter","n","icon","addNewUser","prompt","trim","some","u","alert","totalRemainingSecondsForMachine","m","_m$queue","total","inUse","queue","length","forEach","q","minutes","remainingSecondsForUser","_m$queue2","getCurrentUserQueues","joinQueue","_machine$queue","_machine$queue2","machine","find","has","userInAnyMachine","mm","minutesStr","parseInt","isNaN","totalWaitSec","window","confirm","res","stringify","j","position","startWashing","started","toLocaleTimeString","currentUserQueues","className","children","style","top","right","zIndex","display","flexDirection","gap","map","notif","background","color","padding","borderRadius","boxShadow","maxWidth","animation","fontWeight","alignItems","fontSize","value","onChange","target","onClick","border","textAlign","justifyContent","marginBottom","_m$queue3","waitSec","isWashing","queueIndex","findIndex","_m$queue4","occupied","isOwner","hasCompletedWash","disabled","title","_users$find","_m$queue5","idx","_users$find2"],"sources":["/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\n\nexport default function Dashboard() {\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{ id: 1, name: \"User1\" }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const [notifications, setNotifications] = useState([]);\n  const [completedWashes, setCompletedWashes] = useState(new Set());\n  const clientRef = useRef(null);\n  const intervalRef = useRef(null);\n\n  useEffect(() => {\n    // Reset data on page load\n    fetch(\"/api/machines/reset\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" }\n    }).catch(e => console.error(\"Reset failed\", e));\n\n    const socket = new SockJS(\"/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        console.log(\"WebSocket connected\");\n\n        client.subscribe(\"/topic/machines\", (msg) => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n\n        client.subscribe(\"/topic/notifications\", (msg) => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n\n        client.subscribe(\"/topic/washHistory\", (msg) => {\n          try {\n            const completedUsers = JSON.parse(msg.body);\n            setCompletedWashes(new Set(completedUsers));\n          } catch (e) {\n            console.error(\"parse wash history\", e);\n          }\n        });\n      },\n      onStompError: (frame) => {\n        console.error('STOMP error', frame);\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n\n    fetchMachines();\n\n    intervalRef.current = setInterval(() => {\n      setMachines(prev => [...prev]);\n    }, 1000);\n\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"default\") {\n      Notification.requestPermission();\n    }\n\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  function fetchMachines() {\n    fetch(\"/api/machines\")\n      .then((r) => {\n        if (!r.ok) throw new Error('Network response was not ok');\n        return r.json();\n      })\n      .then((data) => setMachines(data))\n      .catch((e) => console.error(\"fetch machines\", e));\n  }\n\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"0m 0s\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n\n    const mins = Math.ceil(payload.minutesUntilStart);\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n\n    const notifMsg = `Your turn on ${machineName} starts in ${mins} minute(s)!`;\n\n    setNotifications(prev => [...prev, {\n      id: Date.now(),\n      message: notifMsg,\n      machineId: payload.machineId\n    }]);\n\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== Date.now()));\n    }, 10000);\n\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"granted\") {\n      new Notification(\"WashSimple\", {\n        body: notifMsg,\n        icon: \"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='75' font-size='80'>💧</text></svg>\"\n      });\n    }\n  }\n\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name || !name.trim()) return;\n    if (users.some(u => u.name === name.trim())) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, { id, name: name.trim() }]);\n    setCurrentUserId(id);\n  }\n\n  function totalRemainingSecondsForMachine(m) {\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if (m.queue?.length) {\n      m.queue.forEach(q => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n\n  function remainingSecondsForUser(m, userId) {\n    let total = 0;\n\n    if (m.inUse && Number(m.currentUserId) === Number(userId)) {\n      return remainingSeconds(m.endTime);\n    }\n\n    if (m.inUse && m.endTime) {\n      total += remainingSeconds(m.endTime);\n    }\n\n    if (m.queue?.length) {\n      for (let q of m.queue) {\n        if (Number(q.userId) === Number(userId)) break;\n        total += (q.minutes || 50) * 60;\n      }\n    }\n\n    return total;\n  }\n\n  function getCurrentUserQueues() {\n    return machines.filter(m =>\n      Number(m.currentUserId) === Number(currentUserId) ||\n      (m.queue && m.queue.some(q => Number(q.userId) === Number(currentUserId)))\n    );\n  }\n\n  async function joinQueue(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n\n    const userInAnyMachine = machines.some(mm =>\n      Number(mm.currentUserId) === Number(currentUserId) ||\n      (mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)))\n    );\n\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n\n    const minutesStr = prompt(\"Enter your wash duration (minutes):\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    machine.queue?.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n\n    const ok = window.confirm(\n      `Machine: ${machine.name}\\n` +\n      `Current queue: ${machine.queue?.length || 0} user(s)\\n` +\n      `Estimated wait: ${Math.ceil(totalWaitSec/60)} minutes\\n\\n` +\n      `Join queue?`\n    );\n    if (!ok) return;\n\n    try {\n      const res = await fetch(\"/api/machines/join\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n      });\n      if (!res.ok) throw new Error('Failed to join queue');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else {\n        alert(`Joined queue at position ${j.position}. You'll be notified 2 minutes before your turn.`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error joining queue:\", error);\n      alert(\"Failed to join queue. Please try again.\");\n    }\n  }\n\n  async function startWashing(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n\n    const minutesStr = prompt(\"Enter minutes for wash:\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n\n    try {\n      const res = await fetch(\"/api/machines/start\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n      });\n      if (!res.ok) throw new Error('Failed to start washing');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else if (j.started) {\n        alert(`Wash started! Will end at ${new Date(j.endTime).toLocaleTimeString()}`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error starting wash:\", error);\n      alert(\"Failed to start washing. Please try again.\");\n    }\n  }\n\n  const currentUserQueues = getCurrentUserQueues();\n\n  return (\n    <div className=\"dashboard-wrapper\">\n      <div className=\"container\">\n        {notifications.length > 0 && (\n          <div style={{\n            position: 'fixed',\n            top: '20px',\n            right: '20px',\n            zIndex: 1000,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '12px'\n          }}>\n            {notifications.map(notif => (\n              <div key={notif.id} style={{\n                background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n                color: 'white',\n                padding: '16px 20px',\n                borderRadius: '12px',\n                boxShadow: '0 8px 24px rgba(16, 185, 129, 0.4)',\n                maxWidth: '320px',\n                animation: 'slideIn 0.3s ease-out',\n                fontWeight: '600'\n              }}>\n                <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                  <span style={{ fontSize: '20px' }}>🔔</span>\n                  <span>{notif.message}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        <div className=\"header-card\">\n          <div className=\"header\">\n            <div className=\"header-title\">\n              <span className=\"header-title-icon\">💧</span>\n              <h1>WashSimple</h1>\n            </div>\n            <div className=\"header-controls\">\n              <span className=\"header-controls-icon\">👤</span>\n              <select\n                value={currentUserId}\n                onChange={(e) => setCurrentUserId(Number(e.target.value))}\n                className=\"user-select\"\n              >\n                {users.map(u => (\n                  <option key={u.id} value={u.id}>{u.name}</option>\n                ))}\n              </select>\n              <button onClick={addNewUser} className=\"add-user-btn\">\n                + Add User\n              </button>\n            </div>\n          </div>\n\n          {completedWashes.has(currentUserId) ? (\n            <div style={{\n              background: 'linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%)',\n              padding: '20px',\n              borderRadius: '12px',\n              border: '1px solid #10b981',\n              textAlign: 'center'\n            }}>\n              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '10px', marginBottom: '8px' }}>\n                <span style={{ fontSize: '24px' }}>✅</span>\n                <strong style={{ color: '#065f46', fontSize: '16px' }}>Wash Completed!</strong>\n              </div>\n              <div style={{ color: '#047857', fontSize: '14px', fontWeight: '500' }}>\n                You have already washed your clothes today.\n              </div>\n            </div>\n          ) : currentUserQueues.length > 0 ? (\n            <div className=\"active-sessions\">\n              <div className=\"active-sessions-label\">\n                <span className=\"active-sessions-label-icon\">🔔</span>\n                <strong>Your Active Sessions:</strong>\n              </div>\n              {currentUserQueues.map(m => {\n                const waitSec = remainingSecondsForUser(m, currentUserId);\n                const isWashing = Number(m.currentUserId) === Number(currentUserId) && m.inUse;\n                const queueIndex = m.queue?.findIndex(q => Number(q.userId) === Number(currentUserId));\n\n                return (\n                  <div key={m.id} className={`session-card ${isWashing ? 'session-card-washing' : 'session-card-queued'}`}>\n                    <strong>{m.name}</strong>\n                    <div className=\"session-card-details\">\n                      {isWashing ? (\n                        <>🔄 Washing • {fmtSeconds(waitSec)} left</>\n                      ) : (\n                        <>⏳ Position {queueIndex + 1} • ~{Math.ceil(waitSec / 60)} min wait</>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"no-sessions\">\n              <span className=\"no-sessions-icon\">😊</span>\n              <div className=\"no-sessions-text\">No active sessions. Start a wash or join a queue below!</div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"main-content\">\n          <div className=\"machine-grid\">\n            {machines.map(m => {\n              const totalSec = totalRemainingSecondsForMachine(m);\n              const occupied = totalSec > 0;\n              const isOwner = Number(m.currentUserId) === Number(currentUserId);\n              const hasCompletedWash = completedWashes.has(currentUserId);\n              const userInAnyMachine = machines.some(mm =>\n                Number(mm.currentUserId) === Number(currentUserId) ||\n                (mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)))\n              );\n\n              return (\n                <div key={m.id} className={`card ${isOwner ? 'card-owner' : ''}`}>\n                  <h3>{m.name}</h3>\n\n                  <div className=\"card-details\">\n                    <div className=\"status-row\">\n                      <div className={`status-indicator ${occupied ? 'status-indicator-occupied' : 'status-indicator-available'}`} />\n                      <strong>{occupied ? \"Occupied\" : \"Available\"}</strong>\n                    </div>\n\n                    <div className=\"info-row\">\n                      <span className=\"info-icon\">⏰</span>\n                      <span>Remaining: <strong>{fmtSeconds(totalSec)}</strong></span>\n                    </div>\n\n                    <div className=\"info-row\">\n                      <span className=\"info-icon\">👥</span>\n                      <span>Queue: <strong>{m.queue?.length || 0} user(s)</strong></span>\n                    </div>\n\n                    {isOwner && m.inUse && (\n                      <div className=\"info-row\" style={{ color: '#10b981', fontWeight: 600 }}>\n                        <span className=\"info-icon\">✓</span>\n                        <span>You're washing</span>\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"card-actions\">\n                    <button\n                      onClick={() => joinQueue(m.id)}\n                      disabled={userInAnyMachine || hasCompletedWash}\n                      className=\"btn-join-queue\"\n                      title={hasCompletedWash ? \"You've already washed today\" : \"\"}\n                    >\n                      Join Queue\n                    </button>\n                    <button\n                      onClick={() => startWashing(m.id)}\n                      disabled={(!isOwner && userInAnyMachine) || (m.inUse && !isOwner) || hasCompletedWash}\n                      className=\"btn-start\"\n                      title={hasCompletedWash ? \"You've already washed today\" : \"\"}\n                    >\n                      {isOwner && m.inUse ? \"Extend\" : \"Start\"}\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          <div className=\"queue-panel\">\n            <h3>All Queues</h3>\n            {machines.length === 0 ? (\n              <div className=\"queue-empty\">No machines available</div>\n            ) : (\n              machines.map(m => (\n                <div key={m.id} className=\"queue-machine\">\n                  <strong>{m.name}</strong>\n                  {!m.inUse && (!m.queue || m.queue.length === 0) ? (\n                    <div className=\"queue-no-users\">No active users</div>\n                  ) : (\n                    <div className=\"queue-details\">\n                      {m.inUse && (\n                        <div className=\"queue-current-user\">\n                          🔄 {users.find(u => u.id === m.currentUserId)?.name || `User${m.currentUserId}`}\n                          <div className=\"queue-current-user-time\">\n                            {fmtSeconds(remainingSeconds(m.endTime))} remaining\n                          </div>\n                        </div>\n                      )}\n                      {m.queue?.map((q, idx) => (\n                        <div key={q.userId} className=\"queue-item\">\n                          #{idx + 1} {users.find(u => u.id === q.userId)?.name || `User${q.userId}`}\n                          <div className=\"queue-item-time\">\n                            {q.minutes} minutes scheduled\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}