{"ast":null,"code":"var _jsxFileName = \"/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  var _users$find;\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: \"User1\"\n  }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const clientRef = useRef(null);\n  useEffect(() => {\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        client.subscribe(\"/topic/machines\", msg => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n        client.subscribe(\"/topic/notifications\", msg => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n    fetchMachines();\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n    };\n  }, []);\n  function fetchMachines() {\n    fetch(\"http://localhost:8080/api/machines\").then(r => r.json()).then(data => setMachines(data)).catch(e => console.error(\"fetch machines\", e));\n  }\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"-\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n    const mins = payload.minutesUntilStart;\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n    alert(`ðŸ”” Hey! Your turn on ${machineName} will start in about ${mins} minute(s). Get ready!`);\n  }\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name) return;\n    if (users.some(u => u.name === name)) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, {\n      id,\n      name\n    }]);\n    setCurrentUserId(id);\n  }\n  function totalRemainingSecondsForMachine(m) {\n    var _m$queue;\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if ((_m$queue = m.queue) !== null && _m$queue !== void 0 && _m$queue.length) {\n      m.queue.forEach(q => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n  async function joinQueue(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n    const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === currentUserId || mm.queue && mm.queue.some(q => q.userId === currentUserId));\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n    const queueEntries = machine.queue || [];\n    let queueStr = \"\";\n    if (machine.inUse && machine.currentUserId) {\n      const userObj = users.find(u => u.id === machine.currentUserId);\n      queueStr += `Current: ${userObj ? userObj.name : \"User\" + machine.currentUserId} â€” remaining ${fmtSeconds(remainingSeconds(machine.endTime))}\\n`;\n    }\n    queueEntries.forEach((q, idx) => {\n      const userObj = users.find(u => u.id === q.userId);\n      queueStr += `${idx + 1}. ${userObj ? userObj.name : \"User\" + q.userId} â€” ${q.minutes} min\\n`;\n    });\n    const minutesStr = prompt(`Queue:\\n${queueStr || \"No queued users\"}\\n\\nEnter your wash duration (minutes):`, \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    queueEntries.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n    const ok = window.confirm(`Total wait before your turn: ${Math.ceil(totalWaitSec / 60)} minutes.\\nJoin queue?`);\n    if (!ok) return;\n    const res = await fetch(\"http://localhost:8080/api/machines/join\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        machineId,\n        userId: currentUserId,\n        minutes\n      })\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);else {\n      alert(`Joined queue. Position: ${j.position}. You will be notified 2 minutes before your turn.`);\n      fetchMachines();\n    }\n  }\n  async function startWashing(machineId) {\n    const minutesStr = prompt(\"Enter minutes for wash (minutes)\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n    const res = await fetch(\"http://localhost:8080/api/machines/start\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        machineId,\n        userId: currentUserId,\n        minutes\n      })\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);else if (j.started) {\n      alert(\"Started: ends at \" + j.endTime);\n      fetchMachines();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"WashSimple \\u2014 user: \", (_users$find = users.find(u => u.id === currentUserId)) === null || _users$find === void 0 ? void 0 : _users$find.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewUser,\n          children: \"Add New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 12,\n        flexWrap: \"wrap\",\n        marginTop: 16\n      },\n      children: machines.map(m => {\n        const totalSec = totalRemainingSecondsForMachine(m);\n        const occupied = m.inUse;\n        const isOwner = Number(m.currentUserId) === currentUserId;\n        const queue = m.queue || [];\n        const isFirstInQueue = queue.length > 0 && queue[0].userId === currentUserId;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          style: {\n            width: 220,\n            padding: 12,\n            border: \"1px solid #ddd\",\n            borderRadius: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: m.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), \" \", occupied ? \"Occupied\" : \"Free\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Remaining:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), \" \", fmtSeconds(totalSec)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Queue:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), \" \", queue.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => joinQueue(m.id),\n              disabled: isOwner || isFirstInQueue,\n              children: \"Join Queue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startWashing(m.id),\n              disabled: !(isOwner || !occupied && isFirstInQueue),\n              style: {\n                marginLeft: 8\n              },\n              children: isOwner ? \"Start/Extend\" : \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, m.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Sm0D3nLDNI8OT/4oLTFACFwBwEY=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Client","jsxDEV","_jsxDEV","Dashboard","_s","_users$find","machines","setMachines","users","setUsers","id","name","currentUserId","setCurrentUserId","clientRef","socket","client","webSocketFactory","reconnectDelay","onConnect","subscribe","msg","JSON","parse","body","e","console","error","payload","handleNotification","activate","current","fetchMachines","deactivate","fetch","then","r","json","data","catch","remainingSeconds","endTime","diff","Math","floor","Date","getTime","now","fmtSeconds","totalSec","mins","secs","type","Number","userId","minutesUntilStart","machineName","machineId","alert","addNewUser","prompt","some","u","prev","totalRemainingSecondsForMachine","m","_m$queue","total","inUse","queue","length","forEach","q","minutes","joinQueue","machine","find","userInAnyMachine","mm","queueEntries","queueStr","userObj","idx","minutesStr","parseInt","totalWaitSec","ok","window","confirm","ceil","res","method","headers","stringify","j","position","startWashing","started","className","children","style","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","onClick","gap","flexWrap","marginTop","map","occupied","isOwner","isFirstInQueue","width","padding","border","borderRadius","disabled","marginLeft","_c","$RefreshReg$"],"sources":["/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\n\nexport default function Dashboard() {\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{ id: 1, name: \"User1\" }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const clientRef = useRef(null);\n\n  useEffect(() => {\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        client.subscribe(\"/topic/machines\", (msg) => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n\n        client.subscribe(\"/topic/notifications\", (msg) => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n      },\n    });\n    client.activate();\n    clientRef.current = client;\n\n    fetchMachines();\n\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n    };\n  }, []);\n\n  function fetchMachines() {\n    fetch(\"http://localhost:8080/api/machines\")\n      .then((r) => r.json())\n      .then((data) => setMachines(data))\n      .catch((e) => console.error(\"fetch machines\", e));\n  }\n\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"-\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n\n    const mins = payload.minutesUntilStart;\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n    alert(\n      `ðŸ”” Hey! Your turn on ${machineName} will start in about ${mins} minute(s). Get ready!`\n    );\n  }\n\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name) return;\n    if (users.some((u) => u.name === name)) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers((prev) => [...prev, { id, name }]);\n    setCurrentUserId(id);\n  }\n\n  function totalRemainingSecondsForMachine(m) {\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if (m.queue?.length) {\n      m.queue.forEach((q) => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n\n  async function joinQueue(machineId) {\n    const machine = machines.find((m) => m.id === machineId);\n    if (!machine) return;\n\n    const userInAnyMachine = machines.some(\n      (mm) =>\n        Number(mm.currentUserId) === currentUserId ||\n        (mm.queue && mm.queue.some((q) => q.userId === currentUserId))\n    );\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n\n    const queueEntries = machine.queue || [];\n    let queueStr = \"\";\n    if (machine.inUse && machine.currentUserId) {\n      const userObj = users.find((u) => u.id === machine.currentUserId);\n      queueStr += `Current: ${\n        userObj ? userObj.name : \"User\" + machine.currentUserId\n      } â€” remaining ${fmtSeconds(remainingSeconds(machine.endTime))}\\n`;\n    }\n    queueEntries.forEach((q, idx) => {\n      const userObj = users.find((u) => u.id === q.userId);\n      queueStr += `${idx + 1}. ${userObj ? userObj.name : \"User\" + q.userId} â€” ${\n        q.minutes\n      } min\\n`;\n    });\n\n    const minutesStr = prompt(\n      `Queue:\\n${queueStr || \"No queued users\"}\\n\\nEnter your wash duration (minutes):`,\n      \"50\"\n    );\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    queueEntries.forEach((q) => (totalWaitSec += (q.minutes || 50) * 60));\n\n    const ok = window.confirm(\n      `Total wait before your turn: ${Math.ceil(totalWaitSec / 60)} minutes.\\nJoin queue?`\n    );\n    if (!ok) return;\n\n    const res = await fetch(\"http://localhost:8080/api/machines/join\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ machineId, userId: currentUserId, minutes }),\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);\n    else {\n      alert(\n        `Joined queue. Position: ${j.position}. You will be notified 2 minutes before your turn.`\n      );\n      fetchMachines();\n    }\n  }\n\n  async function startWashing(machineId) {\n    const minutesStr = prompt(\"Enter minutes for wash (minutes)\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n\n    const res = await fetch(\"http://localhost:8080/api/machines/start\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ machineId, userId: currentUserId, minutes }),\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);\n    else if (j.started) {\n      alert(\"Started: ends at \" + j.endTime);\n      fetchMachines();\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <div\n        className=\"header\"\n        style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}\n      >\n        <div>\n          <h3>WashSimple â€” user: {users.find((u) => u.id === currentUserId)?.name}</h3>\n        </div>\n        <div>\n          <button onClick={addNewUser}>Add New User</button>\n        </div>\n      </div>\n\n      <div style={{ display: \"flex\", gap: 12, flexWrap: \"wrap\", marginTop: 16 }}>\n        {machines.map((m) => {\n          const totalSec = totalRemainingSecondsForMachine(m);\n          const occupied = m.inUse;\n          const isOwner = Number(m.currentUserId) === currentUserId;\n\n          const queue = m.queue || [];\n          const isFirstInQueue = queue.length > 0 && queue[0].userId === currentUserId;\n\n          return (\n            <div\n              key={m.id}\n              className=\"card\"\n              style={{ width: 220, padding: 12, border: \"1px solid #ddd\", borderRadius: 6 }}\n            >\n              <h4>{m.name}</h4>\n              <div>\n                <b>Status:</b> {occupied ? \"Occupied\" : \"Free\"}\n              </div>\n              <div>\n                <b>Remaining:</b> {fmtSeconds(totalSec)}\n              </div>\n              <div>\n                <b>Queue:</b> {queue.length}\n              </div>\n              <div style={{ marginTop: 10 }}>\n                <button onClick={() => joinQueue(m.id)} disabled={isOwner || isFirstInQueue}>\n                  Join Queue\n                </button>\n                <button\n                  onClick={() => startWashing(m.id)}\n                  disabled={!(isOwner || (!occupied && isFirstInQueue))}\n                  style={{ marginLeft: 8 }}\n                >\n                  {isOwner ? \"Start/Extend\" : \"Start\"}\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}