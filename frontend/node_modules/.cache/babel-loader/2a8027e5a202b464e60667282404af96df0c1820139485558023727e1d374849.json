{"ast":null,"code":"var _jsxFileName = \"/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  var _users$find;\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: \"User1\"\n  }]);\n  const [currentUserId, setCurrentUserId] = useState(() => {\n    const savedId = localStorage.getItem(\"currentUserId\");\n    return savedId ? Number(savedId) : 1;\n  });\n  const clientRef = useRef(null);\n  useEffect(() => {\n    localStorage.setItem(\"currentUserId\", currentUserId);\n  }, [currentUserId]);\n  useEffect(() => {\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        client.subscribe(\"/topic/machines\", msg => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n        client.subscribe(\"/topic/notifications\", msg => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n    fetchMachines();\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n    };\n  }, []);\n  function fetchMachines() {\n    fetch(\"http://localhost:8080/api/machines\").then(r => r.json()).then(data => setMachines(data)).catch(e => console.error(\"fetch machines\", e));\n  }\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"-\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n    const mins = payload.minutesUntilStart;\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n    alert(`ðŸ”” Hey! Your turn on ${machineName} will start in about ${mins} minute(s). Get ready!`);\n  }\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name) return;\n    if (users.some(u => u.name === name)) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, {\n      id,\n      name\n    }]);\n    setCurrentUserId(id);\n  }\n  function selectUser(id) {\n    setCurrentUserId(id);\n  }\n  function totalRemainingSecondsForMachine(m) {\n    var _m$queue;\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if ((_m$queue = m.queue) !== null && _m$queue !== void 0 && _m$queue.length) {\n      m.queue.forEach(q => total += (q.minutes || 50) * 60);\n    }\n    return total;\n  }\n  async function joinQueue(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n    const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === currentUserId || mm.queue && mm.queue.some(q => q.userId === currentUserId));\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n    const queueEntries = machine.queue || [];\n    let queueStr = \"\";\n    if (machine.inUse && machine.currentUserId) {\n      const userObj = users.find(u => u.id === machine.currentUserId);\n      queueStr += `Current: ${userObj ? userObj.name : \"User\" + machine.currentUserId} â€” remaining ${fmtSeconds(remainingSeconds(machine.endTime))}\\n`;\n    }\n    queueEntries.forEach((q, idx) => {\n      const userObj = users.find(u => u.id === q.userId);\n      queueStr += `${idx + 1}. ${userObj ? userObj.name : \"User\" + q.userId} â€” ${q.minutes} min\\n`;\n    });\n    const minutesStr = prompt(`Queue:\\n${queueStr || \"No queued users\"}\\n\\nEnter your wash duration (minutes):`, \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    queueEntries.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n    const ok = window.confirm(`Total wait before your turn: ${Math.ceil(totalWaitSec / 60)} minutes.\\nJoin queue?`);\n    if (!ok) return;\n    const res = await fetch(\"http://localhost:8080/api/machines/join\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        machineId,\n        userId: currentUserId,\n        minutes\n      })\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);else {\n      alert(`Joined queue. Position: ${j.position}. You will be notified 2 minutes before your turn.`);\n      fetchMachines();\n    }\n  }\n  async function startWashing(machineId) {\n    const minutesStr = prompt(\"Enter minutes for wash (minutes)\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n    const res = await fetch(\"http://localhost:8080/api/machines/start\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        machineId,\n        userId: currentUserId,\n        minutes\n      })\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);else if (j.started) {\n      alert(\"Started: ends at \" + j.endTime);\n      fetchMachines();\n    }\n  }\n\n  // Get all queues for current user\n  function getCurrentUserQueues() {\n    return machines.filter(m => m.currentUserId === currentUserId || m.queue && m.queue.some(q => q.userId === currentUserId)).map(m => {\n      var _m$queue$findIndex, _m$queue2;\n      const queueIndex = (_m$queue$findIndex = (_m$queue2 = m.queue) === null || _m$queue2 === void 0 ? void 0 : _m$queue2.findIndex(q => q.userId === currentUserId)) !== null && _m$queue$findIndex !== void 0 ? _m$queue$findIndex : -1;\n      const inUse = m.inUse && m.currentUserId === currentUserId;\n      const totalWaitSec = totalRemainingSecondsForMachine(m);\n      return {\n        ...m,\n        queueIndex,\n        inUse,\n        totalWaitSec\n      };\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"WashSimple \\u2014 Current User: \", (_users$find = users.find(u => u.id === currentUserId)) === null || _users$find === void 0 ? void 0 : _users$find.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Your Queues:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: getCurrentUserQueues().map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [m.name, \" \\u2014 \", m.inUse ? `Currently Washing (${fmtSeconds(remainingSeconds(m.endTime))})` : `Queued at position ${m.queueIndex + 1} (wait ~${Math.ceil(m.totalWaitSec / 60)} min)`]\n            }, m.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewUser,\n          children: \"Add New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: currentUserId,\n          onChange: e => selectUser(Number(e.target.value)),\n          style: {\n            marginLeft: 8\n          },\n          children: users.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u.id,\n            children: u.name\n          }, u.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 12,\n        marginTop: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: 12,\n          flexWrap: \"wrap\"\n        },\n        children: machines.map(m => {\n          var _m$queue3;\n          const totalSec = totalRemainingSecondsForMachine(m);\n          const occupied = totalSec > 0;\n          const isOwner = Number(m.currentUserId) === currentUserId;\n          const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === currentUserId || mm.queue && mm.queue.some(q => q.userId === currentUserId));\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            style: {\n              width: 220,\n              padding: 12,\n              border: \"1px solid #ddd\",\n              borderRadius: 6\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: m.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 22\n              }, this), \" \", occupied ? \"Occupied\" : \"Free\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Remaining:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 22\n              }, this), \" \", fmtSeconds(totalSec)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Queue:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 22\n              }, this), \" \", ((_m$queue3 = m.queue) === null || _m$queue3 === void 0 ? void 0 : _m$queue3.length) || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => joinQueue(m.id),\n                disabled: userInAnyMachine || isOwner,\n                children: \"Join Queue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => startWashing(m.id),\n                disabled: !isOwner && userInAnyMachine || occupied,\n                style: {\n                  marginLeft: 8\n                },\n                children: isOwner ? \"Start/Extend\" : \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)]\n          }, m.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 300,\n          border: \"1px solid #ccc\",\n          padding: 12,\n          borderRadius: 6,\n          background: \"#f9f9f9\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"All Machines Queue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), machines.map(m => {\n          var _users$find2, _m$queue4;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 12,\n              padding: 8,\n              border: \"1px solid #ddd\",\n              borderRadius: 4,\n              background: \"#fff\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: m.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                paddingLeft: 20\n              },\n              children: [m.inUse && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Currently: \", ((_users$find2 = users.find(u => u.id === m.currentUserId)) === null || _users$find2 === void 0 ? void 0 : _users$find2.name) || \"User\" + m.currentUserId, \" \\u2014 \", fmtSeconds(remainingSeconds(m.endTime))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 29\n              }, this), (_m$queue4 = m.queue) === null || _m$queue4 === void 0 ? void 0 : _m$queue4.map((q, idx) => {\n                var _users$find3;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [idx === 0 && !m.inUse ? \"Currently: \" : idx === 0 ? \"Next: \" : `${idx + 1}. `, ((_users$find3 = users.find(u => u.id === q.userId)) === null || _users$find3 === void 0 ? void 0 : _users$find3.name) || \"User\" + q.userId, \" \\u2014 \", q.minutes, \" min\"]\n                }, q.userId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this);\n              }), !m.inUse && (!m.queue || m.queue.length === 0) && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Free\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 68\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this)]\n          }, m.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"44OAQP4+vLG5Tu3i9esEcR5rqtc=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Client","jsxDEV","_jsxDEV","Dashboard","_s","_users$find","machines","setMachines","users","setUsers","id","name","currentUserId","setCurrentUserId","savedId","localStorage","getItem","Number","clientRef","setItem","socket","client","webSocketFactory","reconnectDelay","onConnect","subscribe","msg","JSON","parse","body","e","console","error","payload","handleNotification","activate","current","fetchMachines","deactivate","fetch","then","r","json","data","catch","remainingSeconds","endTime","diff","Math","floor","Date","getTime","now","fmtSeconds","totalSec","mins","secs","type","userId","minutesUntilStart","machineName","machineId","alert","addNewUser","prompt","some","u","prev","selectUser","totalRemainingSecondsForMachine","m","_m$queue","total","inUse","queue","length","forEach","q","minutes","joinQueue","machine","find","userInAnyMachine","mm","queueEntries","queueStr","userObj","idx","minutesStr","parseInt","totalWaitSec","ok","window","confirm","ceil","res","method","headers","stringify","j","position","startWashing","started","getCurrentUserQueues","filter","map","_m$queue$findIndex","_m$queue2","queueIndex","findIndex","className","style","display","flexDirection","children","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","target","marginLeft","gap","marginTop","flexWrap","_m$queue3","occupied","isOwner","width","padding","border","borderRadius","disabled","background","_users$find2","_m$queue4","marginBottom","paddingLeft","_users$find3","_c","$RefreshReg$"],"sources":["/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\n\nexport default function Dashboard() {\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{ id: 1, name: \"User1\" }]);\n  const [currentUserId, setCurrentUserId] = useState(() => {\n    const savedId = localStorage.getItem(\"currentUserId\");\n    return savedId ? Number(savedId) : 1;\n  });\n  const clientRef = useRef(null);\n\n  useEffect(() => {\n    localStorage.setItem(\"currentUserId\", currentUserId);\n  }, [currentUserId]);\n\n  useEffect(() => {\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        client.subscribe(\"/topic/machines\", (msg) => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n\n        client.subscribe(\"/topic/notifications\", (msg) => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n\n    fetchMachines();\n\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n    };\n  }, []);\n\n  function fetchMachines() {\n    fetch(\"http://localhost:8080/api/machines\")\n      .then((r) => r.json())\n      .then((data) => setMachines(data))\n      .catch((e) => console.error(\"fetch machines\", e));\n  }\n\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"-\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n\n    const mins = payload.minutesUntilStart;\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n    alert(`ðŸ”” Hey! Your turn on ${machineName} will start in about ${mins} minute(s). Get ready!`);\n  }\n\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name) return;\n    if (users.some(u => u.name === name)) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, { id, name }]);\n    setCurrentUserId(id);\n  }\n\n  function selectUser(id) {\n    setCurrentUserId(id);\n  }\n\n  function totalRemainingSecondsForMachine(m) {\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if (m.queue?.length) {\n      m.queue.forEach(q => total += (q.minutes || 50) * 60);\n    }\n    return total;\n  }\n\n  async function joinQueue(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    const userInAnyMachine = machines.some(mm =>\n      Number(mm.currentUserId) === currentUserId ||\n      (mm.queue && mm.queue.some(q => q.userId === currentUserId))\n    );\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n\n    const queueEntries = machine.queue || [];\n    let queueStr = \"\";\n    if (machine.inUse && machine.currentUserId) {\n      const userObj = users.find(u => u.id === machine.currentUserId);\n      queueStr += `Current: ${userObj ? userObj.name : \"User\" + machine.currentUserId} â€” remaining ${fmtSeconds(remainingSeconds(machine.endTime))}\\n`;\n    }\n    queueEntries.forEach((q, idx) => {\n      const userObj = users.find(u => u.id === q.userId);\n      queueStr += `${idx + 1}. ${userObj ? userObj.name : \"User\" + q.userId} â€” ${q.minutes} min\\n`;\n    });\n\n    const minutesStr = prompt(`Queue:\\n${queueStr || \"No queued users\"}\\n\\nEnter your wash duration (minutes):`, \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    queueEntries.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n\n    const ok = window.confirm(`Total wait before your turn: ${Math.ceil(totalWaitSec / 60)} minutes.\\nJoin queue?`);\n    if (!ok) return;\n\n    const res = await fetch(\"http://localhost:8080/api/machines/join\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);\n    else {\n      alert(`Joined queue. Position: ${j.position}. You will be notified 2 minutes before your turn.`);\n      fetchMachines();\n    }\n  }\n\n  async function startWashing(machineId) {\n    const minutesStr = prompt(\"Enter minutes for wash (minutes)\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n\n    const res = await fetch(\"http://localhost:8080/api/machines/start\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);\n    else if (j.started) {\n      alert(\"Started: ends at \" + j.endTime);\n      fetchMachines();\n    }\n  }\n\n  // Get all queues for current user\n  function getCurrentUserQueues() {\n    return machines.filter(m =>\n      (m.currentUserId === currentUserId) ||\n      (m.queue && m.queue.some(q => q.userId === currentUserId))\n    ).map(m => {\n      const queueIndex = m.queue?.findIndex(q => q.userId === currentUserId) ?? -1;\n      const inUse = m.inUse && m.currentUserId === currentUserId;\n      const totalWaitSec = totalRemainingSecondsForMachine(m);\n      return { ...m, queueIndex, inUse, totalWaitSec };\n    });\n  }\n\n  return (\n    <div className=\"container\" style={{display:\"flex\", flexDirection:\"column\"}}>\n      {/* Top Header */}\n      <div className=\"header\" style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\n        <div>\n          <h3>WashSimple â€” Current User: {users.find(u => u.id === currentUserId)?.name}</h3>\n          <div>\n            <b>Your Queues:</b>\n            <ul>\n              {getCurrentUserQueues().map(m => (\n                <li key={m.id}>\n                  {m.name} â€” {m.inUse ? `Currently Washing (${fmtSeconds(remainingSeconds(m.endTime))})` :\n                    `Queued at position ${m.queueIndex + 1} (wait ~${Math.ceil(m.totalWaitSec / 60)} min)` }\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <div>\n          <button onClick={addNewUser}>Add New User</button>\n          <select value={currentUserId} onChange={(e) => selectUser(Number(e.target.value))} style={{marginLeft:8}}>\n            {users.map(u => <option key={u.id} value={u.id}>{u.name}</option>)}\n          </select>\n        </div>\n      </div>\n\n      {/* Main content */}\n      <div style={{display:\"flex\", gap:12, marginTop:16}}>\n        {/* Machines cards */}\n        <div style={{display:\"flex\", gap:12, flexWrap:\"wrap\"}}>\n          {machines.map(m => {\n            const totalSec = totalRemainingSecondsForMachine(m);\n            const occupied = totalSec > 0;\n            const isOwner = Number(m.currentUserId) === currentUserId;\n            const userInAnyMachine = machines.some(mm =>\n              Number(mm.currentUserId) === currentUserId ||\n              (mm.queue && mm.queue.some(q => q.userId === currentUserId))\n            );\n\n            return (\n              <div key={m.id} className=\"card\" style={{width:220, padding:12, border:\"1px solid #ddd\", borderRadius:6}}>\n                <h4>{m.name}</h4>\n                <div><b>Status:</b> {occupied ? \"Occupied\" : \"Free\"}</div>\n                <div><b>Remaining:</b> {fmtSeconds(totalSec)}</div>\n                <div><b>Queue:</b> {m.queue?.length || 0}</div>\n\n                <div style={{marginTop:10}}>\n                  <button onClick={() => joinQueue(m.id)} disabled={userInAnyMachine || isOwner}>Join Queue</button>\n                  <button\n                    onClick={() => startWashing(m.id)}\n                    disabled={(!isOwner && userInAnyMachine) || occupied}\n                    style={{ marginLeft: 8 }}\n                  >\n                    {isOwner ? \"Start/Extend\" : \"Start\"}\n                  </button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Right panel */}\n        <div style={{width:300, border:\"1px solid #ccc\", padding:12, borderRadius:6, background:\"#f9f9f9\"}}>\n          <h4>All Machines Queue</h4>\n          {machines.map(m => (\n            <div key={m.id} style={{marginBottom:12, padding:8, border:\"1px solid #ddd\", borderRadius:4, background:\"#fff\"}}>\n              <b>{m.name}</b>\n              <ul style={{paddingLeft:20}}>\n                {m.inUse && <li>Currently: {users.find(u => u.id === m.currentUserId)?.name || \"User\"+m.currentUserId} â€” {fmtSeconds(remainingSeconds(m.endTime))}</li>}\n                {m.queue?.map((q, idx) => (\n                  <li key={q.userId}>\n                    {idx===0 && !m.inUse ? \"Currently: \" : idx===0 ? \"Next: \" : `${idx+1}. `}\n                    {users.find(u => u.id === q.userId)?.name || \"User\"+q.userId} â€” {q.minutes} min\n                  </li>\n                ))}\n                {(!m.inUse && (!m.queue || m.queue.length===0)) && <li>Free</li>}\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}