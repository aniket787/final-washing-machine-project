{"ast":null,"code":"var _jsxFileName = \"/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.NODE_ENV === 'production' ? '' : 'http://localhost:8080';\nexport default function Dashboard() {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: \"User1\"\n  }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const [notifications, setNotifications] = useState([]);\n  const [completedWashes, setCompletedWashes] = useState(new Set());\n  const [queueOpenMobile, setQueueOpenMobile] = useState(false);\n  const clientRef = useRef(null);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    fetch(`${API_BASE}/api/machines/reset`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).catch(e => console.error(\"Reset failed\", e));\n    const socket = new SockJS(`${API_BASE}/ws`);\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        console.log(\"WebSocket connected\");\n        client.subscribe(\"/topic/machines\", msg => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n        client.subscribe(\"/topic/notifications\", msg => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n        client.subscribe(\"/topic/washHistory\", msg => {\n          try {\n            const completedUsers = JSON.parse(msg.body);\n            setCompletedWashes(new Set(completedUsers));\n          } catch (e) {\n            console.error(\"parse wash history\", e);\n          }\n        });\n      },\n      onStompError: frame => {\n        console.error('STOMP error', frame);\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n    fetchMachines();\n    intervalRef.current = setInterval(() => {\n      setMachines(prev => [...prev]);\n    }, 1000);\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"default\") {\n      Notification.requestPermission();\n    }\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, []);\n  function fetchMachines() {\n    fetch(`${API_BASE}/api/machines`).then(r => {\n      if (!r.ok) throw new Error('Network response was not ok');\n      return r.json();\n    }).then(data => setMachines(data)).catch(e => console.error(\"fetch machines\", e));\n  }\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"0m 0s\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n    const mins = Math.ceil(payload.minutesUntilStart);\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n    const notifMsg = `Your turn on ${machineName} starts in ${mins} minute(s)!`;\n    setNotifications(prev => [...prev, {\n      id: Date.now(),\n      message: notifMsg,\n      machineId: payload.machineId\n    }]);\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== Date.now()));\n    }, 10000);\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"granted\") {\n      new Notification(\"WashSimple\", {\n        body: notifMsg,\n        icon: \"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='75' font-size='80'>💧</text></svg>\"\n      });\n    }\n  }\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name || !name.trim()) return;\n    if (users.some(u => u.name === name.trim())) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, {\n      id,\n      name: name.trim()\n    }]);\n    setCurrentUserId(id);\n  }\n  function totalRemainingSecondsForMachine(m) {\n    var _m$queue;\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if ((_m$queue = m.queue) !== null && _m$queue !== void 0 && _m$queue.length) {\n      m.queue.forEach(q => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n  function remainingSecondsForUser(m, userId) {\n    var _m$queue2;\n    let total = 0;\n    if (m.inUse && Number(m.currentUserId) === Number(userId)) {\n      return remainingSeconds(m.endTime);\n    }\n    if (m.inUse && m.endTime) {\n      total += remainingSeconds(m.endTime);\n    }\n    if ((_m$queue2 = m.queue) !== null && _m$queue2 !== void 0 && _m$queue2.length) {\n      for (let q of m.queue) {\n        if (Number(q.userId) === Number(userId)) break;\n        total += (q.minutes || 50) * 60;\n      }\n    }\n    return total;\n  }\n  function getCurrentUserQueues() {\n    return machines.filter(m => Number(m.currentUserId) === Number(currentUserId) || m.queue && m.queue.some(q => Number(q.userId) === Number(currentUserId)));\n  }\n  async function joinQueue(machineId) {\n    var _machine$queue, _machine$queue2;\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n    const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === Number(currentUserId) || mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)));\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n    const minutesStr = prompt(\"Enter your wash duration (minutes):\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    (_machine$queue = machine.queue) === null || _machine$queue === void 0 ? void 0 : _machine$queue.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n    const ok = window.confirm(`Machine: ${machine.name}\\n` + `Current queue: ${((_machine$queue2 = machine.queue) === null || _machine$queue2 === void 0 ? void 0 : _machine$queue2.length) || 0} user(s)\\n` + `Estimated wait: ${Math.ceil(totalWaitSec / 60)} minutes\\n\\n` + `Join queue?`);\n    if (!ok) return;\n    try {\n      const res = await fetch(`${API_BASE}/api/machines/join`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          machineId,\n          userId: currentUserId,\n          minutes\n        })\n      });\n      if (!res.ok) throw new Error('Failed to join queue');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else {\n        alert(`Joined queue at position ${j.position}. You'll be notified 2 minutes before your turn.`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error joining queue:\", error);\n      alert(\"Failed to join queue. Please try again.\");\n    }\n  }\n  async function startWashing(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n    const minutesStr = prompt(\"Enter minutes for wash:\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n    try {\n      const res = await fetch(`${API_BASE}/api/machines/start`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          machineId,\n          userId: currentUserId,\n          minutes\n        })\n      });\n      if (!res.ok) throw new Error('Failed to start washing');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else if (j.started) {\n        alert(`Wash started! Will end at ${new Date(j.endTime).toLocaleTimeString()}`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error starting wash:\", error);\n      alert(\"Failed to start washing. Please try again.\");\n    }\n  }\n  const currentUserQueues = getCurrentUserQueues();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-wrapper\",\n    style: {\n      position: 'relative'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: '20px',\n          right: '20px',\n          zIndex: 1000,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '12px'\n        },\n        children: notifications.map(notif => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n            color: 'white',\n            padding: '16px 20px',\n            borderRadius: '12px',\n            boxShadow: '0 8px 24px rgba(16, 185, 129, 0.4)',\n            maxWidth: '320px',\n            animation: 'slideIn 0.3s ease-out',\n            fontWeight: '600'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '20px'\n              },\n              children: \"\\uD83D\\uDD14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: notif.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this)\n        }, notif.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"header-title-icon\",\n              children: \"\\uD83D\\uDCA7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"WashSimple\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"header-controls-icon\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: currentUserId,\n              onChange: e => setCurrentUserId(Number(e.target.value)),\n              className: \"user-select\",\n              children: users.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: u.id,\n                children: u.name\n              }, u.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addNewUser,\n              className: \"add-user-btn\",\n              children: \"+ Add User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setQueueOpenMobile(!queueOpenMobile),\n              style: {\n                display: 'inline-block',\n                marginLeft: '10px',\n                fontSize: '24px',\n                background: 'none',\n                border: 'none',\n                cursor: 'pointer'\n              },\n              children: \"\\u2630\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), completedWashes.has(currentUserId) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%)',\n            padding: '20px',\n            borderRadius: '12px',\n            border: '1px solid #10b981',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              gap: '10px',\n              marginBottom: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '24px'\n              },\n              children: \"\\u2705\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              style: {\n                color: '#065f46',\n                fontSize: '16px'\n              },\n              children: \"Wash Completed!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#047857',\n              fontSize: '14px',\n              fontWeight: '500'\n            },\n            children: \"You have already washed your clothes today.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this) : currentUserQueues.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"active-sessions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"active-sessions-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"active-sessions-label-icon\",\n              children: \"\\uD83D\\uDD14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Your Active Sessions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this), currentUserQueues.map(m => {\n            var _m$queue3;\n            const waitSec = remainingSecondsForUser(m, currentUserId);\n            const isWashing = Number(m.currentUserId) === Number(currentUserId) && m.inUse;\n            const queueIndex = (_m$queue3 = m.queue) === null || _m$queue3 === void 0 ? void 0 : _m$queue3.findIndex(q => Number(q.userId) === Number(currentUserId));\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `session-card ${isWashing ? 'session-card-washing' : 'session-card-queued'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: m.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-card-details\",\n                children: isWashing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"\\uD83D\\uDD04 Washing \\u2022 \", fmtSeconds(waitSec), \" left\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"\\u23F3 Position \", queueIndex + 1, \" \\u2022 ~\", Math.ceil(waitSec / 60), \" min wait\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this)]\n            }, m.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-sessions\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"no-sessions-icon\",\n            children: \"\\uD83D\\uDE0A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-sessions-text\",\n            children: \"No active sessions. Start a wash or join a queue below!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"machine-grid\",\n          style: {\n            flex: 1\n          },\n          children: machines.map(m => {\n            const totalSec = totalRemainingSecondsForMachine(m);\n            const occupied = totalSec > 0;\n            const isOwner = Number(m.currentUserId) === Number(currentUserId);\n            const hasCompletedWash = completedWashes.has(currentUserId);\n            const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === Number(currentUserId) || mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)));\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"machine-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"machine-card-name\",\n                children: m.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"machine-card-status\",\n                children: occupied ? `Occupied • ~${Math.ceil(totalSec / 60)} min left` : \"Available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"machine-card-buttons\",\n                children: [!occupied && !hasCompletedWash && !userInAnyMachine && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => startWashing(m.id),\n                  children: \"Start Wash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 23\n                }, this), !isOwner && !hasCompletedWash && !userInAnyMachine && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => joinQueue(m.id),\n                  children: \"Join Queue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this)]\n            }, m.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `queue-panel ${queueOpenMobile ? 'show-mobile' : ''}`,\n          style: {\n            position: 'fixed',\n            right: queueOpenMobile ? '0' : '-300px',\n            top: '0',\n            width: '300px',\n            height: '100%',\n            backgroundColor: '#f3f4f6',\n            boxShadow: '-2px 0 8px rgba(0,0,0,0.1)',\n            padding: '20px',\n            transition: 'right 0.3s ease-in-out',\n            zIndex: 900\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"All Queues\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), machines.map(m => {\n            var _m$queue4;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '16px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: m.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this), ((_m$queue4 = m.queue) === null || _m$queue4 === void 0 ? void 0 : _m$queue4.length) > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: m.queue.map(q => {\n                  var _users$find;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: ((_users$find = users.find(u => u.id === Number(q.userId))) === null || _users$find === void 0 ? void 0 : _users$find.name) || q.userId\n                  }, q.userId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#6b7280'\n                },\n                children: \"No queue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 19\n              }, this)]\n            }, m.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"5nYZ9u0pcxiEIM9qFXZ87L2Srss=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Client","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","process","env","NODE_ENV","Dashboard","_s","machines","setMachines","users","setUsers","id","name","currentUserId","setCurrentUserId","notifications","setNotifications","completedWashes","setCompletedWashes","Set","queueOpenMobile","setQueueOpenMobile","clientRef","intervalRef","fetch","method","headers","catch","e","console","error","socket","client","webSocketFactory","reconnectDelay","onConnect","log","subscribe","msg","JSON","parse","body","payload","handleNotification","completedUsers","onStompError","frame","activate","current","fetchMachines","setInterval","prev","Notification","permission","requestPermission","deactivate","clearInterval","then","r","ok","Error","json","data","remainingSeconds","endTime","diff","Math","floor","Date","getTime","now","fmtSeconds","totalSec","mins","secs","type","Number","userId","ceil","minutesUntilStart","machineName","machineId","notifMsg","message","setTimeout","filter","n","icon","addNewUser","prompt","trim","some","u","alert","totalRemainingSecondsForMachine","m","_m$queue","total","inUse","queue","length","forEach","q","minutes","remainingSecondsForUser","_m$queue2","getCurrentUserQueues","joinQueue","_machine$queue","_machine$queue2","machine","find","has","userInAnyMachine","mm","minutesStr","parseInt","isNaN","totalWaitSec","window","confirm","res","stringify","j","position","startWashing","started","toLocaleTimeString","currentUserQueues","className","style","children","top","right","zIndex","display","flexDirection","gap","map","notif","background","color","padding","borderRadius","boxShadow","maxWidth","animation","fontWeight","alignItems","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","onClick","marginLeft","border","cursor","textAlign","justifyContent","marginBottom","_m$queue3","waitSec","isWashing","queueIndex","findIndex","flex","occupied","isOwner","hasCompletedWash","width","height","backgroundColor","transition","_m$queue4","_users$find","_c","$RefreshReg$"],"sources":["/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\n\nconst API_BASE = process.env.NODE_ENV === 'production' ? '' : 'http://localhost:8080';\n\nexport default function Dashboard() {\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{ id: 1, name: \"User1\" }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const [notifications, setNotifications] = useState([]);\n  const [completedWashes, setCompletedWashes] = useState(new Set());\n  const [queueOpenMobile, setQueueOpenMobile] = useState(false);\n  const clientRef = useRef(null);\n  const intervalRef = useRef(null);\n\n  useEffect(() => {\n    fetch(`${API_BASE}/api/machines/reset`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" }\n    }).catch(e => console.error(\"Reset failed\", e));\n\n    const socket = new SockJS(`${API_BASE}/ws`);\n\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        console.log(\"WebSocket connected\");\n\n        client.subscribe(\"/topic/machines\", (msg) => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n\n        client.subscribe(\"/topic/notifications\", (msg) => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n\n        client.subscribe(\"/topic/washHistory\", (msg) => {\n          try {\n            const completedUsers = JSON.parse(msg.body);\n            setCompletedWashes(new Set(completedUsers));\n          } catch (e) {\n            console.error(\"parse wash history\", e);\n          }\n        });\n      },\n      onStompError: (frame) => {\n        console.error('STOMP error', frame);\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n\n    fetchMachines();\n\n    intervalRef.current = setInterval(() => {\n      setMachines(prev => [...prev]);\n    }, 1000);\n\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"default\") {\n      Notification.requestPermission();\n    }\n\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  function fetchMachines() {\n    fetch(`${API_BASE}/api/machines`)\n      .then((r) => {\n        if (!r.ok) throw new Error('Network response was not ok');\n        return r.json();\n      })\n      .then((data) => setMachines(data))\n      .catch((e) => console.error(\"fetch machines\", e));\n  }\n\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"0m 0s\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n\n    const mins = Math.ceil(payload.minutesUntilStart);\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n\n    const notifMsg = `Your turn on ${machineName} starts in ${mins} minute(s)!`;\n\n    setNotifications(prev => [...prev, {\n      id: Date.now(),\n      message: notifMsg,\n      machineId: payload.machineId\n    }]);\n\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== Date.now()));\n    }, 10000);\n\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"granted\") {\n      new Notification(\"WashSimple\", {\n        body: notifMsg,\n        icon: \"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='75' font-size='80'>💧</text></svg>\"\n      });\n    }\n  }\n\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name || !name.trim()) return;\n    if (users.some(u => u.name === name.trim())) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, { id, name: name.trim() }]);\n    setCurrentUserId(id);\n  }\n\n  function totalRemainingSecondsForMachine(m) {\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if (m.queue?.length) {\n      m.queue.forEach(q => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n\n  function remainingSecondsForUser(m, userId) {\n    let total = 0;\n\n    if (m.inUse && Number(m.currentUserId) === Number(userId)) {\n      return remainingSeconds(m.endTime);\n    }\n\n    if (m.inUse && m.endTime) {\n      total += remainingSeconds(m.endTime);\n    }\n\n    if (m.queue?.length) {\n      for (let q of m.queue) {\n        if (Number(q.userId) === Number(userId)) break;\n        total += (q.minutes || 50) * 60;\n      }\n    }\n\n    return total;\n  }\n\n  function getCurrentUserQueues() {\n    return machines.filter(m =>\n      Number(m.currentUserId) === Number(currentUserId) ||\n      (m.queue && m.queue.some(q => Number(q.userId) === Number(currentUserId)))\n    );\n  }\n\n  async function joinQueue(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n\n    const userInAnyMachine = machines.some(mm =>\n      Number(mm.currentUserId) === Number(currentUserId) ||\n      (mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)))\n    );\n\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n\n    const minutesStr = prompt(\"Enter your wash duration (minutes):\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    machine.queue?.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n\n    const ok = window.confirm(\n      `Machine: ${machine.name}\\n` +\n      `Current queue: ${machine.queue?.length || 0} user(s)\\n` +\n      `Estimated wait: ${Math.ceil(totalWaitSec/60)} minutes\\n\\n` +\n      `Join queue?`\n    );\n    if (!ok) return;\n\n    try {\n      const res = await fetch(`${API_BASE}/api/machines/join`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n      });\n      if (!res.ok) throw new Error('Failed to join queue');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else {\n        alert(`Joined queue at position ${j.position}. You'll be notified 2 minutes before your turn.`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error joining queue:\", error);\n      alert(\"Failed to join queue. Please try again.\");\n    }\n  }\n\n  async function startWashing(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n\n    const minutesStr = prompt(\"Enter minutes for wash:\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n\n    try {\n      const res = await fetch(`${API_BASE}/api/machines/start`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n      });\n      if (!res.ok) throw new Error('Failed to start washing');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else if (j.started) {\n        alert(`Wash started! Will end at ${new Date(j.endTime).toLocaleTimeString()}`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error starting wash:\", error);\n      alert(\"Failed to start washing. Please try again.\");\n    }\n  }\n\n  const currentUserQueues = getCurrentUserQueues();\n\n  return (\n    <div className=\"dashboard-wrapper\" style={{ position: 'relative' }}>\n      <div className=\"container\">\n        {notifications.length > 0 && (\n          <div style={{\n            position: 'fixed',\n            top: '20px',\n            right: '20px',\n            zIndex: 1000,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '12px'\n          }}>\n            {notifications.map(notif => (\n              <div key={notif.id} style={{\n                background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n                color: 'white',\n                padding: '16px 20px',\n                borderRadius: '12px',\n                boxShadow: '0 8px 24px rgba(16, 185, 129, 0.4)',\n                maxWidth: '320px',\n                animation: 'slideIn 0.3s ease-out',\n                fontWeight: '600'\n              }}>\n                <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                  <span style={{ fontSize: '20px' }}>🔔</span>\n                  <span>{notif.message}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        <div className=\"header-card\">\n          <div className=\"header\">\n            <div className=\"header-title\">\n              <span className=\"header-title-icon\">💧</span>\n              <h1>WashSimple</h1>\n            </div>\n            <div className=\"header-controls\">\n              <span className=\"header-controls-icon\">👤</span>\n              <select\n                value={currentUserId}\n                onChange={(e) => setCurrentUserId(Number(e.target.value))}\n                className=\"user-select\"\n              >\n                {users.map(u => (\n                  <option key={u.id} value={u.id}>{u.name}</option>\n                ))}\n              </select>\n              <button onClick={addNewUser} className=\"add-user-btn\">\n                + Add User\n              </button>\n\n              {/* Hamburger button for mobile */}\n              <button\n                onClick={() => setQueueOpenMobile(!queueOpenMobile)}\n                style={{\n                  display: 'inline-block',\n                  marginLeft: '10px',\n                  fontSize: '24px',\n                  background: 'none',\n                  border: 'none',\n                  cursor: 'pointer'\n                }}\n              >\n                ☰\n              </button>\n            </div>\n          </div>\n\n          {completedWashes.has(currentUserId) ? (\n            <div style={{\n              background: 'linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%)',\n              padding: '20px',\n              borderRadius: '12px',\n              border: '1px solid #10b981',\n              textAlign: 'center'\n            }}>\n              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '10px', marginBottom: '8px' }}>\n                <span style={{ fontSize: '24px' }}>✅</span>\n                <strong style={{ color: '#065f46', fontSize: '16px' }}>Wash Completed!</strong>\n              </div>\n              <div style={{ color: '#047857', fontSize: '14px', fontWeight: '500' }}>\n                You have already washed your clothes today.\n              </div>\n            </div>\n          ) : currentUserQueues.length > 0 ? (\n            <div className=\"active-sessions\">\n              <div className=\"active-sessions-label\">\n                <span className=\"active-sessions-label-icon\">🔔</span>\n                <strong>Your Active Sessions:</strong>\n              </div>\n              {currentUserQueues.map(m => {\n                const waitSec = remainingSecondsForUser(m, currentUserId);\n                const isWashing = Number(m.currentUserId) === Number(currentUserId) && m.inUse;\n                const queueIndex = m.queue?.findIndex(q => Number(q.userId) === Number(currentUserId));\n\n                return (\n                  <div key={m.id} className={`session-card ${isWashing ? 'session-card-washing' : 'session-card-queued'}`}>\n                    <strong>{m.name}</strong>\n                    <div className=\"session-card-details\">\n                      {isWashing ? (\n                        <>🔄 Washing • {fmtSeconds(waitSec)} left</>\n                      ) : (\n                        <>⏳ Position {queueIndex + 1} • ~{Math.ceil(waitSec / 60)} min wait</>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"no-sessions\">\n              <span className=\"no-sessions-icon\">😊</span>\n              <div className=\"no-sessions-text\">No active sessions. Start a wash or join a queue below!</div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"main-content\" style={{ display: 'flex' }}>\n          <div className=\"machine-grid\" style={{ flex: 1 }}>\n            {machines.map(m => {\n              const totalSec = totalRemainingSecondsForMachine(m);\n              const occupied = totalSec > 0;\n              const isOwner = Number(m.currentUserId) === Number(currentUserId);\n              const hasCompletedWash = completedWashes.has(currentUserId);\n              const userInAnyMachine = machines.some(mm =>\n                Number(mm.currentUserId) === Number(currentUserId) ||\n                (mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)))\n              );\n\n              return (\n                <div key={m.id} className=\"machine-card\">\n                  <div className=\"machine-card-name\">{m.name}</div>\n                  <div className=\"machine-card-status\">\n                    {occupied ? `Occupied • ~${Math.ceil(totalSec / 60)} min left` : \"Available\"}\n                  </div>\n                  <div className=\"machine-card-buttons\">\n                    {!occupied && !hasCompletedWash && !userInAnyMachine && (\n                      <button onClick={() => startWashing(m.id)}>Start Wash</button>\n                    )}\n                    {!isOwner && !hasCompletedWash && !userInAnyMachine && (\n                      <button onClick={() => joinQueue(m.id)}>Join Queue</button>\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          {/* Right-side queue panel for mobile toggle */}\n          <div\n            className={`queue-panel ${queueOpenMobile ? 'show-mobile' : ''}`}\n            style={{\n              position: 'fixed',\n              right: queueOpenMobile ? '0' : '-300px',\n              top: '0',\n              width: '300px',\n              height: '100%',\n              backgroundColor: '#f3f4f6',\n              boxShadow: '-2px 0 8px rgba(0,0,0,0.1)',\n              padding: '20px',\n              transition: 'right 0.3s ease-in-out',\n              zIndex: 900\n            }}\n          >\n            <h3>All Queues</h3>\n            {machines.map(m => (\n              <div key={m.id} style={{ marginBottom: '16px' }}>\n                <strong>{m.name}</strong>\n                {m.queue?.length > 0 ? (\n                  <ul>\n                    {m.queue.map(q => (\n                      <li key={q.userId}>{users.find(u => u.id === Number(q.userId))?.name || q.userId}</li>\n                    ))}\n                  </ul>\n                ) : (\n                  <div style={{ fontSize: '12px', color: '#6b7280' }}>No queue</div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}