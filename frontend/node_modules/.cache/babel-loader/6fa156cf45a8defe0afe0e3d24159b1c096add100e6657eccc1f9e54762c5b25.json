{"ast":null,"code":"var _jsxFileName = \"/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  var _users$find;\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: \"User1\"\n  }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const clientRef = useRef(null);\n  useEffect(() => {\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        client.subscribe(\"/topic/machines\", msg => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n        client.subscribe(\"/topic/notifications\", msg => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n    fetchMachines();\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n    };\n    // eslint-disable-next-line\n  }, []);\n  function fetchMachines() {\n    fetch(\"http://localhost:8080/api/machines\").then(r => r.json()).then(data => setMachines(data)).catch(e => console.error(\"fetch machines\", e));\n  }\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"-\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n    const mins = payload.minutesUntilStart;\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n    alert(`ðŸ”” Hey! Your turn on ${machineName} will start in about ${mins} minute(s). Get ready!`);\n  }\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name) return;\n    if (users.some(u => u.name === name)) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, {\n      id,\n      name\n    }]);\n    setCurrentUserId(id);\n  }\n  function totalRemainingSecondsForMachine(m) {\n    var _m$queue;\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if ((_m$queue = m.queue) !== null && _m$queue !== void 0 && _m$queue.length) {\n      m.queue.forEach(q => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n\n  // NEW: Remaining seconds until this userâ€™s turn\n  function remainingSecondsForUser(m, userId) {\n    var _m$queue2;\n    let total = 0;\n    if (m.inUse && m.currentUserId) {\n      if (m.currentUserId === userId) return remainingSeconds(m.endTime);\n      total += remainingSeconds(m.endTime);\n    }\n    if ((_m$queue2 = m.queue) !== null && _m$queue2 !== void 0 && _m$queue2.length) {\n      for (let q of m.queue) {\n        if (q.userId === userId) break;\n        total += (q.minutes || 50) * 60;\n      }\n      if (m.queue.some(q => q.userId === userId)) {\n        const qUser = m.queue.find(q => q.userId === userId);\n        total += (qUser.minutes || 50) * 60;\n      }\n    }\n    return total;\n  }\n  function getCurrentUserQueues() {\n    return machines.filter(m => m.currentUserId === currentUserId || m.queue && m.queue.some(q => q.userId === currentUserId));\n  }\n  async function joinQueue(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n    const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === currentUserId || mm.queue && mm.queue.some(q => q.userId === currentUserId));\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n    const queueEntries = machine.queue || [];\n    let queueStr = \"\";\n    if (machine.inUse && machine.currentUserId) {\n      const userObj = users.find(u => u.id === machine.currentUserId);\n      queueStr += `Current: ${userObj ? userObj.name : \"User\" + machine.currentUserId} â€” remaining ${fmtSeconds(remainingSeconds(machine.endTime))}\\n`;\n    }\n    queueEntries.forEach((q, idx) => {\n      const userObj = users.find(u => u.id === q.userId);\n      queueStr += `${idx + 1}. ${userObj ? userObj.name : \"User\" + q.userId} â€” ${q.minutes} min\\n`;\n    });\n    const minutesStr = prompt(`Queue:\\n${queueStr || \"No queued users\"}\\n\\nEnter your wash duration (minutes):`, \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    queueEntries.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n    const ok = window.confirm(`Total wait before your turn: ${Math.ceil(totalWaitSec / 60)} minutes.\\nJoin queue?`);\n    if (!ok) return;\n    const res = await fetch(\"http://localhost:8080/api/machines/join\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        machineId,\n        userId: currentUserId,\n        minutes\n      })\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);else {\n      alert(`Joined queue. Position: ${j.position}. You will be notified 2 minutes before your turn.`);\n      fetchMachines();\n    }\n  }\n  async function startWashing(machineId) {\n    const minutesStr = prompt(\"Enter minutes for wash (minutes)\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n    const res = await fetch(\"http://localhost:8080/api/machines/start\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        machineId,\n        userId: currentUserId,\n        minutes\n      })\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);else if (j.started) {\n      alert(\"Started: ends at \" + j.endTime);\n      fetchMachines();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"WashSimple \\u2014 user: \", (_users$find = users.find(u => u.id === currentUserId)) === null || _users$find === void 0 ? void 0 : _users$find.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 8,\n            background: \"#f1f1f1\",\n            padding: 8,\n            borderRadius: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Your Queue Info:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              margin: 4,\n              paddingLeft: 16\n            },\n            children: getCurrentUserQueues().map(m => {\n              var _m$queue3;\n              const waitSec = remainingSecondsForUser(m, currentUserId);\n              const isWashing = m.currentUserId === currentUserId && m.inUse;\n              const queueIndex = (_m$queue3 = m.queue) === null || _m$queue3 === void 0 ? void 0 : _m$queue3.findIndex(q => q.userId === currentUserId);\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [m.name, \" \\u2014 \", isWashing ? `Currently Washing (${fmtSeconds(waitSec)})` : `Queued at position ${queueIndex + 1} (wait ~${Math.ceil(waitSec / 60)} min)`]\n              }, m.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewUser,\n          children: \"Add New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 12,\n        flexWrap: \"wrap\",\n        marginTop: 16\n      },\n      children: [machines.map(m => {\n        var _m$queue4;\n        const totalSec = totalRemainingSecondsForMachine(m);\n        const occupied = totalSec > 0;\n        const isOwner = Number(m.currentUserId) === currentUserId;\n        const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === currentUserId || mm.queue && mm.queue.some(q => q.userId === currentUserId));\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          style: {\n            width: 220,\n            padding: 12,\n            border: \"1px solid #ddd\",\n            borderRadius: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: m.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 20\n            }, this), \" \", occupied ? \"Occupied\" : \"Free\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Remaining:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 20\n            }, this), \" \", fmtSeconds(totalSec)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Queue:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 20\n            }, this), \" \", ((_m$queue4 = m.queue) === null || _m$queue4 === void 0 ? void 0 : _m$queue4.length) || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => joinQueue(m.id),\n              disabled: userInAnyMachine || isOwner,\n              children: \"Join Queue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startWashing(m.id),\n              disabled: !isOwner && userInAnyMachine || m.inUse && !isOwner,\n              style: {\n                marginLeft: 8\n              },\n              children: isOwner ? \"Start/Extend\" : \"Start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, m.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          minWidth: 250,\n          border: \"1px solid #ccc\",\n          padding: 12,\n          borderRadius: 6,\n          background: \"#f9f9f9\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"All Machines & Queues\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), machines.map(m => {\n          var _users$find2, _m$queue5;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 12,\n              padding: 6,\n              background: \"#fff\",\n              borderRadius: 4,\n              border: \"1px solid #ddd\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: m.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                margin: 4,\n                paddingLeft: 16\n              },\n              children: [m.inUse && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [((_users$find2 = users.find(u => u.id === m.currentUserId)) === null || _users$find2 === void 0 ? void 0 : _users$find2.name) || \"User\" + m.currentUserId, \" \\u2014 currently washing (\", fmtSeconds(remainingSeconds(m.endTime)), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 29\n              }, this), (_m$queue5 = m.queue) === null || _m$queue5 === void 0 ? void 0 : _m$queue5.map((q, idx) => {\n                var _users$find3;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [((_users$find3 = users.find(u => u.id === q.userId)) === null || _users$find3 === void 0 ? void 0 : _users$find3.name) || \"User\" + q.userId, \" \\u2014 queued at position \", idx + 1, \" (\", q.minutes, \" min)\"]\n                }, q.userId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, m.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Sm0D3nLDNI8OT/4oLTFACFwBwEY=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Client","jsxDEV","_jsxDEV","Dashboard","_s","_users$find","machines","setMachines","users","setUsers","id","name","currentUserId","setCurrentUserId","clientRef","socket","client","webSocketFactory","reconnectDelay","onConnect","subscribe","msg","JSON","parse","body","e","console","error","payload","handleNotification","activate","current","fetchMachines","deactivate","fetch","then","r","json","data","catch","remainingSeconds","endTime","diff","Math","floor","Date","getTime","now","fmtSeconds","totalSec","mins","secs","type","Number","userId","minutesUntilStart","machineName","machineId","alert","addNewUser","prompt","some","u","prev","totalRemainingSecondsForMachine","m","_m$queue","total","inUse","queue","length","forEach","q","minutes","remainingSecondsForUser","_m$queue2","qUser","find","getCurrentUserQueues","filter","joinQueue","machine","userInAnyMachine","mm","queueEntries","queueStr","userObj","idx","minutesStr","parseInt","totalWaitSec","ok","window","confirm","ceil","res","method","headers","stringify","j","position","startWashing","started","className","children","style","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","background","padding","borderRadius","margin","paddingLeft","map","_m$queue3","waitSec","isWashing","queueIndex","findIndex","onClick","gap","flexWrap","_m$queue4","occupied","isOwner","width","border","disabled","marginLeft","minWidth","_users$find2","_m$queue5","marginBottom","_users$find3","_c","$RefreshReg$"],"sources":["/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\n\nexport default function Dashboard() {\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{ id: 1, name: \"User1\" }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const clientRef = useRef(null);\n\n  useEffect(() => {\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        client.subscribe(\"/topic/machines\", (msg) => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n\n        client.subscribe(\"/topic/notifications\", (msg) => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n\n    fetchMachines();\n\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  function fetchMachines() {\n    fetch(\"http://localhost:8080/api/machines\")\n      .then((r) => r.json())\n      .then((data) => setMachines(data))\n      .catch((e) => console.error(\"fetch machines\", e));\n  }\n\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"-\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n\n    const mins = payload.minutesUntilStart;\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n    alert(`ðŸ”” Hey! Your turn on ${machineName} will start in about ${mins} minute(s). Get ready!`);\n  }\n\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name) return;\n    if (users.some(u => u.name === name)) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, { id, name }]);\n    setCurrentUserId(id);\n  }\n\n  function totalRemainingSecondsForMachine(m) {\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if (m.queue?.length) {\n      m.queue.forEach(q => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n\n  // NEW: Remaining seconds until this userâ€™s turn\n  function remainingSecondsForUser(m, userId) {\n    let total = 0;\n    if (m.inUse && m.currentUserId) {\n      if (m.currentUserId === userId) return remainingSeconds(m.endTime);\n      total += remainingSeconds(m.endTime);\n    }\n    if (m.queue?.length) {\n      for (let q of m.queue) {\n        if (q.userId === userId) break;\n        total += (q.minutes || 50) * 60;\n      }\n      if (m.queue.some(q => q.userId === userId)) {\n        const qUser = m.queue.find(q => q.userId === userId);\n        total += (qUser.minutes || 50) * 60;\n      }\n    }\n    return total;\n  }\n\n  function getCurrentUserQueues() {\n    return machines.filter(m =>\n      m.currentUserId === currentUserId || (m.queue && m.queue.some(q => q.userId === currentUserId))\n    );\n  }\n\n  async function joinQueue(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    const userInAnyMachine = machines.some(mm =>\n      Number(mm.currentUserId) === currentUserId ||\n      (mm.queue && mm.queue.some(q => q.userId === currentUserId))\n    );\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n\n    const queueEntries = machine.queue || [];\n    let queueStr = \"\";\n    if (machine.inUse && machine.currentUserId) {\n      const userObj = users.find(u => u.id === machine.currentUserId);\n      queueStr += `Current: ${userObj ? userObj.name : \"User\" + machine.currentUserId} â€” remaining ${fmtSeconds(remainingSeconds(machine.endTime))}\\n`;\n    }\n    queueEntries.forEach((q, idx) => {\n      const userObj = users.find(u => u.id === q.userId);\n      queueStr += `${idx + 1}. ${userObj ? userObj.name : \"User\" + q.userId} â€” ${q.minutes} min\\n`;\n    });\n\n    const minutesStr = prompt(`Queue:\\n${queueStr || \"No queued users\"}\\n\\nEnter your wash duration (minutes):`, \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    queueEntries.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n\n    const ok = window.confirm(`Total wait before your turn: ${Math.ceil(totalWaitSec/60)} minutes.\\nJoin queue?`);\n    if (!ok) return;\n\n    const res = await fetch(\"http://localhost:8080/api/machines/join\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);\n    else {\n      alert(`Joined queue. Position: ${j.position}. You will be notified 2 minutes before your turn.`);\n      fetchMachines();\n    }\n  }\n\n  async function startWashing(machineId) {\n    const minutesStr = prompt(\"Enter minutes for wash (minutes)\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n\n    const res = await fetch(\"http://localhost:8080/api/machines/start\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);\n    else if (j.started) {\n      alert(\"Started: ends at \" + j.endTime);\n      fetchMachines();\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      {/* Header */}\n      <div className=\"header\" style={{display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\n        <div>\n          <h3>WashSimple â€” user: {users.find(u=>u.id===currentUserId)?.name}</h3>\n          {/* Top panel for current user's queues */}\n          <div style={{marginTop:8, background:\"#f1f1f1\", padding:8, borderRadius:6}}>\n            <b>Your Queue Info:</b>\n            <ul style={{margin:4, paddingLeft:16}}>\n              {getCurrentUserQueues().map(m => {\n                const waitSec = remainingSecondsForUser(m, currentUserId);\n                const isWashing = m.currentUserId === currentUserId && m.inUse;\n                const queueIndex = m.queue?.findIndex(q => q.userId === currentUserId);\n                return (\n                  <li key={m.id}>\n                    {m.name} â€” {isWashing ? `Currently Washing (${fmtSeconds(waitSec)})` :\n                      `Queued at position ${queueIndex + 1} (wait ~${Math.ceil(waitSec/60)} min)` }\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n        <div>\n          <button onClick={addNewUser}>Add New User</button>\n        </div>\n      </div>\n\n      <div style={{display:\"flex\", gap:12, flexWrap:\"wrap\", marginTop:16}}>\n        {machines.map(m => {\n          const totalSec = totalRemainingSecondsForMachine(m);\n          const occupied = totalSec > 0;\n          const isOwner = Number(m.currentUserId) === currentUserId;\n          const userInAnyMachine = machines.some(mm =>\n            Number(mm.currentUserId) === currentUserId ||\n            (mm.queue && mm.queue.some(q => q.userId === currentUserId))\n          );\n\n          return (\n            <div key={m.id} className=\"card\" style={{width:220, padding:12, border:\"1px solid #ddd\", borderRadius:6}}>\n              <h4>{m.name}</h4>\n              <div><b>Status:</b> {occupied ? \"Occupied\" : \"Free\"}</div>\n              <div><b>Remaining:</b> {fmtSeconds(totalSec)}</div>\n              <div><b>Queue:</b> {m.queue?.length || 0}</div>\n\n              <div style={{marginTop:10}}>\n                <button onClick={()=>joinQueue(m.id)} disabled={userInAnyMachine || isOwner}>Join Queue</button>\n                <button\n                  onClick={() => startWashing(m.id)}\n                  disabled={(!isOwner && userInAnyMachine) || (m.inUse && !isOwner)}\n                  style={{ marginLeft: 8 }}\n                >\n                  {isOwner ? \"Start/Extend\" : \"Start\"}\n                </button>\n              </div>\n            </div>\n          );\n        })}\n\n        {/* Right panel: machine list with queue */}\n        <div style={{minWidth:250, border:\"1px solid #ccc\", padding:12, borderRadius:6, background:\"#f9f9f9\"}}>\n          <h4>All Machines & Queues</h4>\n          {machines.map(m => (\n            <div key={m.id} style={{marginBottom:12, padding:6, background:\"#fff\", borderRadius:4, border:\"1px solid #ddd\"}}>\n              <b>{m.name}</b>\n              <ul style={{margin:4, paddingLeft:16}}>\n                {m.inUse && <li>{users.find(u=>u.id===m.currentUserId)?.name || \"User\"+m.currentUserId} â€” currently washing ({fmtSeconds(remainingSeconds(m.endTime))})</li>}\n                {m.queue?.map((q, idx) => (\n                  <li key={q.userId}>{users.find(u=>u.id===q.userId)?.name || \"User\"+q.userId} â€” queued at position {idx+1} ({q.minutes} min)</li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}