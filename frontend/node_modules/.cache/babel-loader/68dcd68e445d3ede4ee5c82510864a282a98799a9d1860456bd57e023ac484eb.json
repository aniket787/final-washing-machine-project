{"ast":null,"code":"var _jsxFileName = \"/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: \"User1\"\n  }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const [notifications, setNotifications] = useState([]);\n  const [completedWashes, setCompletedWashes] = useState(new Set());\n  const [queueOpenMobile, setQueueOpenMobile] = useState(false);\n  const clientRef = useRef(null);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    fetch(\"/api/machines/reset\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).catch(e => console.error(\"Reset failed\", e));\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        console.log(\"WebSocket connected\");\n        client.subscribe(\"/topic/machines\", msg => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n        client.subscribe(\"/topic/notifications\", msg => {\n          try {\n            handleNotification(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n        client.subscribe(\"/topic/washHistory\", msg => {\n          try {\n            setCompletedWashes(new Set(JSON.parse(msg.body)));\n          } catch (e) {\n            console.error(\"parse wash history\", e);\n          }\n        });\n      },\n      onStompError: frame => console.error('STOMP error', frame)\n    });\n    client.activate();\n    clientRef.current = client;\n    fetchMachines();\n    intervalRef.current = setInterval(() => setMachines(prev => [...prev]), 1000);\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"default\") {\n      Notification.requestPermission();\n    }\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, []);\n  function fetchMachines() {\n    fetch(\"/api/machines\").then(r => {\n      if (!r.ok) throw new Error('Network response was not ok');\n      return r.json();\n    }).then(data => setMachines(data)).catch(e => console.error(\"fetch machines\", e));\n  }\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"0m 0s\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n    const mins = Math.ceil(payload.minutesUntilStart);\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n    const notifMsg = `Your turn on ${machineName} starts in ${mins} minute(s)!`;\n    setNotifications(prev => [...prev, {\n      id: Date.now(),\n      message: notifMsg,\n      machineId: payload.machineId\n    }]);\n    setTimeout(() => setNotifications(prev => prev.filter(n => n.id !== Date.now())), 10000);\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"granted\") {\n      new Notification(\"WashSimple\", {\n        body: notifMsg,\n        icon: \"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='75' font-size='80'>ðŸ’§</text></svg>\"\n      });\n    }\n  }\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name || !name.trim()) return;\n    if (users.some(u => u.name === name.trim())) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, {\n      id,\n      name: name.trim()\n    }]);\n    setCurrentUserId(id);\n  }\n  function totalRemainingSecondsForMachine(m) {\n    var _m$queue;\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if ((_m$queue = m.queue) !== null && _m$queue !== void 0 && _m$queue.length) m.queue.forEach(q => total += (q.minutes || 50) * 60);\n    return total;\n  }\n  function remainingSecondsForUser(m, userId) {\n    var _m$queue2;\n    let total = 0;\n    if (m.inUse && Number(m.currentUserId) === Number(userId)) return remainingSeconds(m.endTime);\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if ((_m$queue2 = m.queue) !== null && _m$queue2 !== void 0 && _m$queue2.length) {\n      for (let q of m.queue) {\n        if (Number(q.userId) === Number(userId)) break;\n        total += (q.minutes || 50) * 60;\n      }\n    }\n    return total;\n  }\n  function getCurrentUserQueues() {\n    return machines.filter(m => Number(m.currentUserId) === Number(currentUserId) || m.queue && m.queue.some(q => Number(q.userId) === Number(currentUserId)));\n  }\n  async function joinQueue(machineId) {\n    var _machine$queue, _machine$queue2;\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n    const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === Number(currentUserId) || mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)));\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n    const minutesStr = prompt(\"Enter your wash duration (minutes):\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    (_machine$queue = machine.queue) === null || _machine$queue === void 0 ? void 0 : _machine$queue.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n    const ok = window.confirm(`Machine: ${machine.name}\\n` + `Current queue: ${((_machine$queue2 = machine.queue) === null || _machine$queue2 === void 0 ? void 0 : _machine$queue2.length) || 0} user(s)\\n` + `Estimated wait: ${Math.ceil(totalWaitSec / 60)} minutes\\n\\n` + `Join queue?`);\n    if (!ok) return;\n    try {\n      const res = await fetch(\"/api/machines/join\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          machineId,\n          userId: currentUserId,\n          minutes\n        })\n      });\n      if (!res.ok) throw new Error('Failed to join queue');\n      const j = await res.json();\n      if (j.error) alert(j.error);else {\n        alert(`Joined queue at position ${j.position}. You'll be notified 2 minutes before your turn.`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error joining queue:\", error);\n      alert(\"Failed to join queue. Please try again.\");\n    }\n  }\n  async function startWashing(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n    const minutesStr = prompt(\"Enter minutes for wash:\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n    try {\n      const res = await fetch(\"/api/machines/start\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          machineId,\n          userId: currentUserId,\n          minutes\n        })\n      });\n      if (!res.ok) throw new Error('Failed to start washing');\n      const j = await res.json();\n      if (j.error) alert(j.error);else if (j.started) {\n        alert(`Wash started! Will end at ${new Date(j.endTime).toLocaleTimeString()}`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error starting wash:\", error);\n      alert(\"Failed to start washing. Please try again.\");\n    }\n  }\n  const currentUserQueues = getCurrentUserQueues();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @media (max-width: 768px) {\n            .hamburger-btn {\n              display: block;\n              font-size: 28px;\n              background: transparent;\n              border: none;\n              cursor: pointer;\n              z-index: 1000;\n            }\n\n            .header-controls {\n              display: none;\n            }\n\n            .queue-panel {\n              display: none;\n              position: absolute;\n              top: 60px;\n              right: 10px;\n              width: 90%;\n              max-width: 320px;\n              background: white;\n              border: 1px solid #ccc;\n              padding: 10px;\n              border-radius: 12px;\n              z-index: 999;\n            }\n\n            .queue-panel.show-mobile {\n              display: block;\n            }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: '20px',\n          right: '20px',\n          zIndex: 1000,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '12px'\n        },\n        children: notifications.map(notif => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n            color: 'white',\n            padding: '16px 20px',\n            borderRadius: '12px',\n            boxShadow: '0 8px 24px rgba(16, 185, 129, 0.4)',\n            maxWidth: '320px',\n            animation: 'slideIn 0.3s ease-out',\n            fontWeight: '600'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '20px'\n              },\n              children: \"\\uD83D\\uDD14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: notif.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this)\n        }, notif.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"header-title-icon\",\n            children: \"\\uD83D\\uDCA7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"WashSimple\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hamburger-btn\",\n          onClick: () => setQueueOpenMobile(!queueOpenMobile),\n          children: \"\\u2630\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"header-controls-icon\",\n            children: \"\\uD83D\\uDC64\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: currentUserId,\n            onChange: e => setCurrentUserId(Number(e.target.value)),\n            className: \"user-select\",\n            children: users.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: u.id,\n              children: u.name\n            }, u.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 31\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addNewUser,\n            className: \"add-user-btn\",\n            children: \"+ Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `queue-panel ${queueOpenMobile ? 'show-mobile' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"All Queues\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), machines.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"queue-empty\",\n          children: \"No machines available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this) : machines.map(m => {\n          var _users$find, _m$queue3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"queue-machine\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: m.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), !m.inUse && (!m.queue || m.queue.length === 0) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"queue-no-users\",\n              children: \"No active users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"queue-details\",\n              children: [m.inUse && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"queue-current-user\",\n                children: [\"\\uD83D\\uDD04 \", ((_users$find = users.find(u => u.id === m.currentUserId)) === null || _users$find === void 0 ? void 0 : _users$find.name) || `User${m.currentUserId}`, /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"queue-current-user-time\",\n                  children: [fmtSeconds(remainingSeconds(m.endTime)), \" remaining\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 23\n              }, this), (_m$queue3 = m.queue) === null || _m$queue3 === void 0 ? void 0 : _m$queue3.map((q, idx) => {\n                var _users$find2;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"queue-item\",\n                  children: [\"#\", idx + 1, \" \", ((_users$find2 = users.find(u => u.id === q.userId)) === null || _users$find2 === void 0 ? void 0 : _users$find2.name) || `User${q.userId}`, /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"queue-item-time\",\n                    children: [q.minutes, \" minutes scheduled\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 25\n                  }, this)]\n                }, q.userId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this)]\n          }, m.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"5nYZ9u0pcxiEIM9qFXZ87L2Srss=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Client","jsxDEV","_jsxDEV","Dashboard","_s","machines","setMachines","users","setUsers","id","name","currentUserId","setCurrentUserId","notifications","setNotifications","completedWashes","setCompletedWashes","Set","queueOpenMobile","setQueueOpenMobile","clientRef","intervalRef","fetch","method","headers","catch","e","console","error","socket","client","webSocketFactory","reconnectDelay","onConnect","log","subscribe","msg","JSON","parse","body","handleNotification","onStompError","frame","activate","current","fetchMachines","setInterval","prev","Notification","permission","requestPermission","deactivate","clearInterval","then","r","ok","Error","json","data","remainingSeconds","endTime","diff","Math","floor","Date","getTime","now","fmtSeconds","totalSec","mins","secs","payload","type","Number","userId","ceil","minutesUntilStart","machineName","machineId","notifMsg","message","setTimeout","filter","n","icon","addNewUser","prompt","trim","some","u","alert","totalRemainingSecondsForMachine","m","_m$queue","total","inUse","queue","length","forEach","q","minutes","remainingSecondsForUser","_m$queue2","getCurrentUserQueues","joinQueue","_machine$queue","_machine$queue2","machine","find","has","userInAnyMachine","mm","minutesStr","parseInt","isNaN","totalWaitSec","window","confirm","res","stringify","j","position","startWashing","started","toLocaleTimeString","currentUserQueues","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","top","right","zIndex","display","flexDirection","gap","map","notif","background","color","padding","borderRadius","boxShadow","maxWidth","animation","fontWeight","alignItems","fontSize","justifyContent","onClick","value","onChange","target","_users$find","_m$queue3","idx","_users$find2","_c","$RefreshReg$"],"sources":["/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\n\nexport default function Dashboard() {\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{ id: 1, name: \"User1\" }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const [notifications, setNotifications] = useState([]);\n  const [completedWashes, setCompletedWashes] = useState(new Set());\n  const [queueOpenMobile, setQueueOpenMobile] = useState(false);\n  const clientRef = useRef(null);\n  const intervalRef = useRef(null);\n\n  useEffect(() => {\n    fetch(\"/api/machines/reset\", { method: \"POST\", headers: { \"Content-Type\": \"application/json\" } })\n      .catch(e => console.error(\"Reset failed\", e));\n\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        console.log(\"WebSocket connected\");\n\n        client.subscribe(\"/topic/machines\", (msg) => {\n          try { setMachines(JSON.parse(msg.body)); } catch (e) { console.error(\"parse machines\", e); }\n        });\n\n        client.subscribe(\"/topic/notifications\", (msg) => {\n          try { handleNotification(JSON.parse(msg.body)); } catch (e) { console.error(\"parse notification\", e); }\n        });\n\n        client.subscribe(\"/topic/washHistory\", (msg) => {\n          try { setCompletedWashes(new Set(JSON.parse(msg.body))); } catch (e) { console.error(\"parse wash history\", e); }\n        });\n      },\n      onStompError: (frame) => console.error('STOMP error', frame)\n    });\n    client.activate();\n    clientRef.current = client;\n\n    fetchMachines();\n\n    intervalRef.current = setInterval(() => setMachines(prev => [...prev]), 1000);\n\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"default\") {\n      Notification.requestPermission();\n    }\n\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  function fetchMachines() {\n    fetch(\"/api/machines\")\n      .then(r => { if (!r.ok) throw new Error('Network response was not ok'); return r.json(); })\n      .then(data => setMachines(data))\n      .catch(e => console.error(\"fetch machines\", e));\n  }\n\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"0m 0s\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n\n    const mins = Math.ceil(payload.minutesUntilStart);\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n    const notifMsg = `Your turn on ${machineName} starts in ${mins} minute(s)!`;\n\n    setNotifications(prev => [...prev, { id: Date.now(), message: notifMsg, machineId: payload.machineId }]);\n\n    setTimeout(() => setNotifications(prev => prev.filter(n => n.id !== Date.now())), 10000);\n\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"granted\") {\n      new Notification(\"WashSimple\", { body: notifMsg, icon: \"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='75' font-size='80'>ðŸ’§</text></svg>\" });\n    }\n  }\n\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name || !name.trim()) return;\n    if (users.some(u => u.name === name.trim())) { alert(\"Username already exists!\"); return; }\n    const id = Date.now();\n    setUsers(prev => [...prev, { id, name: name.trim() }]);\n    setCurrentUserId(id);\n  }\n\n  function totalRemainingSecondsForMachine(m) {\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if (m.queue?.length) m.queue.forEach(q => total += (q.minutes || 50) * 60);\n    return total;\n  }\n\n  function remainingSecondsForUser(m, userId) {\n    let total = 0;\n    if (m.inUse && Number(m.currentUserId) === Number(userId)) return remainingSeconds(m.endTime);\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if (m.queue?.length) {\n      for (let q of m.queue) {\n        if (Number(q.userId) === Number(userId)) break;\n        total += (q.minutes || 50) * 60;\n      }\n    }\n    return total;\n  }\n\n  function getCurrentUserQueues() {\n    return machines.filter(m =>\n      Number(m.currentUserId) === Number(currentUserId) ||\n      (m.queue && m.queue.some(q => Number(q.userId) === Number(currentUserId)))\n    );\n  }\n\n  async function joinQueue(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n\n    const userInAnyMachine = machines.some(mm =>\n      Number(mm.currentUserId) === Number(currentUserId) ||\n      (mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)))\n    );\n\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n\n    const minutesStr = prompt(\"Enter your wash duration (minutes):\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) { alert(\"Please enter a valid number of minutes.\"); return; }\n\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    machine.queue?.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n\n    const ok = window.confirm(\n      `Machine: ${machine.name}\\n` +\n      `Current queue: ${machine.queue?.length || 0} user(s)\\n` +\n      `Estimated wait: ${Math.ceil(totalWaitSec/60)} minutes\\n\\n` +\n      `Join queue?`\n    );\n    if (!ok) return;\n\n    try {\n      const res = await fetch(\"/api/machines/join\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n      });\n      if (!res.ok) throw new Error('Failed to join queue');\n      const j = await res.json();\n      if (j.error) alert(j.error);\n      else { alert(`Joined queue at position ${j.position}. You'll be notified 2 minutes before your turn.`); fetchMachines(); }\n    } catch (error) { console.error(\"Error joining queue:\", error); alert(\"Failed to join queue. Please try again.\"); }\n  }\n\n  async function startWashing(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    if (completedWashes.has(currentUserId)) { alert(\"You have already washed your clothes today!\"); return; }\n\n    const minutesStr = prompt(\"Enter minutes for wash:\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) { alert(\"Please enter a valid number of minutes.\"); return; }\n\n    try {\n      const res = await fetch(\"/api/machines/start\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n      });\n      if (!res.ok) throw new Error('Failed to start washing');\n      const j = await res.json();\n      if (j.error) alert(j.error);\n      else if (j.started) { alert(`Wash started! Will end at ${new Date(j.endTime).toLocaleTimeString()}`); fetchMachines(); }\n    } catch (error) { console.error(\"Error starting wash:\", error); alert(\"Failed to start washing. Please try again.\"); }\n  }\n\n  const currentUserQueues = getCurrentUserQueues();\n\n  return (\n    <div className=\"dashboard-wrapper\">\n      {/* Inline styles for mobile hamburger and queue panel */}\n      <style>\n        {`\n          @media (max-width: 768px) {\n            .hamburger-btn {\n              display: block;\n              font-size: 28px;\n              background: transparent;\n              border: none;\n              cursor: pointer;\n              z-index: 1000;\n            }\n\n            .header-controls {\n              display: none;\n            }\n\n            .queue-panel {\n              display: none;\n              position: absolute;\n              top: 60px;\n              right: 10px;\n              width: 90%;\n              max-width: 320px;\n              background: white;\n              border: 1px solid #ccc;\n              padding: 10px;\n              border-radius: 12px;\n              z-index: 999;\n            }\n\n            .queue-panel.show-mobile {\n              display: block;\n            }\n          }\n        `}\n      </style>\n\n      <div className=\"container\">\n        {notifications.length > 0 && (\n          <div style={{\n            position: 'fixed', top: '20px', right: '20px', zIndex: 1000, display: 'flex', flexDirection: 'column', gap: '12px'\n          }}>\n            {notifications.map(notif => (\n              <div key={notif.id} style={{\n                background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n                color: 'white', padding: '16px 20px', borderRadius: '12px',\n                boxShadow: '0 8px 24px rgba(16, 185, 129, 0.4)', maxWidth: '320px',\n                animation: 'slideIn 0.3s ease-out', fontWeight: '600'\n              }}>\n                <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                  <span style={{ fontSize: '20px' }}>ðŸ””</span>\n                  <span>{notif.message}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Header */}\n        <div className=\"header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <div className=\"header-title\">\n            <span className=\"header-title-icon\">ðŸ’§</span>\n            <h1>WashSimple</h1>\n          </div>\n\n          {/* Hamburger Button for Mobile */}\n          <button className=\"hamburger-btn\" onClick={() => setQueueOpenMobile(!queueOpenMobile)}>â˜°</button>\n\n          <div className=\"header-controls\">\n            <span className=\"header-controls-icon\">ðŸ‘¤</span>\n            <select value={currentUserId} onChange={(e) => setCurrentUserId(Number(e.target.value))} className=\"user-select\">\n              {users.map(u => <option key={u.id} value={u.id}>{u.name}</option>)}\n            </select>\n            <button onClick={addNewUser} className=\"add-user-btn\">+ Add User</button>\n          </div>\n        </div>\n\n        {/* Completed washes / active sessions / no sessions */}\n        {/* ... keep your existing code for these sections as-is ... */}\n\n        {/* Machine grid */}\n        {/* ... keep your existing machine grid code as-is ... */}\n\n        {/* Queue panel */}\n        <div className={`queue-panel ${queueOpenMobile ? 'show-mobile' : ''}`}>\n          <h3>All Queues</h3>\n          {machines.length === 0 ? (\n            <div className=\"queue-empty\">No machines available</div>\n          ) : (\n            machines.map(m => (\n              <div key={m.id} className=\"queue-machine\">\n                <strong>{m.name}</strong>\n                {!m.inUse && (!m.queue || m.queue.length === 0) ? (\n                  <div className=\"queue-no-users\">No active users</div>\n                ) : (\n                  <div className=\"queue-details\">\n                    {m.inUse && (\n                      <div className=\"queue-current-user\">\n                        ðŸ”„ {users.find(u => u.id === m.currentUserId)?.name || `User${m.currentUserId}`}\n                        <div className=\"queue-current-user-time\">\n                          {fmtSeconds(remainingSeconds(m.endTime))} remaining\n                        </div>\n                      </div>\n                    )}\n                    {m.queue?.map((q, idx) => (\n                      <div key={q.userId} className=\"queue-item\">\n                        #{idx + 1} {users.find(u => u.id === q.userId)?.name || `User${q.userId}`}\n                        <div className=\"queue-item-time\">{q.minutes} minutes scheduled</div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,eAAe;AAClC,SAASC,MAAM,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,CAAC;IAAEY,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,IAAIoB,GAAG,CAAC,CAAC,CAAC;EACjE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMuB,SAAS,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMuB,WAAW,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAEhCF,SAAS,CAAC,MAAM;IACd0B,KAAK,CAAC,qBAAqB,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAAE,CAAC,CAAC,CAC9FC,KAAK,CAACC,CAAC,IAAIC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,CAAC,CAAC,CAAC;IAE/C,MAAMG,MAAM,GAAG,IAAI9B,MAAM,CAAC,0BAA0B,CAAC;IACrD,MAAM+B,MAAM,GAAG,IAAI9B,MAAM,CAAC;MACxB+B,gBAAgB,EAAEA,CAAA,KAAMF,MAAM;MAC9BG,cAAc,EAAE,IAAI;MACpBC,SAAS,EAAEA,CAAA,KAAM;QACfN,OAAO,CAACO,GAAG,CAAC,qBAAqB,CAAC;QAElCJ,MAAM,CAACK,SAAS,CAAC,iBAAiB,EAAGC,GAAG,IAAK;UAC3C,IAAI;YAAE9B,WAAW,CAAC+B,IAAI,CAACC,KAAK,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC;UAAE,CAAC,CAAC,OAAOb,CAAC,EAAE;YAAEC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,CAAC,CAAC;UAAE;QAC7F,CAAC,CAAC;QAEFI,MAAM,CAACK,SAAS,CAAC,sBAAsB,EAAGC,GAAG,IAAK;UAChD,IAAI;YAAEI,kBAAkB,CAACH,IAAI,CAACC,KAAK,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC;UAAE,CAAC,CAAC,OAAOb,CAAC,EAAE;YAAEC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,CAAC,CAAC;UAAE;QACxG,CAAC,CAAC;QAEFI,MAAM,CAACK,SAAS,CAAC,oBAAoB,EAAGC,GAAG,IAAK;UAC9C,IAAI;YAAEpB,kBAAkB,CAAC,IAAIC,GAAG,CAACoB,IAAI,CAACC,KAAK,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC,CAAC;UAAE,CAAC,CAAC,OAAOb,CAAC,EAAE;YAAEC,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEF,CAAC,CAAC;UAAE;QACjH,CAAC,CAAC;MACJ,CAAC;MACDe,YAAY,EAAGC,KAAK,IAAKf,OAAO,CAACC,KAAK,CAAC,aAAa,EAAEc,KAAK;IAC7D,CAAC,CAAC;IACFZ,MAAM,CAACa,QAAQ,CAAC,CAAC;IACjBvB,SAAS,CAACwB,OAAO,GAAGd,MAAM;IAE1Be,aAAa,CAAC,CAAC;IAEfxB,WAAW,CAACuB,OAAO,GAAGE,WAAW,CAAC,MAAMxC,WAAW,CAACyC,IAAI,IAAI,CAAC,GAAGA,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;IAE7E,IAAI,OAAOC,YAAY,KAAK,WAAW,IAAIA,YAAY,CAACC,UAAU,KAAK,SAAS,EAAE;MAChFD,YAAY,CAACE,iBAAiB,CAAC,CAAC;IAClC;IAEA,OAAO,MAAM;MACX,IAAI9B,SAAS,CAACwB,OAAO,EAAExB,SAAS,CAACwB,OAAO,CAACO,UAAU,CAAC,CAAC;MACrD,IAAI9B,WAAW,CAACuB,OAAO,EAAEQ,aAAa,CAAC/B,WAAW,CAACuB,OAAO,CAAC;IAC7D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,SAASC,aAAaA,CAAA,EAAG;IACvBvB,KAAK,CAAC,eAAe,CAAC,CACnB+B,IAAI,CAACC,CAAC,IAAI;MAAE,IAAI,CAACA,CAAC,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAAE,OAAOF,CAAC,CAACG,IAAI,CAAC,CAAC;IAAE,CAAC,CAAC,CAC1FJ,IAAI,CAACK,IAAI,IAAIpD,WAAW,CAACoD,IAAI,CAAC,CAAC,CAC/BjC,KAAK,CAACC,CAAC,IAAIC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,CAAC,CAAC,CAAC;EACnD;EAEA,SAASiC,gBAAgBA,CAACC,OAAO,EAAE;IACjC,IAAI,CAACA,OAAO,EAAE,OAAO,CAAC;IACtB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAIC,IAAI,CAACJ,OAAO,CAAC,CAACK,OAAO,CAAC,CAAC,GAAG,IAAI,GAAGD,IAAI,CAACE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;IAC/E,OAAOL,IAAI,GAAG,CAAC,GAAGA,IAAI,GAAG,CAAC;EAC5B;EAEA,SAASM,UAAUA,CAACC,QAAQ,EAAE;IAC5B,IAAIA,QAAQ,IAAI,CAAC,EAAE,OAAO,OAAO;IACjC,MAAMC,IAAI,GAAGP,IAAI,CAACC,KAAK,CAACK,QAAQ,GAAG,EAAE,CAAC;IACtC,MAAME,IAAI,GAAGF,QAAQ,GAAG,EAAE;IAC1B,OAAO,GAAGC,IAAI,KAAKC,IAAI,GAAG;EAC5B;EAEA,SAAS9B,kBAAkBA,CAAC+B,OAAO,EAAE;IACnC,IAAI,CAACA,OAAO,IAAIA,OAAO,CAACC,IAAI,KAAK,YAAY,EAAE;IAC/C,IAAIC,MAAM,CAACF,OAAO,CAACG,MAAM,CAAC,KAAKD,MAAM,CAAC9D,aAAa,CAAC,EAAE;IAEtD,MAAM0D,IAAI,GAAGP,IAAI,CAACa,IAAI,CAACJ,OAAO,CAACK,iBAAiB,CAAC;IACjD,MAAMC,WAAW,GAAGN,OAAO,CAACM,WAAW,IAAI,WAAWN,OAAO,CAACO,SAAS,EAAE;IACzE,MAAMC,QAAQ,GAAG,gBAAgBF,WAAW,cAAcR,IAAI,aAAa;IAE3EvD,gBAAgB,CAACiC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEtC,EAAE,EAAEuD,IAAI,CAACE,GAAG,CAAC,CAAC;MAAEc,OAAO,EAAED,QAAQ;MAAED,SAAS,EAAEP,OAAO,CAACO;IAAU,CAAC,CAAC,CAAC;IAExGG,UAAU,CAAC,MAAMnE,gBAAgB,CAACiC,IAAI,IAAIA,IAAI,CAACmC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAC1E,EAAE,KAAKuD,IAAI,CAACE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;IAExF,IAAI,OAAOlB,YAAY,KAAK,WAAW,IAAIA,YAAY,CAACC,UAAU,KAAK,SAAS,EAAE;MAChF,IAAID,YAAY,CAAC,YAAY,EAAE;QAAET,IAAI,EAAEwC,QAAQ;QAAEK,IAAI,EAAE;MAA+H,CAAC,CAAC;IAC1L;EACF;EAEA,SAASC,UAAUA,CAAA,EAAG;IACpB,MAAM3E,IAAI,GAAG4E,MAAM,CAAC,qBAAqB,CAAC;IAC1C,IAAI,CAAC5E,IAAI,IAAI,CAACA,IAAI,CAAC6E,IAAI,CAAC,CAAC,EAAE;IAC3B,IAAIhF,KAAK,CAACiF,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAC/E,IAAI,KAAKA,IAAI,CAAC6E,IAAI,CAAC,CAAC,CAAC,EAAE;MAAEG,KAAK,CAAC,0BAA0B,CAAC;MAAE;IAAQ;IAC1F,MAAMjF,EAAE,GAAGuD,IAAI,CAACE,GAAG,CAAC,CAAC;IACrB1D,QAAQ,CAACuC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEtC,EAAE;MAAEC,IAAI,EAAEA,IAAI,CAAC6E,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;IACtD3E,gBAAgB,CAACH,EAAE,CAAC;EACtB;EAEA,SAASkF,+BAA+BA,CAACC,CAAC,EAAE;IAAA,IAAAC,QAAA;IAC1C,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIF,CAAC,CAACG,KAAK,IAAIH,CAAC,CAAChC,OAAO,EAAEkC,KAAK,IAAInC,gBAAgB,CAACiC,CAAC,CAAChC,OAAO,CAAC;IAC9D,KAAAiC,QAAA,GAAID,CAAC,CAACI,KAAK,cAAAH,QAAA,eAAPA,QAAA,CAASI,MAAM,EAAEL,CAAC,CAACI,KAAK,CAACE,OAAO,CAACC,CAAC,IAAIL,KAAK,IAAI,CAACK,CAAC,CAACC,OAAO,IAAI,EAAE,IAAI,EAAE,CAAC;IAC1E,OAAON,KAAK;EACd;EAEA,SAASO,uBAAuBA,CAACT,CAAC,EAAElB,MAAM,EAAE;IAAA,IAAA4B,SAAA;IAC1C,IAAIR,KAAK,GAAG,CAAC;IACb,IAAIF,CAAC,CAACG,KAAK,IAAItB,MAAM,CAACmB,CAAC,CAACjF,aAAa,CAAC,KAAK8D,MAAM,CAACC,MAAM,CAAC,EAAE,OAAOf,gBAAgB,CAACiC,CAAC,CAAChC,OAAO,CAAC;IAC7F,IAAIgC,CAAC,CAACG,KAAK,IAAIH,CAAC,CAAChC,OAAO,EAAEkC,KAAK,IAAInC,gBAAgB,CAACiC,CAAC,CAAChC,OAAO,CAAC;IAC9D,KAAA0C,SAAA,GAAIV,CAAC,CAACI,KAAK,cAAAM,SAAA,eAAPA,SAAA,CAASL,MAAM,EAAE;MACnB,KAAK,IAAIE,CAAC,IAAIP,CAAC,CAACI,KAAK,EAAE;QACrB,IAAIvB,MAAM,CAAC0B,CAAC,CAACzB,MAAM,CAAC,KAAKD,MAAM,CAACC,MAAM,CAAC,EAAE;QACzCoB,KAAK,IAAI,CAACK,CAAC,CAACC,OAAO,IAAI,EAAE,IAAI,EAAE;MACjC;IACF;IACA,OAAON,KAAK;EACd;EAEA,SAASS,oBAAoBA,CAAA,EAAG;IAC9B,OAAOlG,QAAQ,CAAC6E,MAAM,CAACU,CAAC,IACtBnB,MAAM,CAACmB,CAAC,CAACjF,aAAa,CAAC,KAAK8D,MAAM,CAAC9D,aAAa,CAAC,IAChDiF,CAAC,CAACI,KAAK,IAAIJ,CAAC,CAACI,KAAK,CAACR,IAAI,CAACW,CAAC,IAAI1B,MAAM,CAAC0B,CAAC,CAACzB,MAAM,CAAC,KAAKD,MAAM,CAAC9D,aAAa,CAAC,CAC1E,CAAC;EACH;EAEA,eAAe6F,SAASA,CAAC1B,SAAS,EAAE;IAAA,IAAA2B,cAAA,EAAAC,eAAA;IAClC,MAAMC,OAAO,GAAGtG,QAAQ,CAACuG,IAAI,CAAChB,CAAC,IAAIA,CAAC,CAACnF,EAAE,KAAKqE,SAAS,CAAC;IACtD,IAAI,CAAC6B,OAAO,EAAE;IAEd,IAAI5F,eAAe,CAAC8F,GAAG,CAAClG,aAAa,CAAC,EAAE;MACtC+E,KAAK,CAAC,6CAA6C,CAAC;MACpD;IACF;IAEA,MAAMoB,gBAAgB,GAAGzG,QAAQ,CAACmF,IAAI,CAACuB,EAAE,IACvCtC,MAAM,CAACsC,EAAE,CAACpG,aAAa,CAAC,KAAK8D,MAAM,CAAC9D,aAAa,CAAC,IACjDoG,EAAE,CAACf,KAAK,IAAIe,EAAE,CAACf,KAAK,CAACR,IAAI,CAACW,CAAC,IAAI1B,MAAM,CAAC0B,CAAC,CAACzB,MAAM,CAAC,KAAKD,MAAM,CAAC9D,aAAa,CAAC,CAC5E,CAAC;IAED,IAAImG,gBAAgB,EAAE;MACpBpB,KAAK,CAAC,sDAAsD,CAAC;MAC7D;IACF;IAEA,MAAMsB,UAAU,GAAG1B,MAAM,CAAC,qCAAqC,EAAE,IAAI,CAAC;IACtE,IAAI,CAAC0B,UAAU,EAAE;IACjB,MAAMZ,OAAO,GAAGa,QAAQ,CAACD,UAAU,EAAE,EAAE,CAAC;IACxC,IAAIE,KAAK,CAACd,OAAO,CAAC,IAAIA,OAAO,IAAI,CAAC,EAAE;MAAEV,KAAK,CAAC,yCAAyC,CAAC;MAAE;IAAQ;IAEhG,IAAIyB,YAAY,GAAG,CAAC;IACpB,IAAIR,OAAO,CAACZ,KAAK,IAAIY,OAAO,CAAC/C,OAAO,EAAEuD,YAAY,IAAIxD,gBAAgB,CAACgD,OAAO,CAAC/C,OAAO,CAAC;IACvF,CAAA6C,cAAA,GAAAE,OAAO,CAACX,KAAK,cAAAS,cAAA,uBAAbA,cAAA,CAAeP,OAAO,CAACC,CAAC,IAAIgB,YAAY,IAAI,CAAChB,CAAC,CAACC,OAAO,IAAI,EAAE,IAAI,EAAE,CAAC;IAEnE,MAAM7C,EAAE,GAAG6D,MAAM,CAACC,OAAO,CACvB,YAAYV,OAAO,CAACjG,IAAI,IAAI,GAC5B,kBAAkB,EAAAgG,eAAA,GAAAC,OAAO,CAACX,KAAK,cAAAU,eAAA,uBAAbA,eAAA,CAAeT,MAAM,KAAI,CAAC,YAAY,GACxD,mBAAmBnC,IAAI,CAACa,IAAI,CAACwC,YAAY,GAAC,EAAE,CAAC,cAAc,GAC3D,aACF,CAAC;IACD,IAAI,CAAC5D,EAAE,EAAE;IAET,IAAI;MACF,MAAM+D,GAAG,GAAG,MAAMhG,KAAK,CAAC,oBAAoB,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/Ce,IAAI,EAAEF,IAAI,CAACkF,SAAS,CAAC;UAAEzC,SAAS;UAAEJ,MAAM,EAAE/D,aAAa;UAAEyF;QAAQ,CAAC;MACpE,CAAC,CAAC;MACF,IAAI,CAACkB,GAAG,CAAC/D,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACpD,MAAMgE,CAAC,GAAG,MAAMF,GAAG,CAAC7D,IAAI,CAAC,CAAC;MAC1B,IAAI+D,CAAC,CAAC5F,KAAK,EAAE8D,KAAK,CAAC8B,CAAC,CAAC5F,KAAK,CAAC,CAAC,KACvB;QAAE8D,KAAK,CAAC,4BAA4B8B,CAAC,CAACC,QAAQ,kDAAkD,CAAC;QAAE5E,aAAa,CAAC,CAAC;MAAE;IAC3H,CAAC,CAAC,OAAOjB,KAAK,EAAE;MAAED,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAAE8D,KAAK,CAAC,yCAAyC,CAAC;IAAE;EACpH;EAEA,eAAegC,YAAYA,CAAC5C,SAAS,EAAE;IACrC,MAAM6B,OAAO,GAAGtG,QAAQ,CAACuG,IAAI,CAAChB,CAAC,IAAIA,CAAC,CAACnF,EAAE,KAAKqE,SAAS,CAAC;IACtD,IAAI,CAAC6B,OAAO,EAAE;IAEd,IAAI5F,eAAe,CAAC8F,GAAG,CAAClG,aAAa,CAAC,EAAE;MAAE+E,KAAK,CAAC,6CAA6C,CAAC;MAAE;IAAQ;IAExG,MAAMsB,UAAU,GAAG1B,MAAM,CAAC,yBAAyB,EAAE,IAAI,CAAC;IAC1D,IAAI,CAAC0B,UAAU,EAAE;IACjB,MAAMZ,OAAO,GAAGa,QAAQ,CAACD,UAAU,EAAE,EAAE,CAAC;IACxC,IAAIE,KAAK,CAACd,OAAO,CAAC,IAAIA,OAAO,IAAI,CAAC,EAAE;MAAEV,KAAK,CAAC,yCAAyC,CAAC;MAAE;IAAQ;IAEhG,IAAI;MACF,MAAM4B,GAAG,GAAG,MAAMhG,KAAK,CAAC,qBAAqB,EAAE;QAC7CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/Ce,IAAI,EAAEF,IAAI,CAACkF,SAAS,CAAC;UAAEzC,SAAS;UAAEJ,MAAM,EAAE/D,aAAa;UAAEyF;QAAQ,CAAC;MACpE,CAAC,CAAC;MACF,IAAI,CAACkB,GAAG,CAAC/D,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MACvD,MAAMgE,CAAC,GAAG,MAAMF,GAAG,CAAC7D,IAAI,CAAC,CAAC;MAC1B,IAAI+D,CAAC,CAAC5F,KAAK,EAAE8D,KAAK,CAAC8B,CAAC,CAAC5F,KAAK,CAAC,CAAC,KACvB,IAAI4F,CAAC,CAACG,OAAO,EAAE;QAAEjC,KAAK,CAAC,6BAA6B,IAAI1B,IAAI,CAACwD,CAAC,CAAC5D,OAAO,CAAC,CAACgE,kBAAkB,CAAC,CAAC,EAAE,CAAC;QAAE/E,aAAa,CAAC,CAAC;MAAE;IACzH,CAAC,CAAC,OAAOjB,KAAK,EAAE;MAAED,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAAE8D,KAAK,CAAC,4CAA4C,CAAC;IAAE;EACvH;EAEA,MAAMmC,iBAAiB,GAAGtB,oBAAoB,CAAC,CAAC;EAEhD,oBACErG,OAAA;IAAK4H,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAEhC7H,OAAA;MAAA6H,QAAA,EACG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAERjI,OAAA;MAAK4H,SAAS,EAAC,WAAW;MAAAC,QAAA,GACvBlH,aAAa,CAACoF,MAAM,GAAG,CAAC,iBACvB/F,OAAA;QAAKkI,KAAK,EAAE;UACVX,QAAQ,EAAE,OAAO;UAAEY,GAAG,EAAE,MAAM;UAAEC,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE,IAAI;UAAEC,OAAO,EAAE,MAAM;UAAEC,aAAa,EAAE,QAAQ;UAAEC,GAAG,EAAE;QAC9G,CAAE;QAAAX,QAAA,EACClH,aAAa,CAAC8H,GAAG,CAACC,KAAK,iBACtB1I,OAAA;UAAoBkI,KAAK,EAAE;YACzBS,UAAU,EAAE,mDAAmD;YAC/DC,KAAK,EAAE,OAAO;YAAEC,OAAO,EAAE,WAAW;YAAEC,YAAY,EAAE,MAAM;YAC1DC,SAAS,EAAE,oCAAoC;YAAEC,QAAQ,EAAE,OAAO;YAClEC,SAAS,EAAE,uBAAuB;YAAEC,UAAU,EAAE;UAClD,CAAE;UAAArB,QAAA,eACA7H,OAAA;YAAKkI,KAAK,EAAE;cAAEI,OAAO,EAAE,MAAM;cAAEa,UAAU,EAAE,QAAQ;cAAEX,GAAG,EAAE;YAAM,CAAE;YAAAX,QAAA,gBAChE7H,OAAA;cAAMkI,KAAK,EAAE;gBAAEkB,QAAQ,EAAE;cAAO,CAAE;cAAAvB,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC5CjI,OAAA;cAAA6H,QAAA,EAAOa,KAAK,CAAC5D;YAAO;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB;QAAC,GATES,KAAK,CAACnI,EAAE;UAAAuH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUb,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,eAGDjI,OAAA;QAAK4H,SAAS,EAAC,QAAQ;QAACM,KAAK,EAAE;UAAEI,OAAO,EAAE,MAAM;UAAEe,cAAc,EAAE,eAAe;UAAEF,UAAU,EAAE;QAAS,CAAE;QAAAtB,QAAA,gBACxG7H,OAAA;UAAK4H,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B7H,OAAA;YAAM4H,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC7CjI,OAAA;YAAA6H,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,eAGNjI,OAAA;UAAQ4H,SAAS,EAAC,eAAe;UAAC0B,OAAO,EAAEA,CAAA,KAAMrI,kBAAkB,CAAC,CAACD,eAAe,CAAE;UAAA6G,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAEjGjI,OAAA;UAAK4H,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9B7H,OAAA;YAAM4H,SAAS,EAAC,sBAAsB;YAAAC,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAChDjI,OAAA;YAAQuJ,KAAK,EAAE9I,aAAc;YAAC+I,QAAQ,EAAGhI,CAAC,IAAKd,gBAAgB,CAAC6D,MAAM,CAAC/C,CAAC,CAACiI,MAAM,CAACF,KAAK,CAAC,CAAE;YAAC3B,SAAS,EAAC,aAAa;YAAAC,QAAA,EAC7GxH,KAAK,CAACoI,GAAG,CAAClD,CAAC,iBAAIvF,OAAA;cAAmBuJ,KAAK,EAAEhE,CAAC,CAAChF,EAAG;cAAAsH,QAAA,EAAEtC,CAAC,CAAC/E;YAAI,GAA1B+E,CAAC,CAAChF,EAAE;cAAAuH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAA+B,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CAAC,eACTjI,OAAA;YAAQsJ,OAAO,EAAEnE,UAAW;YAACyC,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eASNjI,OAAA;QAAK4H,SAAS,EAAE,eAAe5G,eAAe,GAAG,aAAa,GAAG,EAAE,EAAG;QAAA6G,QAAA,gBACpE7H,OAAA;UAAA6H,QAAA,EAAI;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAClB9H,QAAQ,CAAC4F,MAAM,KAAK,CAAC,gBACpB/F,OAAA;UAAK4H,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,GAExD9H,QAAQ,CAACsI,GAAG,CAAC/C,CAAC;UAAA,IAAAgE,WAAA,EAAAC,SAAA;UAAA,oBACZ3J,OAAA;YAAgB4H,SAAS,EAAC,eAAe;YAAAC,QAAA,gBACvC7H,OAAA;cAAA6H,QAAA,EAASnC,CAAC,CAAClF;YAAI;cAAAsH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,EACxB,CAACvC,CAAC,CAACG,KAAK,KAAK,CAACH,CAAC,CAACI,KAAK,IAAIJ,CAAC,CAACI,KAAK,CAACC,MAAM,KAAK,CAAC,CAAC,gBAC7C/F,OAAA;cAAK4H,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAAC;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,gBAErDjI,OAAA;cAAK4H,SAAS,EAAC,eAAe;cAAAC,QAAA,GAC3BnC,CAAC,CAACG,KAAK,iBACN7F,OAAA;gBAAK4H,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,GAAC,eAC/B,EAAC,EAAA6B,WAAA,GAAArJ,KAAK,CAACqG,IAAI,CAACnB,CAAC,IAAIA,CAAC,CAAChF,EAAE,KAAKmF,CAAC,CAACjF,aAAa,CAAC,cAAAiJ,WAAA,uBAAzCA,WAAA,CAA2ClJ,IAAI,KAAI,OAAOkF,CAAC,CAACjF,aAAa,EAAE,eAC/ET,OAAA;kBAAK4H,SAAS,EAAC,yBAAyB;kBAAAC,QAAA,GACrC5D,UAAU,CAACR,gBAAgB,CAACiC,CAAC,CAAChC,OAAO,CAAC,CAAC,EAAC,YAC3C;gBAAA;kBAAAoE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CACN,GAAA0B,SAAA,GACAjE,CAAC,CAACI,KAAK,cAAA6D,SAAA,uBAAPA,SAAA,CAASlB,GAAG,CAAC,CAACxC,CAAC,EAAE2D,GAAG;gBAAA,IAAAC,YAAA;gBAAA,oBACnB7J,OAAA;kBAAoB4H,SAAS,EAAC,YAAY;kBAAAC,QAAA,GAAC,GACxC,EAAC+B,GAAG,GAAG,CAAC,EAAC,GAAC,EAAC,EAAAC,YAAA,GAAAxJ,KAAK,CAACqG,IAAI,CAACnB,CAAC,IAAIA,CAAC,CAAChF,EAAE,KAAK0F,CAAC,CAACzB,MAAM,CAAC,cAAAqF,YAAA,uBAAlCA,YAAA,CAAoCrJ,IAAI,KAAI,OAAOyF,CAAC,CAACzB,MAAM,EAAE,eACzExE,OAAA;oBAAK4H,SAAS,EAAC,iBAAiB;oBAAAC,QAAA,GAAE5B,CAAC,CAACC,OAAO,EAAC,oBAAkB;kBAAA;oBAAA4B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC;gBAAA,GAF5DhC,CAAC,CAACzB,MAAM;kBAAAsD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAGb,CAAC;cAAA,CACP,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CACN;UAAA,GArBOvC,CAAC,CAACnF,EAAE;YAAAuH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsBT,CAAC;QAAA,CACP,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/H,EAAA,CAlUuBD,SAAS;AAAA6J,EAAA,GAAT7J,SAAS;AAAA,IAAA6J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}