{"ast":null,"code":"var _jsxFileName = \"/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: \"User1\"\n  }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const wsRef = useRef(null);\n  const intervalRef = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  useEffect(() => {\n    connectWebSocket();\n    fetchMachines();\n\n    // Auto-refresh remaining time every second\n    intervalRef.current = setInterval(() => {\n      setMachines(prev => [...prev]);\n    }, 1000);\n\n    // Request notification permission\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"default\") {\n      Notification.requestPermission();\n    }\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n    };\n  }, []);\n  function connectWebSocket() {\n    try {\n      const ws = new WebSocket(\"ws://localhost:8080/ws\");\n      ws.onopen = () => {\n        console.log(\"WebSocket connected\");\n        ws.send(\"CONNECT\\naccept-version:1.0,1.1,2.0\\n\\n\\0\");\n      };\n      ws.onmessage = event => {\n        const message = event.data;\n        if (message.startsWith(\"CONNECTED\")) {\n          console.log(\"STOMP connected\");\n          ws.send(\"SUBSCRIBE\\nid:sub-0\\ndestination:/topic/machines\\n\\n\\0\");\n          ws.send(\"SUBSCRIBE\\nid:sub-1\\ndestination:/topic/notifications\\n\\n\\0\");\n          return;\n        }\n        if (message.startsWith(\"MESSAGE\")) {\n          try {\n            const lines = message.split('\\n');\n            let destination = '';\n            let bodyStartIndex = -1;\n            for (let i = 0; i < lines.length; i++) {\n              if (lines[i].startsWith('destination:')) {\n                destination = lines[i].substring(12);\n              }\n              if (lines[i] === '') {\n                bodyStartIndex = i + 1;\n                break;\n              }\n            }\n            if (bodyStartIndex > -1) {\n              const body = lines.slice(bodyStartIndex).join('\\n').replace(/\\0$/, '');\n              const data = JSON.parse(body);\n              if (destination === '/topic/machines') {\n                setMachines(data);\n\n                // Sync users from machine data\n                const allUserIds = new Set();\n                data.forEach(m => {\n                  if (m.currentUserId) allUserIds.add(m.currentUserId);\n                  if (m.queue) {\n                    m.queue.forEach(q => allUserIds.add(q.userId));\n                  }\n                });\n                setUsers(prevUsers => {\n                  const existingIds = new Set(prevUsers.map(u => u.id));\n                  const newUsers = [...prevUsers];\n                  allUserIds.forEach(uid => {\n                    if (!existingIds.has(uid)) {\n                      newUsers.push({\n                        id: uid,\n                        name: `User${uid}`\n                      });\n                    }\n                  });\n                  return newUsers;\n                });\n              } else if (destination === '/topic/notifications') {\n                handleNotification(data);\n              }\n            }\n          } catch (e) {\n            console.error(\"Error parsing message:\", e);\n          }\n        }\n      };\n      ws.onerror = error => {\n        console.error(\"WebSocket error:\", error);\n      };\n      ws.onclose = () => {\n        console.log(\"WebSocket closed. Reconnecting...\");\n        reconnectTimeoutRef.current = setTimeout(() => {\n          connectWebSocket();\n        }, 5000);\n      };\n      wsRef.current = ws;\n    } catch (error) {\n      console.error(\"Error connecting WebSocket:\", error);\n      reconnectTimeoutRef.current = setTimeout(() => {\n        connectWebSocket();\n      }, 5000);\n    }\n  }\n  function fetchMachines() {\n    fetch(\"http://localhost:8080/api/machines\").then(r => {\n      if (!r.ok) throw new Error('Network response was not ok');\n      return r.json();\n    }).then(data => {\n      setMachines(data);\n\n      // Sync users from machine data with local users\n      const allUserIds = new Set();\n      data.forEach(m => {\n        if (m.currentUserId) allUserIds.add(m.currentUserId);\n        if (m.queue) {\n          m.queue.forEach(q => allUserIds.add(q.userId));\n        }\n      });\n\n      // Add any missing users to the users list\n      setUsers(prevUsers => {\n        const existingIds = new Set(prevUsers.map(u => u.id));\n        const newUsers = [...prevUsers];\n        allUserIds.forEach(uid => {\n          if (!existingIds.has(uid)) {\n            newUsers.push({\n              id: uid,\n              name: `User${uid}`\n            });\n          }\n        });\n        return newUsers;\n      });\n    }).catch(e => console.error(\"fetch machines\", e));\n  }\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"0m 0s\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n    const mins = payload.minutesUntilStart;\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n    alert(`🔔 Hey! Your turn on ${machineName} will start in about ${mins} minute(s). Get ready!`);\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"granted\") {\n      new Notification(\"WashSimple\", {\n        body: `Your turn on ${machineName} starts in ${mins} minute(s)!`,\n        icon: \"🔔\"\n      });\n    }\n  }\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name || !name.trim()) return;\n    if (users.some(u => u.name === name.trim())) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, {\n      id,\n      name: name.trim()\n    }]);\n    setCurrentUserId(id);\n  }\n  function totalRemainingSecondsForMachine(m) {\n    var _m$queue;\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if ((_m$queue = m.queue) !== null && _m$queue !== void 0 && _m$queue.length) {\n      m.queue.forEach(q => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n  function remainingSecondsForUser(m, userId) {\n    var _m$queue2;\n    let total = 0;\n    if (m.inUse && Number(m.currentUserId) === Number(userId)) {\n      return remainingSeconds(m.endTime);\n    }\n    if (m.inUse && m.endTime) {\n      total += remainingSeconds(m.endTime);\n    }\n    if ((_m$queue2 = m.queue) !== null && _m$queue2 !== void 0 && _m$queue2.length) {\n      for (let q of m.queue) {\n        if (Number(q.userId) === Number(userId)) break;\n        total += (q.minutes || 50) * 60;\n      }\n    }\n    return total;\n  }\n  function getCurrentUserQueues() {\n    // If currentUserId doesn't exist in any machine data, return empty\n    const userExistsInMachines = machines.some(m => Number(m.currentUserId) === Number(currentUserId) || m.queue && m.queue.some(q => Number(q.userId) === Number(currentUserId)));\n    if (!userExistsInMachines) {\n      return [];\n    }\n    const userQueues = machines.filter(m => {\n      const isCurrentUser = Number(m.currentUserId) === Number(currentUserId);\n      const isInQueue = m.queue && m.queue.some(q => Number(q.userId) === Number(currentUserId));\n      return isCurrentUser || isInQueue;\n    });\n    return userQueues;\n  }\n  async function joinQueue(machineId) {\n    var _machine$queue, _machine$queue2;\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n    const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === Number(currentUserId) || mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)));\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n    const minutesStr = prompt(\"Enter your wash duration (minutes):\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    (_machine$queue = machine.queue) === null || _machine$queue === void 0 ? void 0 : _machine$queue.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n    const ok = window.confirm(`Machine: ${machine.name}\\n` + `Current queue: ${((_machine$queue2 = machine.queue) === null || _machine$queue2 === void 0 ? void 0 : _machine$queue2.length) || 0} user(s)\\n` + `Estimated wait: ${Math.ceil(totalWaitSec / 60)} minutes\\n\\n` + `Join queue?`);\n    if (!ok) return;\n    try {\n      const res = await fetch(\"http://localhost:8080/api/machines/join\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          machineId,\n          userId: currentUserId,\n          minutes\n        })\n      });\n      if (!res.ok) throw new Error('Failed to join queue');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else {\n        alert(`Joined queue. Position: ${j.position}. You will be notified 2 minutes before your turn.`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error joining queue:\", error);\n      alert(\"Failed to join queue. Please try again.\");\n    }\n  }\n  async function startWashing(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n    const minutesStr = prompt(\"Enter minutes for wash:\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n    try {\n      const res = await fetch(\"http://localhost:8080/api/machines/start\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          machineId,\n          userId: currentUserId,\n          minutes\n        })\n      });\n      if (!res.ok) throw new Error('Failed to start washing');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else if (j.started) {\n        alert(\"Started: ends at \" + j.endTime);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error starting wash:\", error);\n      alert(\"Failed to start washing. Please try again.\");\n    }\n  }\n  const currentUserQueues = getCurrentUserQueues();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"header-title-icon\",\n              children: \"\\uD83D\\uDCA7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"WashSimple\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"header-controls-icon\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"user-select\",\n              value: currentUserId,\n              onChange: e => setCurrentUserId(Number(e.target.value)),\n              children: users.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: u.id,\n                children: u.name\n              }, u.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-user-btn\",\n              onClick: addNewUser,\n              children: \"\\u2795 Add User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), currentUserQueues.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"active-sessions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"active-sessions-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"active-sessions-label-icon\",\n              children: \"\\uD83D\\uDD14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Your Active Sessions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), currentUserQueues.map(m => {\n            var _m$queue3;\n            const waitSec = remainingSecondsForUser(m, currentUserId);\n            const isWashing = Number(m.currentUserId) === Number(currentUserId) && m.inUse;\n            const queueIndex = (_m$queue3 = m.queue) === null || _m$queue3 === void 0 ? void 0 : _m$queue3.findIndex(q => Number(q.userId) === Number(currentUserId));\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: isWashing ? \"session-card session-card-washing\" : \"session-card session-card-queued\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: m.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-card-details\",\n                children: isWashing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"\\uD83D\\uDD04 Washing \\u2022 \", fmtSeconds(waitSec), \" left\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"\\u23F3 Position \", queueIndex !== undefined ? queueIndex + 1 : 0, \" \\u2022 ~\", Math.ceil(waitSec / 60), \" min wait\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 21\n              }, this)]\n            }, m.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-sessions\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"no-sessions-icon\",\n            children: \"\\u2139\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-sessions-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"No active sessions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '4px',\n                fontSize: '13px'\n              },\n              children: \"Join a queue or start washing to see your session here!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"machine-grid\",\n          children: machines.map(m => {\n            var _m$queue4;\n            const totalSec = totalRemainingSecondsForMachine(m);\n            const occupied = totalSec > 0;\n            const isOwner = Number(m.currentUserId) === Number(currentUserId);\n            const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === Number(currentUserId) || mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)));\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: isOwner ? \"card card-owner\" : \"card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: m.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: occupied ? \"status-indicator status-indicator-occupied\" : \"status-indicator status-indicator-available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: occupied ? \"Occupied\" : \"Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-icon\",\n                    children: \"\\u23F0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Remaining: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: fmtSeconds(totalSec)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 442,\n                      columnNumber: 40\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-icon\",\n                    children: \"\\uD83D\\uDC65\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Queue: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: ((_m$queue4 = m.queue) === null || _m$queue4 === void 0 ? void 0 : _m$queue4.length) || 0\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 36\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-join-queue\",\n                  onClick: () => joinQueue(m.id),\n                  disabled: userInAnyMachine,\n                  children: \"Join Queue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn-start\",\n                  onClick: () => startWashing(m.id),\n                  disabled: !isOwner && userInAnyMachine || m.inUse && !isOwner,\n                  children: isOwner ? \"Extend\" : \"Start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this)]\n            }, m.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"queue-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"All Queues\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), machines.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"queue-empty\",\n            children: \"No machines available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this) : machines.map(m => {\n            var _users$find, _m$queue5;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"queue-machine\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: m.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 19\n              }, this), !m.inUse && (!m.queue || m.queue.length === 0) ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"queue-no-users\",\n                children: \"No active users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"queue-details\",\n                children: [m.inUse && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"queue-current-user\",\n                  children: [\"\\uD83D\\uDD04 \", ((_users$find = users.find(u => u.id === m.currentUserId)) === null || _users$find === void 0 ? void 0 : _users$find.name) || `User${m.currentUserId}`, /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"queue-current-user-time\",\n                    children: [fmtSeconds(remainingSeconds(m.endTime)), \" remaining\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 25\n                }, this), (_m$queue5 = m.queue) === null || _m$queue5 === void 0 ? void 0 : _m$queue5.map((q, idx) => {\n                  var _users$find2;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"queue-item\",\n                    children: [\"#\", idx + 1, \" \", ((_users$find2 = users.find(u => u.id === q.userId)) === null || _users$find2 === void 0 ? void 0 : _users$find2.name) || `User${q.userId}`, /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"queue-item-time\",\n                      children: [q.minutes, \" min\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 500,\n                      columnNumber: 27\n                    }, this)]\n                  }, q.userId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 21\n              }, this)]\n            }, m.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"lfTYifY0KP4/98NjCBKvtGRGIf8=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","machines","setMachines","users","setUsers","id","name","currentUserId","setCurrentUserId","wsRef","intervalRef","reconnectTimeoutRef","connectWebSocket","fetchMachines","current","setInterval","prev","Notification","permission","requestPermission","close","clearInterval","clearTimeout","ws","WebSocket","onopen","console","log","send","onmessage","event","message","data","startsWith","lines","split","destination","bodyStartIndex","i","length","substring","body","slice","join","replace","JSON","parse","allUserIds","Set","forEach","m","add","queue","q","userId","prevUsers","existingIds","map","u","newUsers","uid","has","push","handleNotification","e","error","onerror","onclose","setTimeout","fetch","then","r","ok","Error","json","catch","remainingSeconds","endTime","diff","Math","floor","Date","getTime","now","fmtSeconds","totalSec","mins","secs","payload","type","Number","minutesUntilStart","machineName","machineId","alert","icon","addNewUser","prompt","trim","some","totalRemainingSecondsForMachine","_m$queue","total","inUse","minutes","remainingSecondsForUser","_m$queue2","getCurrentUserQueues","userExistsInMachines","userQueues","filter","isCurrentUser","isInQueue","joinQueue","_machine$queue","_machine$queue2","machine","find","userInAnyMachine","mm","minutesStr","parseInt","isNaN","totalWaitSec","window","confirm","ceil","res","method","headers","stringify","j","position","startWashing","started","currentUserQueues","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","onClick","_m$queue3","waitSec","isWashing","queueIndex","findIndex","undefined","style","marginTop","fontSize","_m$queue4","occupied","isOwner","disabled","_users$find","_m$queue5","idx","_users$find2","_c","$RefreshReg$"],"sources":["/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport \"./App.css\";\n\nexport default function Dashboard() {\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{ id: 1, name: \"User1\" }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const wsRef = useRef(null);\n  const intervalRef = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n\n  useEffect(() => {\n    connectWebSocket();\n    fetchMachines();\n\n    // Auto-refresh remaining time every second\n    intervalRef.current = setInterval(() => {\n      setMachines(prev => [...prev]);\n    }, 1000);\n\n    // Request notification permission\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"default\") {\n      Notification.requestPermission();\n    }\n\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      if (reconnectTimeoutRef.current) {\n        clearTimeout(reconnectTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  function connectWebSocket() {\n    try {\n      const ws = new WebSocket(\"ws://localhost:8080/ws\");\n\n      ws.onopen = () => {\n        console.log(\"WebSocket connected\");\n        ws.send(\"CONNECT\\naccept-version:1.0,1.1,2.0\\n\\n\\0\");\n      };\n\n      ws.onmessage = (event) => {\n        const message = event.data;\n\n        if (message.startsWith(\"CONNECTED\")) {\n          console.log(\"STOMP connected\");\n          ws.send(\"SUBSCRIBE\\nid:sub-0\\ndestination:/topic/machines\\n\\n\\0\");\n          ws.send(\"SUBSCRIBE\\nid:sub-1\\ndestination:/topic/notifications\\n\\n\\0\");\n          return;\n        }\n\n        if (message.startsWith(\"MESSAGE\")) {\n          try {\n            const lines = message.split('\\n');\n            let destination = '';\n            let bodyStartIndex = -1;\n\n            for (let i = 0; i < lines.length; i++) {\n              if (lines[i].startsWith('destination:')) {\n                destination = lines[i].substring(12);\n              }\n              if (lines[i] === '') {\n                bodyStartIndex = i + 1;\n                break;\n              }\n            }\n\n            if (bodyStartIndex > -1) {\n              const body = lines.slice(bodyStartIndex).join('\\n').replace(/\\0$/, '');\n              const data = JSON.parse(body);\n\n              if (destination === '/topic/machines') {\n                setMachines(data);\n\n                // Sync users from machine data\n                const allUserIds = new Set();\n                data.forEach(m => {\n                  if (m.currentUserId) allUserIds.add(m.currentUserId);\n                  if (m.queue) {\n                    m.queue.forEach(q => allUserIds.add(q.userId));\n                  }\n                });\n\n                setUsers(prevUsers => {\n                  const existingIds = new Set(prevUsers.map(u => u.id));\n                  const newUsers = [...prevUsers];\n\n                  allUserIds.forEach(uid => {\n                    if (!existingIds.has(uid)) {\n                      newUsers.push({ id: uid, name: `User${uid}` });\n                    }\n                  });\n\n                  return newUsers;\n                });\n              } else if (destination === '/topic/notifications') {\n                handleNotification(data);\n              }\n            }\n          } catch (e) {\n            console.error(\"Error parsing message:\", e);\n          }\n        }\n      };\n\n      ws.onerror = (error) => {\n        console.error(\"WebSocket error:\", error);\n      };\n\n      ws.onclose = () => {\n        console.log(\"WebSocket closed. Reconnecting...\");\n        reconnectTimeoutRef.current = setTimeout(() => {\n          connectWebSocket();\n        }, 5000);\n      };\n\n      wsRef.current = ws;\n    } catch (error) {\n      console.error(\"Error connecting WebSocket:\", error);\n      reconnectTimeoutRef.current = setTimeout(() => {\n        connectWebSocket();\n      }, 5000);\n    }\n  }\n\n  function fetchMachines() {\n    fetch(\"http://localhost:8080/api/machines\")\n      .then((r) => {\n        if (!r.ok) throw new Error('Network response was not ok');\n        return r.json();\n      })\n      .then((data) => {\n        setMachines(data);\n\n        // Sync users from machine data with local users\n        const allUserIds = new Set();\n        data.forEach(m => {\n          if (m.currentUserId) allUserIds.add(m.currentUserId);\n          if (m.queue) {\n            m.queue.forEach(q => allUserIds.add(q.userId));\n          }\n        });\n\n        // Add any missing users to the users list\n        setUsers(prevUsers => {\n          const existingIds = new Set(prevUsers.map(u => u.id));\n          const newUsers = [...prevUsers];\n\n          allUserIds.forEach(uid => {\n            if (!existingIds.has(uid)) {\n              newUsers.push({ id: uid, name: `User${uid}` });\n            }\n          });\n\n          return newUsers;\n        });\n      })\n      .catch((e) => console.error(\"fetch machines\", e));\n  }\n\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"0m 0s\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n\n    const mins = payload.minutesUntilStart;\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n\n    alert(`🔔 Hey! Your turn on ${machineName} will start in about ${mins} minute(s). Get ready!`);\n\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"granted\") {\n      new Notification(\"WashSimple\", {\n        body: `Your turn on ${machineName} starts in ${mins} minute(s)!`,\n        icon: \"🔔\"\n      });\n    }\n  }\n\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name || !name.trim()) return;\n    if (users.some(u => u.name === name.trim())) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, { id, name: name.trim() }]);\n    setCurrentUserId(id);\n  }\n\n  function totalRemainingSecondsForMachine(m) {\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if (m.queue?.length) {\n      m.queue.forEach(q => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n\n  function remainingSecondsForUser(m, userId) {\n    let total = 0;\n\n    if (m.inUse && Number(m.currentUserId) === Number(userId)) {\n      return remainingSeconds(m.endTime);\n    }\n\n    if (m.inUse && m.endTime) {\n      total += remainingSeconds(m.endTime);\n    }\n\n    if (m.queue?.length) {\n      for (let q of m.queue) {\n        if (Number(q.userId) === Number(userId)) break;\n        total += (q.minutes || 50) * 60;\n      }\n    }\n\n    return total;\n  }\n\n  function getCurrentUserQueues() {\n    // If currentUserId doesn't exist in any machine data, return empty\n    const userExistsInMachines = machines.some(m =>\n      Number(m.currentUserId) === Number(currentUserId) ||\n      (m.queue && m.queue.some(q => Number(q.userId) === Number(currentUserId)))\n    );\n\n    if (!userExistsInMachines) {\n      return [];\n    }\n\n    const userQueues = machines.filter(m => {\n      const isCurrentUser = Number(m.currentUserId) === Number(currentUserId);\n      const isInQueue = m.queue && m.queue.some(q => Number(q.userId) === Number(currentUserId));\n      return isCurrentUser || isInQueue;\n    });\n    return userQueues;\n  }\n\n  async function joinQueue(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    const userInAnyMachine = machines.some(mm =>\n      Number(mm.currentUserId) === Number(currentUserId) ||\n      (mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)))\n    );\n\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n\n    const minutesStr = prompt(\"Enter your wash duration (minutes):\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    machine.queue?.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n\n    const ok = window.confirm(\n      `Machine: ${machine.name}\\n` +\n      `Current queue: ${machine.queue?.length || 0} user(s)\\n` +\n      `Estimated wait: ${Math.ceil(totalWaitSec/60)} minutes\\n\\n` +\n      `Join queue?`\n    );\n    if (!ok) return;\n\n    try {\n      const res = await fetch(\"http://localhost:8080/api/machines/join\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n      });\n      if (!res.ok) throw new Error('Failed to join queue');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else {\n        alert(`Joined queue. Position: ${j.position}. You will be notified 2 minutes before your turn.`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error joining queue:\", error);\n      alert(\"Failed to join queue. Please try again.\");\n    }\n  }\n\n  async function startWashing(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    const minutesStr = prompt(\"Enter minutes for wash:\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n\n    try {\n      const res = await fetch(\"http://localhost:8080/api/machines/start\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n      });\n      if (!res.ok) throw new Error('Failed to start washing');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else if (j.started) {\n        alert(\"Started: ends at \" + j.endTime);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error starting wash:\", error);\n      alert(\"Failed to start washing. Please try again.\");\n    }\n  }\n\n  const currentUserQueues = getCurrentUserQueues();\n\n  return (\n    <div className=\"dashboard-wrapper\">\n      <div className=\"container\">\n        {/* Header */}\n        <div className=\"header-card\">\n          <div className=\"header\">\n            <div className=\"header-title\">\n              <span className=\"header-title-icon\">💧</span>\n              <h1>WashSimple</h1>\n            </div>\n            <div className=\"header-controls\">\n              <span className=\"header-controls-icon\">👤</span>\n              <select\n                className=\"user-select\"\n                value={currentUserId}\n                onChange={(e) => setCurrentUserId(Number(e.target.value))}\n              >\n                {users.map(u => (\n                  <option key={u.id} value={u.id}>{u.name}</option>\n                ))}\n              </select>\n              <button className=\"add-user-btn\" onClick={addNewUser}>\n                ➕ Add User\n              </button>\n            </div>\n          </div>\n\n          {/* Current User Status - Always show */}\n          {currentUserQueues.length > 0 ? (\n            <div className=\"active-sessions\">\n              <div className=\"active-sessions-label\">\n                <span className=\"active-sessions-label-icon\">🔔</span>\n                <strong>Your Active Sessions:</strong>\n              </div>\n              {currentUserQueues.map(m => {\n                const waitSec = remainingSecondsForUser(m, currentUserId);\n                const isWashing = Number(m.currentUserId) === Number(currentUserId) && m.inUse;\n                const queueIndex = m.queue?.findIndex(q => Number(q.userId) === Number(currentUserId));\n\n                return (\n                  <div\n                    key={m.id}\n                    className={isWashing ? \"session-card session-card-washing\" : \"session-card session-card-queued\"}\n                  >\n                    <strong>{m.name}</strong>\n                    <div className=\"session-card-details\">\n                      {isWashing ? (\n                        <>🔄 Washing • {fmtSeconds(waitSec)} left</>\n                      ) : (\n                        <>⏳ Position {queueIndex !== undefined ? queueIndex + 1 : 0} • ~{Math.ceil(waitSec / 60)} min wait</>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"no-sessions\">\n              <span className=\"no-sessions-icon\">ℹ️</span>\n              <div className=\"no-sessions-text\">\n                <strong>No active sessions</strong>\n                <div style={{ marginTop: '4px', fontSize: '13px' }}>\n                  Join a queue or start washing to see your session here!\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Main Content */}\n        <div className=\"main-content\">\n          {/* Machines Grid */}\n          <div className=\"machine-grid\">\n            {machines.map(m => {\n              const totalSec = totalRemainingSecondsForMachine(m);\n              const occupied = totalSec > 0;\n              const isOwner = Number(m.currentUserId) === Number(currentUserId);\n              const userInAnyMachine = machines.some(mm =>\n                Number(mm.currentUserId) === Number(currentUserId) ||\n                (mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)))\n              );\n\n              return (\n                <div key={m.id} className={isOwner ? \"card card-owner\" : \"card\"}>\n                  <h3>{m.name}</h3>\n\n                  <div className=\"card-details\">\n                    <div className=\"status-row\">\n                      <div className={occupied ? \"status-indicator status-indicator-occupied\" : \"status-indicator status-indicator-available\"} />\n                      <strong>{occupied ? \"Occupied\" : \"Available\"}</strong>\n                    </div>\n\n                    <div className=\"info-row\">\n                      <span className=\"info-icon\">⏰</span>\n                      <span>Remaining: <strong>{fmtSeconds(totalSec)}</strong></span>\n                    </div>\n\n                    <div className=\"info-row\">\n                      <span className=\"info-icon\">👥</span>\n                      <span>Queue: <strong>{m.queue?.length || 0}</strong></span>\n                    </div>\n                  </div>\n\n                  <div className=\"card-actions\">\n                    <button\n                      className=\"btn-join-queue\"\n                      onClick={() => joinQueue(m.id)}\n                      disabled={userInAnyMachine}\n                    >\n                      Join Queue\n                    </button>\n                    <button\n                      className=\"btn-start\"\n                      onClick={() => startWashing(m.id)}\n                      disabled={(!isOwner && userInAnyMachine) || (m.inUse && !isOwner)}\n                    >\n                      {isOwner ? \"Extend\" : \"Start\"}\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          {/* Right Panel - Queue Details */}\n          <div className=\"queue-panel\">\n            <h3>All Queues</h3>\n            {machines.length === 0 ? (\n              <div className=\"queue-empty\">\n                No machines available\n              </div>\n            ) : (\n              machines.map(m => (\n                <div key={m.id} className=\"queue-machine\">\n                  <strong>{m.name}</strong>\n                  {!m.inUse && (!m.queue || m.queue.length === 0) ? (\n                    <div className=\"queue-no-users\">\n                      No active users\n                    </div>\n                  ) : (\n                    <div className=\"queue-details\">\n                      {m.inUse && (\n                        <div className=\"queue-current-user\">\n                          🔄 {users.find(u => u.id === m.currentUserId)?.name || `User${m.currentUserId}`}\n                          <div className=\"queue-current-user-time\">\n                            {fmtSeconds(remainingSeconds(m.endTime))} remaining\n                          </div>\n                        </div>\n                      )}\n                      {m.queue?.map((q, idx) => (\n                        <div key={q.userId} className=\"queue-item\">\n                          #{idx + 1} {users.find(u => u.id === q.userId)?.name || `User${q.userId}`}\n                          <div className=\"queue-item-time\">\n                            {q.minutes} min\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}