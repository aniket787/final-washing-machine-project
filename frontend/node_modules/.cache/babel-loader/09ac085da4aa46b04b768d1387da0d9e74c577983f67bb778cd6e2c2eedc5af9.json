{"ast":null,"code":"var _jsxFileName = \"/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: \"User1\"\n  }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const [notifications, setNotifications] = useState([]);\n  const [completedWashes, setCompletedWashes] = useState(new Set());\n  const clientRef = useRef(null);\n  const intervalRef = useRef(null);\n  const [queueOpenMobile, setQueueOpenMobile] = useState(false);\n  useEffect(() => {\n    // Reset data on page load\n    fetch(\"/api/machines/reset\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).catch(e => console.error(\"Reset failed\", e));\n\n    //    const socket = new SockJS(\"/ws\");\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        console.log(\"WebSocket connected\");\n        client.subscribe(\"/topic/machines\", msg => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n        client.subscribe(\"/topic/notifications\", msg => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n        client.subscribe(\"/topic/washHistory\", msg => {\n          try {\n            const completedUsers = JSON.parse(msg.body);\n            setCompletedWashes(new Set(completedUsers));\n          } catch (e) {\n            console.error(\"parse wash history\", e);\n          }\n        });\n      },\n      onStompError: frame => {\n        console.error('STOMP error', frame);\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n    fetchMachines();\n    intervalRef.current = setInterval(() => {\n      setMachines(prev => [...prev]);\n    }, 1000);\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"default\") {\n      Notification.requestPermission();\n    }\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, []);\n  function fetchMachines() {\n    fetch(\"/api/machines\").then(r => {\n      if (!r.ok) throw new Error('Network response was not ok');\n      return r.json();\n    }).then(data => setMachines(data)).catch(e => console.error(\"fetch machines\", e));\n  }\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"0m 0s\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n    const mins = Math.ceil(payload.minutesUntilStart);\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n    const notifMsg = `Your turn on ${machineName} starts in ${mins} minute(s)!`;\n    setNotifications(prev => [...prev, {\n      id: Date.now(),\n      message: notifMsg,\n      machineId: payload.machineId\n    }]);\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== Date.now()));\n    }, 10000);\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"granted\") {\n      new Notification(\"WashSimple\", {\n        body: notifMsg,\n        icon: \"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='75' font-size='80'>💧</text></svg>\"\n      });\n    }\n  }\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name || !name.trim()) return;\n    if (users.some(u => u.name === name.trim())) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, {\n      id,\n      name: name.trim()\n    }]);\n    setCurrentUserId(id);\n  }\n  function totalRemainingSecondsForMachine(m) {\n    var _m$queue;\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if ((_m$queue = m.queue) !== null && _m$queue !== void 0 && _m$queue.length) {\n      m.queue.forEach(q => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n  function remainingSecondsForUser(m, userId) {\n    var _m$queue2;\n    let total = 0;\n    if (m.inUse && Number(m.currentUserId) === Number(userId)) {\n      return remainingSeconds(m.endTime);\n    }\n    if (m.inUse && m.endTime) {\n      total += remainingSeconds(m.endTime);\n    }\n    if ((_m$queue2 = m.queue) !== null && _m$queue2 !== void 0 && _m$queue2.length) {\n      for (let q of m.queue) {\n        if (Number(q.userId) === Number(userId)) break;\n        total += (q.minutes || 50) * 60;\n      }\n    }\n    return total;\n  }\n  function getCurrentUserQueues() {\n    return machines.filter(m => Number(m.currentUserId) === Number(currentUserId) || m.queue && m.queue.some(q => Number(q.userId) === Number(currentUserId)));\n  }\n  async function joinQueue(machineId) {\n    var _machine$queue, _machine$queue2;\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n    const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === Number(currentUserId) || mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)));\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n    const minutesStr = prompt(\"Enter your wash duration (minutes):\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    (_machine$queue = machine.queue) === null || _machine$queue === void 0 ? void 0 : _machine$queue.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n    const ok = window.confirm(`Machine: ${machine.name}\\n` + `Current queue: ${((_machine$queue2 = machine.queue) === null || _machine$queue2 === void 0 ? void 0 : _machine$queue2.length) || 0} user(s)\\n` + `Estimated wait: ${Math.ceil(totalWaitSec / 60)} minutes\\n\\n` + `Join queue?`);\n    if (!ok) return;\n    try {\n      const res = await fetch(\"/api/machines/join\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          machineId,\n          userId: currentUserId,\n          minutes\n        })\n      });\n      if (!res.ok) throw new Error('Failed to join queue');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else {\n        alert(`Joined queue at position ${j.position}. You'll be notified 2 minutes before your turn.`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error joining queue:\", error);\n      alert(\"Failed to join queue. Please try again.\");\n    }\n  }\n  async function startWashing(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n    const minutesStr = prompt(\"Enter minutes for wash:\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n    try {\n      const res = await fetch(\"/api/machines/start\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          machineId,\n          userId: currentUserId,\n          minutes\n        })\n      });\n      if (!res.ok) throw new Error('Failed to start washing');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else if (j.started) {\n        alert(`Wash started! Will end at ${new Date(j.endTime).toLocaleTimeString()}`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error starting wash:\", error);\n      alert(\"Failed to start washing. Please try again.\");\n    }\n  }\n  const currentUserQueues = getCurrentUserQueues();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"hamburger-btn\",\n        onClick: () => setQueueOpenMobile(!queueOpenMobile),\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 7\n      }, this), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: '20px',\n          right: '20px',\n          zIndex: 1000,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '12px'\n        },\n        children: notifications.map(notif => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n            color: 'white',\n            padding: '16px 20px',\n            borderRadius: '12px',\n            boxShadow: '0 8px 24px rgba(16, 185, 129, 0.4)',\n            maxWidth: '320px',\n            animation: 'slideIn 0.3s ease-out',\n            fontWeight: '600'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '20px'\n              },\n              children: \"\\uD83D\\uDD14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: notif.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this)\n        }, notif.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"header-title-icon\",\n              children: \"\\uD83D\\uDCA7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"WashSimple\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"header-controls-icon\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: currentUserId,\n              onChange: e => setCurrentUserId(Number(e.target.value)),\n              className: \"user-select\",\n              children: users.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: u.id,\n                children: u.name\n              }, u.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addNewUser,\n              className: \"add-user-btn\",\n              children: \"+ Add User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), completedWashes.has(currentUserId) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%)',\n            padding: '20px',\n            borderRadius: '12px',\n            border: '1px solid #10b981',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              gap: '10px',\n              marginBottom: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '24px'\n              },\n              children: \"\\u2705\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              style: {\n                color: '#065f46',\n                fontSize: '16px'\n              },\n              children: \"Wash Completed!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#047857',\n              fontSize: '14px',\n              fontWeight: '500'\n            },\n            children: \"You have already washed your clothes today.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this) : currentUserQueues.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"active-sessions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"active-sessions-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"active-sessions-label-icon\",\n              children: \"\\uD83D\\uDD14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Your Active Sessions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), currentUserQueues.map(m => {\n            var _m$queue3;\n            const waitSec = remainingSecondsForUser(m, currentUserId);\n            const isWashing = Number(m.currentUserId) === Number(currentUserId) && m.inUse;\n            const queueIndex = (_m$queue3 = m.queue) === null || _m$queue3 === void 0 ? void 0 : _m$queue3.findIndex(q => Number(q.userId) === Number(currentUserId));\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `session-card ${isWashing ? 'session-card-washing' : 'session-card-queued'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: m.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-card-details\",\n                children: isWashing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"\\uD83D\\uDD04 Washing \\u2022 \", fmtSeconds(waitSec), \" left\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"\\u23F3 Position \", queueIndex + 1, \" \\u2022 ~\", Math.ceil(waitSec / 60), \" min wait\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 21\n              }, this)]\n            }, m.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-sessions\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"no-sessions-icon\",\n            children: \"\\uD83D\\uDE0A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-sessions-text\",\n            children: \"No active sessions. Start a wash or join a queue below!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"machine-grid\",\n          children: machines.map(m => {\n            var _m$queue4;\n            const totalSec = totalRemainingSecondsForMachine(m);\n            const occupied = totalSec > 0;\n            const isOwner = Number(m.currentUserId) === Number(currentUserId);\n            const hasCompletedWash = completedWashes.has(currentUserId);\n            const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === Number(currentUserId) || mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)));\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `card ${isOwner ? 'card-owner' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: m.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `status-indicator ${occupied ? 'status-indicator-occupied' : 'status-indicator-available'}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: occupied ? \"Occupied\" : \"Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-icon\",\n                    children: \"\\u23F0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Remaining: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: fmtSeconds(totalSec)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 40\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-icon\",\n                    children: \"\\uD83D\\uDC65\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Queue: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [((_m$queue4 = m.queue) === null || _m$queue4 === void 0 ? void 0 : _m$queue4.length) || 0, \" user(s)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 423,\n                      columnNumber: 36\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this), isOwner && m.inUse && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-row\",\n                  style: {\n                    color: '#10b981',\n                    fontWeight: 600\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-icon\",\n                    children: \"\\u2713\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"You're washing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => joinQueue(m.id),\n                  disabled: userInAnyMachine || hasCompletedWash,\n                  className: \"btn-join-queue\",\n                  title: hasCompletedWash ? \"You've already washed today\" : \"\",\n                  children: \"Join Queue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => startWashing(m.id),\n                  disabled: !isOwner && userInAnyMachine || m.inUse && !isOwner || hasCompletedWash,\n                  className: \"btn-start\",\n                  title: hasCompletedWash ? \"You've already washed today\" : \"\",\n                  children: isOwner && m.inUse ? \"Extend\" : \"Start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this)]\n            }, m.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `queue-panel ${queueOpenMobile ? 'show-mobile' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"All Queues\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this), machines.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"queue-empty\",\n            children: \"No machines available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this) : machines.map(m => {\n            var _users$find, _m$queue5;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"queue-machine\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: m.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 19\n              }, this), !m.inUse && (!m.queue || m.queue.length === 0) ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"queue-no-users\",\n                children: \"No active users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"queue-details\",\n                children: [m.inUse && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"queue-current-user\",\n                  children: [\"\\uD83D\\uDD04 \", ((_users$find = users.find(u => u.id === m.currentUserId)) === null || _users$find === void 0 ? void 0 : _users$find.name) || `User${m.currentUserId}`, /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"queue-current-user-time\",\n                    children: [fmtSeconds(remainingSeconds(m.endTime)), \" remaining\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 25\n                }, this), (_m$queue5 = m.queue) === null || _m$queue5 === void 0 ? void 0 : _m$queue5.map((q, idx) => {\n                  var _users$find2;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"queue-item\",\n                    children: [\"#\", idx + 1, \" \", ((_users$find2 = users.find(u => u.id === q.userId)) === null || _users$find2 === void 0 ? void 0 : _users$find2.name) || `User${q.userId}`, /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"queue-item-time\",\n                      children: [q.minutes, \" minutes scheduled\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 481,\n                      columnNumber: 27\n                    }, this)]\n                  }, q.userId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 21\n              }, this)]\n            }, m.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"q0iR3mGaGNU4QxNcPhEql1UQsTo=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Client","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","machines","setMachines","users","setUsers","id","name","currentUserId","setCurrentUserId","notifications","setNotifications","completedWashes","setCompletedWashes","Set","clientRef","intervalRef","queueOpenMobile","setQueueOpenMobile","fetch","method","headers","catch","e","console","error","socket","client","webSocketFactory","reconnectDelay","onConnect","log","subscribe","msg","JSON","parse","body","payload","handleNotification","completedUsers","onStompError","frame","activate","current","fetchMachines","setInterval","prev","Notification","permission","requestPermission","deactivate","clearInterval","then","r","ok","Error","json","data","remainingSeconds","endTime","diff","Math","floor","Date","getTime","now","fmtSeconds","totalSec","mins","secs","type","Number","userId","ceil","minutesUntilStart","machineName","machineId","notifMsg","message","setTimeout","filter","n","icon","addNewUser","prompt","trim","some","u","alert","totalRemainingSecondsForMachine","m","_m$queue","total","inUse","queue","length","forEach","q","minutes","remainingSecondsForUser","_m$queue2","getCurrentUserQueues","joinQueue","_machine$queue","_machine$queue2","machine","find","has","userInAnyMachine","mm","minutesStr","parseInt","isNaN","totalWaitSec","window","confirm","res","stringify","j","position","startWashing","started","toLocaleTimeString","currentUserQueues","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","top","right","zIndex","display","flexDirection","gap","map","notif","background","color","padding","borderRadius","boxShadow","maxWidth","animation","fontWeight","alignItems","fontSize","value","onChange","target","border","textAlign","justifyContent","marginBottom","_m$queue3","waitSec","isWashing","queueIndex","findIndex","_m$queue4","occupied","isOwner","hasCompletedWash","disabled","title","_users$find","_m$queue5","idx","_users$find2","_c","$RefreshReg$"],"sources":["/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\n\nexport default function Dashboard() {\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{ id: 1, name: \"User1\" }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const [notifications, setNotifications] = useState([]);\n  const [completedWashes, setCompletedWashes] = useState(new Set());\n  const clientRef = useRef(null);\n  const intervalRef = useRef(null);\n  const [queueOpenMobile, setQueueOpenMobile] = useState(false);\n\n\n  useEffect(() => {\n    // Reset data on page load\n    fetch(\"/api/machines/reset\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" }\n    }).catch(e => console.error(\"Reset failed\", e));\n\n//    const socket = new SockJS(\"/ws\");\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        console.log(\"WebSocket connected\");\n\n        client.subscribe(\"/topic/machines\", (msg) => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n\n        client.subscribe(\"/topic/notifications\", (msg) => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n\n        client.subscribe(\"/topic/washHistory\", (msg) => {\n          try {\n            const completedUsers = JSON.parse(msg.body);\n            setCompletedWashes(new Set(completedUsers));\n          } catch (e) {\n            console.error(\"parse wash history\", e);\n          }\n        });\n      },\n      onStompError: (frame) => {\n        console.error('STOMP error', frame);\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n\n    fetchMachines();\n\n    intervalRef.current = setInterval(() => {\n      setMachines(prev => [...prev]);\n    }, 1000);\n\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"default\") {\n      Notification.requestPermission();\n    }\n\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  function fetchMachines() {\n    fetch(\"/api/machines\")\n      .then((r) => {\n        if (!r.ok) throw new Error('Network response was not ok');\n        return r.json();\n      })\n      .then((data) => setMachines(data))\n      .catch((e) => console.error(\"fetch machines\", e));\n  }\n\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"0m 0s\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n\n    const mins = Math.ceil(payload.minutesUntilStart);\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n\n    const notifMsg = `Your turn on ${machineName} starts in ${mins} minute(s)!`;\n\n    setNotifications(prev => [...prev, {\n      id: Date.now(),\n      message: notifMsg,\n      machineId: payload.machineId\n    }]);\n\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== Date.now()));\n    }, 10000);\n\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"granted\") {\n      new Notification(\"WashSimple\", {\n        body: notifMsg,\n        icon: \"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='75' font-size='80'>💧</text></svg>\"\n      });\n    }\n  }\n\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name || !name.trim()) return;\n    if (users.some(u => u.name === name.trim())) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, { id, name: name.trim() }]);\n    setCurrentUserId(id);\n  }\n\n  function totalRemainingSecondsForMachine(m) {\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if (m.queue?.length) {\n      m.queue.forEach(q => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n\n  function remainingSecondsForUser(m, userId) {\n    let total = 0;\n\n    if (m.inUse && Number(m.currentUserId) === Number(userId)) {\n      return remainingSeconds(m.endTime);\n    }\n\n    if (m.inUse && m.endTime) {\n      total += remainingSeconds(m.endTime);\n    }\n\n    if (m.queue?.length) {\n      for (let q of m.queue) {\n        if (Number(q.userId) === Number(userId)) break;\n        total += (q.minutes || 50) * 60;\n      }\n    }\n\n    return total;\n  }\n\n  function getCurrentUserQueues() {\n    return machines.filter(m =>\n      Number(m.currentUserId) === Number(currentUserId) ||\n      (m.queue && m.queue.some(q => Number(q.userId) === Number(currentUserId)))\n    );\n  }\n\n  async function joinQueue(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n\n    const userInAnyMachine = machines.some(mm =>\n      Number(mm.currentUserId) === Number(currentUserId) ||\n      (mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)))\n    );\n\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n\n    const minutesStr = prompt(\"Enter your wash duration (minutes):\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    machine.queue?.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n\n    const ok = window.confirm(\n      `Machine: ${machine.name}\\n` +\n      `Current queue: ${machine.queue?.length || 0} user(s)\\n` +\n      `Estimated wait: ${Math.ceil(totalWaitSec/60)} minutes\\n\\n` +\n      `Join queue?`\n    );\n    if (!ok) return;\n\n    try {\n      const res = await fetch(\"/api/machines/join\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n      });\n      if (!res.ok) throw new Error('Failed to join queue');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else {\n        alert(`Joined queue at position ${j.position}. You'll be notified 2 minutes before your turn.`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error joining queue:\", error);\n      alert(\"Failed to join queue. Please try again.\");\n    }\n  }\n\n  async function startWashing(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n\n    const minutesStr = prompt(\"Enter minutes for wash:\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n\n    try {\n      const res = await fetch(\"/api/machines/start\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n      });\n      if (!res.ok) throw new Error('Failed to start washing');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else if (j.started) {\n        alert(`Wash started! Will end at ${new Date(j.endTime).toLocaleTimeString()}`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error starting wash:\", error);\n      alert(\"Failed to start washing. Please try again.\");\n    }\n  }\n\n  const currentUserQueues = getCurrentUserQueues();\n\n  return (\n    <div className=\"dashboard-wrapper\">\n      <div className=\"container\">\n\n      <button\n          className=\"hamburger-btn\"\n          onClick={() => setQueueOpenMobile(!queueOpenMobile)}\n        >\n          ☰\n        </button>\n        {notifications.length > 0 && (\n          <div style={{\n            position: 'fixed',\n            top: '20px',\n            right: '20px',\n            zIndex: 1000,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '12px'\n          }}>\n            {notifications.map(notif => (\n              <div key={notif.id} style={{\n                background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n                color: 'white',\n                padding: '16px 20px',\n                borderRadius: '12px',\n                boxShadow: '0 8px 24px rgba(16, 185, 129, 0.4)',\n                maxWidth: '320px',\n                animation: 'slideIn 0.3s ease-out',\n                fontWeight: '600'\n              }}>\n                <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                  <span style={{ fontSize: '20px' }}>🔔</span>\n                  <span>{notif.message}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n\n\n        <div className=\"header-card\">\n          <div className=\"header\">\n            <div className=\"header-title\">\n              <span className=\"header-title-icon\">💧</span>\n              <h1>WashSimple</h1>\n            </div>\n            <div className=\"header-controls\">\n              <span className=\"header-controls-icon\">👤</span>\n              <select\n                value={currentUserId}\n                onChange={(e) => setCurrentUserId(Number(e.target.value))}\n                className=\"user-select\"\n              >\n                {users.map(u => (\n                  <option key={u.id} value={u.id}>{u.name}</option>\n                ))}\n              </select>\n              <button onClick={addNewUser} className=\"add-user-btn\">\n                + Add User\n              </button>\n            </div>\n          </div>\n\n          {completedWashes.has(currentUserId) ? (\n            <div style={{\n              background: 'linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%)',\n              padding: '20px',\n              borderRadius: '12px',\n              border: '1px solid #10b981',\n              textAlign: 'center'\n            }}>\n              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '10px', marginBottom: '8px' }}>\n                <span style={{ fontSize: '24px' }}>✅</span>\n                <strong style={{ color: '#065f46', fontSize: '16px' }}>Wash Completed!</strong>\n              </div>\n              <div style={{ color: '#047857', fontSize: '14px', fontWeight: '500' }}>\n                You have already washed your clothes today.\n              </div>\n            </div>\n          ) : currentUserQueues.length > 0 ? (\n            <div className=\"active-sessions\">\n              <div className=\"active-sessions-label\">\n                <span className=\"active-sessions-label-icon\">🔔</span>\n                <strong>Your Active Sessions:</strong>\n              </div>\n              {currentUserQueues.map(m => {\n                const waitSec = remainingSecondsForUser(m, currentUserId);\n                const isWashing = Number(m.currentUserId) === Number(currentUserId) && m.inUse;\n                const queueIndex = m.queue?.findIndex(q => Number(q.userId) === Number(currentUserId));\n\n                return (\n                  <div key={m.id} className={`session-card ${isWashing ? 'session-card-washing' : 'session-card-queued'}`}>\n                    <strong>{m.name}</strong>\n                    <div className=\"session-card-details\">\n                      {isWashing ? (\n                        <>🔄 Washing • {fmtSeconds(waitSec)} left</>\n                      ) : (\n                        <>⏳ Position {queueIndex + 1} • ~{Math.ceil(waitSec / 60)} min wait</>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"no-sessions\">\n              <span className=\"no-sessions-icon\">😊</span>\n              <div className=\"no-sessions-text\">No active sessions. Start a wash or join a queue below!</div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"main-content\">\n          <div className=\"machine-grid\">\n            {machines.map(m => {\n              const totalSec = totalRemainingSecondsForMachine(m);\n              const occupied = totalSec > 0;\n              const isOwner = Number(m.currentUserId) === Number(currentUserId);\n              const hasCompletedWash = completedWashes.has(currentUserId);\n              const userInAnyMachine = machines.some(mm =>\n                Number(mm.currentUserId) === Number(currentUserId) ||\n                (mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)))\n              );\n\n              return (\n                <div key={m.id} className={`card ${isOwner ? 'card-owner' : ''}`}>\n                  <h3>{m.name}</h3>\n\n                  <div className=\"card-details\">\n                    <div className=\"status-row\">\n                      <div className={`status-indicator ${occupied ? 'status-indicator-occupied' : 'status-indicator-available'}`} />\n                      <strong>{occupied ? \"Occupied\" : \"Available\"}</strong>\n                    </div>\n\n                    <div className=\"info-row\">\n                      <span className=\"info-icon\">⏰</span>\n                      <span>Remaining: <strong>{fmtSeconds(totalSec)}</strong></span>\n                    </div>\n\n                    <div className=\"info-row\">\n                      <span className=\"info-icon\">👥</span>\n                      <span>Queue: <strong>{m.queue?.length || 0} user(s)</strong></span>\n                    </div>\n\n                    {isOwner && m.inUse && (\n                      <div className=\"info-row\" style={{ color: '#10b981', fontWeight: 600 }}>\n                        <span className=\"info-icon\">✓</span>\n                        <span>You're washing</span>\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"card-actions\">\n                    <button\n                      onClick={() => joinQueue(m.id)}\n                      disabled={userInAnyMachine || hasCompletedWash}\n                      className=\"btn-join-queue\"\n                      title={hasCompletedWash ? \"You've already washed today\" : \"\"}\n                    >\n                      Join Queue\n                    </button>\n                    <button\n                      onClick={() => startWashing(m.id)}\n                      disabled={(!isOwner && userInAnyMachine) || (m.inUse && !isOwner) || hasCompletedWash}\n                      className=\"btn-start\"\n                      title={hasCompletedWash ? \"You've already washed today\" : \"\"}\n                    >\n                      {isOwner && m.inUse ? \"Extend\" : \"Start\"}\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          <div className={`queue-panel ${queueOpenMobile ? 'show-mobile' : ''}`}>\n\n            <h3>All Queues</h3>\n            {machines.length === 0 ? (\n              <div className=\"queue-empty\">No machines available</div>\n            ) : (\n              machines.map(m => (\n                <div key={m.id} className=\"queue-machine\">\n                  <strong>{m.name}</strong>\n                  {!m.inUse && (!m.queue || m.queue.length === 0) ? (\n                    <div className=\"queue-no-users\">No active users</div>\n                  ) : (\n                    <div className=\"queue-details\">\n                      {m.inUse && (\n                        <div className=\"queue-current-user\">\n                          🔄 {users.find(u => u.id === m.currentUserId)?.name || `User${m.currentUserId}`}\n                          <div className=\"queue-current-user-time\">\n                            {fmtSeconds(remainingSeconds(m.endTime))} remaining\n                          </div>\n                        </div>\n                      )}\n                      {m.queue?.map((q, idx) => (\n                        <div key={q.userId} className=\"queue-item\">\n                          #{idx + 1} {users.find(u => u.id === q.userId)?.name || `User${q.userId}`}\n                          <div className=\"queue-item-time\">\n                            {q.minutes} minutes scheduled\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}