{"ast":null,"code":"var _jsxFileName = \"/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  var _users$find3;\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: \"User1\"\n  }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const clientRef = useRef(null);\n  useEffect(() => {\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        client.subscribe(\"/topic/machines\", msg => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n        client.subscribe(\"/topic/notifications\", msg => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n    fetchMachines();\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n    };\n  }, []);\n  function fetchMachines() {\n    fetch(\"http://localhost:8080/api/machines\").then(r => r.json()).then(data => setMachines(data)).catch(e => console.error(\"fetch machines\", e));\n  }\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"-\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n    const mins = payload.minutesUntilStart;\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n    alert(`ðŸ”” Hey! Your turn on ${machineName} will start in about ${mins} minute(s). Get ready!`);\n  }\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name) return;\n    if (users.some(u => u.name === name)) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, {\n      id,\n      name\n    }]);\n    setCurrentUserId(id);\n  }\n  function totalRemainingSecondsForMachine(m) {\n    var _m$queue;\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if ((_m$queue = m.queue) !== null && _m$queue !== void 0 && _m$queue.length) {\n      m.queue.forEach(q => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n  function remainingSecondsForUser(m, userId) {\n    var _m$queue2;\n    let total = 0;\n    if (m.inUse && m.currentUserId) {\n      if (m.currentUserId === userId) return remainingSeconds(m.endTime);\n      total += remainingSeconds(m.endTime);\n    }\n    if ((_m$queue2 = m.queue) !== null && _m$queue2 !== void 0 && _m$queue2.length) {\n      for (let q of m.queue) {\n        if (q.userId === userId) break;\n        total += (q.minutes || 50) * 60;\n      }\n      if (m.queue.some(q => q.userId === userId)) {\n        const qUser = m.queue.find(q => q.userId === userId);\n        total += (qUser.minutes || 50) * 60;\n      }\n    }\n    return total;\n  }\n  function getCurrentUserQueues() {\n    return machines.filter(m => m.currentUserId === currentUserId || m.queue && m.queue.some(q => q.userId === currentUserId));\n  }\n  async function joinQueue(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n    const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === currentUserId || mm.queue && mm.queue.some(q => q.userId === currentUserId));\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n    const queueEntries = machine.queue || [];\n    let queueStr = \"\";\n    if (machine.inUse && machine.currentUserId) {\n      const userObj = users.find(u => u.id === machine.currentUserId);\n      queueStr += `Current: ${userObj ? userObj.name : \"User\" + machine.currentUserId} â€” remaining ${fmtSeconds(remainingSeconds(machine.endTime))}\\n`;\n    }\n    queueEntries.forEach((q, idx) => {\n      const userObj = users.find(u => u.id === q.userId);\n      queueStr += `${idx + 1}. ${userObj ? userObj.name : \"User\" + q.userId} â€” ${q.minutes} min\\n`;\n    });\n    const minutesStr = prompt(`Queue:\\n${queueStr || \"No queued users\"}\\n\\nEnter your wash duration (minutes):`, \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    queueEntries.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n    const ok = window.confirm(`Total wait before your turn: ${Math.ceil(totalWaitSec / 60)} minutes.\\nJoin queue?`);\n    if (!ok) return;\n    const res = await fetch(\"http://localhost:8080/api/machines/join\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        machineId,\n        userId: currentUserId,\n        minutes\n      })\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);else {\n      alert(`Joined queue. Position: ${j.position}. You will be notified 2 minutes before your turn.`);\n      fetchMachines();\n    }\n  }\n  async function startWashing(machineId) {\n    const minutesStr = prompt(\"Enter minutes for wash (minutes)\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n    const res = await fetch(\"http://localhost:8080/api/machines/start\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        machineId,\n        userId: currentUserId,\n        minutes\n      })\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);else if (j.started) {\n      alert(\"Started: ends at \" + j.endTime);\n      fetchMachines();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100vh\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        padding: \"12px 24px\",\n        background: \"#2c3e50\",\n        color: \"#fff\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"WashSimple Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: currentUserId,\n          onChange: e => setCurrentUserId(Number(e.target.value)),\n          style: {\n            padding: 4,\n            borderRadius: 4\n          },\n          children: users.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u.id,\n            children: u.name\n          }, u.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewUser,\n          style: {\n            padding: \"4px 8px\",\n            borderRadius: 4\n          },\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"300px\",\n          borderRight: \"1px solid #ddd\",\n          padding: 12,\n          background: \"#ecf0f1\",\n          overflowY: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"All Machines & Queues\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), machines.map(m => {\n          var _users$find, _m$queue3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 12,\n              padding: 8,\n              borderRadius: 6,\n              background: \"#fff\",\n              boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: m.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: m.inUse ? \"red\" : \"green\"\n                },\n                children: m.inUse ? \"Occupied\" : \"Free\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                marginTop: 6,\n                paddingLeft: 16\n              },\n              children: [m.inUse && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [((_users$find = users.find(u => u.id === m.currentUserId)) === null || _users$find === void 0 ? void 0 : _users$find.name) || \"User\" + m.currentUserId, \" \\u2014 currently washing (\", fmtSeconds(remainingSeconds(m.endTime)), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 29\n              }, this), (_m$queue3 = m.queue) === null || _m$queue3 === void 0 ? void 0 : _m$queue3.map((q, idx) => {\n                var _users$find2;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [((_users$find2 = users.find(u => u.id === q.userId)) === null || _users$find2 === void 0 ? void 0 : _users$find2.name) || \"User\" + q.userId, \" \\u2014 queued at position \", idx + 1, \" (\", q.minutes, \" min)\"]\n                }, q.userId, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)]\n          }, m.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          padding: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [(_users$find3 = users.find(u => u.id === currentUserId)) === null || _users$find3 === void 0 ? void 0 : _users$find3.name, \"'s Queue Info\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"#f9f9f9\",\n            padding: 12,\n            borderRadius: 6,\n            boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: getCurrentUserQueues().map(m => {\n              var _m$queue4;\n              const waitSec = remainingSecondsForUser(m, currentUserId);\n              const isWashing = m.currentUserId === currentUserId && m.inUse;\n              const queueIndex = (_m$queue4 = m.queue) === null || _m$queue4 === void 0 ? void 0 : _m$queue4.findIndex(q => q.userId === currentUserId);\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  marginBottom: 6\n                },\n                children: [m.name, \" \\u2014 \", isWashing ? `Currently Washing (${fmtSeconds(waitSec)})` : `Queued at position ${queueIndex + 1} (wait ~${Math.ceil(waitSec / 60)} min)`]\n              }, m.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Sm0D3nLDNI8OT/4oLTFACFwBwEY=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Client","jsxDEV","_jsxDEV","Dashboard","_s","_users$find3","machines","setMachines","users","setUsers","id","name","currentUserId","setCurrentUserId","clientRef","socket","client","webSocketFactory","reconnectDelay","onConnect","subscribe","msg","JSON","parse","body","e","console","error","payload","handleNotification","activate","current","fetchMachines","deactivate","fetch","then","r","json","data","catch","remainingSeconds","endTime","diff","Math","floor","Date","getTime","now","fmtSeconds","totalSec","mins","secs","type","Number","userId","minutesUntilStart","machineName","machineId","alert","addNewUser","prompt","some","u","prev","totalRemainingSecondsForMachine","m","_m$queue","total","inUse","queue","length","forEach","q","minutes","remainingSecondsForUser","_m$queue2","qUser","find","getCurrentUserQueues","filter","joinQueue","machine","userInAnyMachine","mm","queueEntries","queueStr","userObj","idx","minutesStr","parseInt","totalWaitSec","ok","window","confirm","ceil","res","method","headers","stringify","j","position","startWashing","started","style","display","flexDirection","height","fontFamily","children","justifyContent","alignItems","padding","background","color","gap","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","borderRadius","map","onClick","flex","width","borderRight","overflowY","_users$find","_m$queue3","marginBottom","boxShadow","marginTop","paddingLeft","_users$find2","_m$queue4","waitSec","isWashing","queueIndex","findIndex","_c","$RefreshReg$"],"sources":["/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\n\nexport default function Dashboard() {\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{ id: 1, name: \"User1\" }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const clientRef = useRef(null);\n\n  useEffect(() => {\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        client.subscribe(\"/topic/machines\", (msg) => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n\n        client.subscribe(\"/topic/notifications\", (msg) => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n\n    fetchMachines();\n\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n    };\n  }, []);\n\n  function fetchMachines() {\n    fetch(\"http://localhost:8080/api/machines\")\n      .then((r) => r.json())\n      .then((data) => setMachines(data))\n      .catch((e) => console.error(\"fetch machines\", e));\n  }\n\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"-\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n\n    const mins = payload.minutesUntilStart;\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n    alert(`ðŸ”” Hey! Your turn on ${machineName} will start in about ${mins} minute(s). Get ready!`);\n  }\n\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name) return;\n    if (users.some(u => u.name === name)) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, { id, name }]);\n    setCurrentUserId(id);\n  }\n\n  function totalRemainingSecondsForMachine(m) {\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if (m.queue?.length) {\n      m.queue.forEach(q => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n\n  function remainingSecondsForUser(m, userId) {\n    let total = 0;\n    if (m.inUse && m.currentUserId) {\n      if (m.currentUserId === userId) return remainingSeconds(m.endTime);\n      total += remainingSeconds(m.endTime);\n    }\n    if (m.queue?.length) {\n      for (let q of m.queue) {\n        if (q.userId === userId) break;\n        total += (q.minutes || 50) * 60;\n      }\n      if (m.queue.some(q => q.userId === userId)) {\n        const qUser = m.queue.find(q => q.userId === userId);\n        total += (qUser.minutes || 50) * 60;\n      }\n    }\n    return total;\n  }\n\n  function getCurrentUserQueues() {\n    return machines.filter(m =>\n      m.currentUserId === currentUserId || (m.queue && m.queue.some(q => q.userId === currentUserId))\n    );\n  }\n\n  async function joinQueue(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    const userInAnyMachine = machines.some(mm =>\n      Number(mm.currentUserId) === currentUserId ||\n      (mm.queue && mm.queue.some(q => q.userId === currentUserId))\n    );\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n\n    const queueEntries = machine.queue || [];\n    let queueStr = \"\";\n    if (machine.inUse && machine.currentUserId) {\n      const userObj = users.find(u => u.id === machine.currentUserId);\n      queueStr += `Current: ${userObj ? userObj.name : \"User\" + machine.currentUserId} â€” remaining ${fmtSeconds(remainingSeconds(machine.endTime))}\\n`;\n    }\n    queueEntries.forEach((q, idx) => {\n      const userObj = users.find(u => u.id === q.userId);\n      queueStr += `${idx + 1}. ${userObj ? userObj.name : \"User\" + q.userId} â€” ${q.minutes} min\\n`;\n    });\n\n    const minutesStr = prompt(`Queue:\\n${queueStr || \"No queued users\"}\\n\\nEnter your wash duration (minutes):`, \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    queueEntries.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n\n    const ok = window.confirm(`Total wait before your turn: ${Math.ceil(totalWaitSec/60)} minutes.\\nJoin queue?`);\n    if (!ok) return;\n\n    const res = await fetch(\"http://localhost:8080/api/machines/join\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);\n    else {\n      alert(`Joined queue. Position: ${j.position}. You will be notified 2 minutes before your turn.`);\n      fetchMachines();\n    }\n  }\n\n  async function startWashing(machineId) {\n    const minutesStr = prompt(\"Enter minutes for wash (minutes)\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10) || 50;\n\n    const res = await fetch(\"http://localhost:8080/api/machines/start\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n    });\n    const j = await res.json();\n    if (j.error) alert(j.error);\n    else if (j.started) {\n      alert(\"Started: ends at \" + j.endTime);\n      fetchMachines();\n    }\n  }\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\", fontFamily:\"Arial, sans-serif\" }}>\n      {/* Top bar */}\n      <div style={{ display: \"flex\", justifyContent:\"space-between\", alignItems:\"center\", padding: \"12px 24px\", background:\"#2c3e50\", color:\"#fff\" }}>\n        <div style={{display:\"flex\", alignItems:\"center\", gap:12}}>\n          <h2>WashSimple Dashboard</h2>\n          <select\n            value={currentUserId}\n            onChange={(e) => setCurrentUserId(Number(e.target.value))}\n            style={{padding:4, borderRadius:4}}\n          >\n            {users.map(u => <option key={u.id} value={u.id}>{u.name}</option>)}\n          </select>\n          <button onClick={addNewUser} style={{padding:\"4px 8px\", borderRadius:4}}>Add User</button>\n        </div>\n      </div>\n\n      <div style={{ display:\"flex\", flex:1 }}>\n        {/* Left panel: Machines */}\n        <div style={{ width: \"300px\", borderRight:\"1px solid #ddd\", padding:12, background:\"#ecf0f1\", overflowY:\"auto\" }}>\n          <h3>All Machines & Queues</h3>\n          {machines.map(m => (\n            <div key={m.id} style={{marginBottom:12, padding:8, borderRadius:6, background:\"#fff\", boxShadow:\"0 1px 3px rgba(0,0,0,0.1)\"}}>\n              <b>{m.name}</b>\n              <div>Status: <span style={{color: m.inUse ? \"red\" : \"green\"}}>{m.inUse ? \"Occupied\" : \"Free\"}</span></div>\n              <ul style={{marginTop:6, paddingLeft:16}}>\n                {m.inUse && <li>{users.find(u=>u.id===m.currentUserId)?.name || \"User\"+m.currentUserId} â€” currently washing ({fmtSeconds(remainingSeconds(m.endTime))})</li>}\n                {m.queue?.map((q, idx) => (\n                  <li key={q.userId}>{users.find(u=>u.id===q.userId)?.name || \"User\"+q.userId} â€” queued at position {idx+1} ({q.minutes} min)</li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n\n        {/* Right panel: Current User */}\n        <div style={{flex:1, padding:16}}>\n          <h3>{users.find(u=>u.id===currentUserId)?.name}'s Queue Info</h3>\n          <div style={{background:\"#f9f9f9\", padding:12, borderRadius:6, boxShadow:\"0 1px 3px rgba(0,0,0,0.1)\"}}>\n            <ul>\n              {getCurrentUserQueues().map(m => {\n                const waitSec = remainingSecondsForUser(m, currentUserId);\n                const isWashing = m.currentUserId === currentUserId && m.inUse;\n                const queueIndex = m.queue?.findIndex(q => q.userId === currentUserId);\n                return (\n                  <li key={m.id} style={{marginBottom:6}}>\n                    {m.name} â€” {isWashing ? `Currently Washing (${fmtSeconds(waitSec)})` :\n                      `Queued at position ${queueIndex + 1} (wait ~${Math.ceil(waitSec/60)} min)` }\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}