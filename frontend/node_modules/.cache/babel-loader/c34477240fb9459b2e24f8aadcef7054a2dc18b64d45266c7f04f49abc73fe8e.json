{"ast":null,"code":"var _jsxFileName = \"/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{\n    id: 1,\n    name: \"User1\"\n  }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const [notifications, setNotifications] = useState([]);\n  const [completedWashes, setCompletedWashes] = useState(new Set());\n  const [queueOpenMobile, setQueueOpenMobile] = useState(false); // Mobile toggle\n  const clientRef = useRef(null);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    // Reset data on page load\n    fetch(\"/api/machines/reset\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).catch(e => console.error(\"Reset failed\", e));\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        console.log(\"WebSocket connected\");\n        client.subscribe(\"/topic/machines\", msg => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n        client.subscribe(\"/topic/notifications\", msg => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n        client.subscribe(\"/topic/washHistory\", msg => {\n          try {\n            const completedUsers = JSON.parse(msg.body);\n            setCompletedWashes(new Set(completedUsers));\n          } catch (e) {\n            console.error(\"parse wash history\", e);\n          }\n        });\n      },\n      onStompError: frame => {\n        console.error('STOMP error', frame);\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n    fetchMachines();\n    intervalRef.current = setInterval(() => {\n      setMachines(prev => [...prev]);\n    }, 1000);\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"default\") {\n      Notification.requestPermission();\n    }\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, []);\n  function fetchMachines() {\n    fetch(\"/api/machines\").then(r => {\n      if (!r.ok) throw new Error('Network response was not ok');\n      return r.json();\n    }).then(data => setMachines(data)).catch(e => console.error(\"fetch machines\", e));\n  }\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"0m 0s\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n    const mins = Math.ceil(payload.minutesUntilStart);\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n    const notifMsg = `Your turn on ${machineName} starts in ${mins} minute(s)!`;\n    const notifId = Date.now();\n    setNotifications(prev => [...prev, {\n      id: notifId,\n      message: notifMsg,\n      machineId: payload.machineId\n    }]);\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== notifId));\n    }, 10000);\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"granted\") {\n      new Notification(\"WashSimple\", {\n        body: notifMsg,\n        icon: \"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='75' font-size='80'>💧</text></svg>\"\n      });\n    }\n  }\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name || !name.trim()) return;\n    if (users.some(u => u.name === name.trim())) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, {\n      id,\n      name: name.trim()\n    }]);\n    setCurrentUserId(id);\n  }\n  function totalRemainingSecondsForMachine(m) {\n    var _m$queue;\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if ((_m$queue = m.queue) !== null && _m$queue !== void 0 && _m$queue.length) {\n      m.queue.forEach(q => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n  function remainingSecondsForUser(m, userId) {\n    var _m$queue2;\n    let total = 0;\n    if (m.inUse && Number(m.currentUserId) === Number(userId)) {\n      return remainingSeconds(m.endTime);\n    }\n    if (m.inUse && m.endTime) {\n      total += remainingSeconds(m.endTime);\n    }\n    if ((_m$queue2 = m.queue) !== null && _m$queue2 !== void 0 && _m$queue2.length) {\n      for (let q of m.queue) {\n        if (Number(q.userId) === Number(userId)) break;\n        total += (q.minutes || 50) * 60;\n      }\n    }\n    return total;\n  }\n  function getCurrentUserQueues() {\n    return machines.filter(m => Number(m.currentUserId) === Number(currentUserId) || m.queue && m.queue.some(q => Number(q.userId) === Number(currentUserId)));\n  }\n  async function joinQueue(machineId) {\n    var _machine$queue, _machine$queue2;\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n    const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === Number(currentUserId) || mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)));\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n    const minutesStr = prompt(\"Enter your wash duration (minutes):\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    (_machine$queue = machine.queue) === null || _machine$queue === void 0 ? void 0 : _machine$queue.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n    const ok = window.confirm(`Machine: ${machine.name}\\n` + `Current queue: ${((_machine$queue2 = machine.queue) === null || _machine$queue2 === void 0 ? void 0 : _machine$queue2.length) || 0} user(s)\\n` + `Estimated wait: ${Math.ceil(totalWaitSec / 60)} minutes\\n\\n` + `Join queue?`);\n    if (!ok) return;\n    try {\n      const res = await fetch(\"/api/machines/join\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          machineId,\n          userId: currentUserId,\n          minutes\n        })\n      });\n      if (!res.ok) throw new Error('Failed to join queue');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else {\n        alert(`Joined queue at position ${j.position}. You'll be notified 2 minutes before your turn.`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error joining queue:\", error);\n      alert(\"Failed to join queue. Please try again.\");\n    }\n  }\n  async function startWashing(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n    const minutesStr = prompt(\"Enter minutes for wash:\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n    try {\n      const res = await fetch(\"/api/machines/start\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          machineId,\n          userId: currentUserId,\n          minutes\n        })\n      });\n      if (!res.ok) throw new Error('Failed to start washing');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else if (j.started) {\n        alert(`Wash started! Will end at ${new Date(j.endTime).toLocaleTimeString()}`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error starting wash:\", error);\n      alert(\"Failed to start washing. Please try again.\");\n    }\n  }\n  const currentUserQueues = getCurrentUserQueues();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: '20px',\n          right: '20px',\n          zIndex: 1000,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '12px'\n        },\n        children: notifications.map(notif => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n            color: 'white',\n            padding: '16px 20px',\n            borderRadius: '12px',\n            boxShadow: '0 8px 24px rgba(16, 185, 129, 0.4)',\n            maxWidth: '320px',\n            animation: 'slideIn 0.3s ease-out',\n            fontWeight: '600'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '20px'\n              },\n              children: \"\\uD83D\\uDD14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: notif.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 17\n          }, this)\n        }, notif.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"header-title-icon\",\n              children: \"\\uD83D\\uDCA7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"WashSimple\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hamburger-btn\",\n            onClick: () => setQueueOpenMobile(!queueOpenMobile),\n            style: {\n              display: 'none',\n              // visible on mobile via media query\n              background: 'transparent',\n              border: 'none',\n              fontSize: '28px',\n              cursor: 'pointer'\n            },\n            children: \"\\u2630\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"header-controls-icon\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: currentUserId,\n              onChange: e => setCurrentUserId(Number(e.target.value)),\n              className: \"user-select\",\n              children: users.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: u.id,\n                children: u.name\n              }, u.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addNewUser,\n              className: \"add-user-btn\",\n              children: \"+ Add User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), completedWashes.has(currentUserId) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%)',\n            padding: '20px',\n            borderRadius: '12px',\n            border: '1px solid #10b981',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              gap: '10px',\n              marginBottom: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '24px'\n              },\n              children: \"\\u2705\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              style: {\n                color: '#065f46',\n                fontSize: '16px'\n              },\n              children: \"Wash Completed!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#047857',\n              fontSize: '14px',\n              fontWeight: '500'\n            },\n            children: \"You have already washed your clothes today.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this) : currentUserQueues.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"active-sessions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"active-sessions-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"active-sessions-label-icon\",\n              children: \"\\uD83D\\uDD14\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Your Active Sessions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), currentUserQueues.map(m => {\n            var _m$queue3;\n            const waitSec = remainingSecondsForUser(m, currentUserId);\n            const isWashing = Number(m.currentUserId) === Number(currentUserId) && m.inUse;\n            const queueIndex = (_m$queue3 = m.queue) === null || _m$queue3 === void 0 ? void 0 : _m$queue3.findIndex(q => Number(q.userId) === Number(currentUserId));\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `session-card ${isWashing ? 'session-card-washing' : 'session-card-queued'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: m.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-card-details\",\n                children: isWashing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"\\uD83D\\uDD04 Washing \\u2022 \", fmtSeconds(waitSec), \" left\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"\\u23F3 Position \", queueIndex + 1, \" \\u2022 ~\", Math.ceil(waitSec / 60), \" min wait\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 21\n              }, this)]\n            }, m.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-sessions\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"no-sessions-icon\",\n            children: \"\\uD83D\\uDE0A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-sessions-text\",\n            children: \"No active sessions. Start a wash or join a queue below!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        style: {\n          display: 'flex',\n          gap: '20px',\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"machine-grid\",\n          style: {\n            flex: 2,\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fill,minmax(220px,1fr))',\n            gap: '16px'\n          },\n          children: machines.map(m => {\n            var _m$queue4;\n            const totalSec = totalRemainingSecondsForMachine(m);\n            const occupied = totalSec > 0;\n            const isOwner = Number(m.currentUserId) === Number(currentUserId);\n            const hasCompletedWash = completedWashes.has(currentUserId);\n            const userInAnyMachine = machines.some(mm => Number(mm.currentUserId) === Number(currentUserId) || mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)));\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `card ${isOwner ? 'card-owner' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: m.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `status-indicator ${occupied ? 'status-indicator-occupied' : 'status-indicator-available'}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: occupied ? \"Occupied\" : \"Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-icon\",\n                    children: \"\\u23F0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Remaining: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: fmtSeconds(totalSec)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 428,\n                      columnNumber: 40\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-icon\",\n                    children: \"\\uD83D\\uDC65\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Queue: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: [((_m$queue4 = m.queue) === null || _m$queue4 === void 0 ? void 0 : _m$queue4.length) || 0, \" user(s)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 36\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 21\n                }, this), isOwner && m.inUse && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"info-row\",\n                  style: {\n                    color: '#10b981',\n                    fontWeight: 600\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"info-icon\",\n                    children: \"\\u2713\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"You're washing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => joinQueue(m.id),\n                  disabled: userInAnyMachine || hasCompletedWash,\n                  className: \"btn-join-queue\",\n                  title: hasCompletedWash ? \"You've already washed today\" : \"\",\n                  children: \"Join Queue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => startWashing(m.id),\n                  disabled: !isOwner && userInAnyMachine || m.inUse && !isOwner || hasCompletedWash,\n                  className: \"btn-start\",\n                  title: hasCompletedWash ? \"You've already washed today\" : \"\",\n                  children: isOwner && m.inUse ? \"Extend\" : \"Start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this)]\n            }, m.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `queue-panel ${queueOpenMobile ? 'show-mobile' : ''}`,\n          style: {\n            flex: 1,\n            minWidth: '300px',\n            transition: 'all 0.3s ease'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"All Queues\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), machines.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"queue-empty\",\n            children: \"No machines available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this) : machines.map(m => {\n            var _users$find, _m$queue5;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"queue-machine\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: m.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 19\n              }, this), !m.inUse && (!m.queue || m.queue.length === 0) ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"queue-no-users\",\n                children: \"No active users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"queue-details\",\n                children: [m.inUse && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"queue-current-user\",\n                  children: [\"\\uD83D\\uDD04 \", ((_users$find = users.find(u => u.id === m.currentUserId)) === null || _users$find === void 0 ? void 0 : _users$find.name) || `User${m.currentUserId}`, /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"queue-current-user-time\",\n                    children: [fmtSeconds(remainingSeconds(m.endTime)), \" remaining\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 25\n                }, this), (_m$queue5 = m.queue) === null || _m$queue5 === void 0 ? void 0 : _m$queue5.map((q, idx) => {\n                  var _users$find2;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"queue-item\",\n                    children: [\"#\", idx + 1, \" \", ((_users$find2 = users.find(u => u.id === q.userId)) === null || _users$find2 === void 0 ? void 0 : _users$find2.name) || `User${q.userId}`, /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"queue-item-time\",\n                      children: [q.minutes, \" minutes scheduled\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 27\n                    }, this)]\n                  }, q.userId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 21\n              }, this)]\n            }, m.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n        children: `\n            @media (max-width: 768px) {\n              .hamburger-btn {\n                display: block;\n              }\n              .queue-panel {\n                display: none;\n                position: absolute;\n                top: 80px;\n                right: 10px;\n                width: 90%;\n                max-width: 320px;\n                background: white;\n                border: 1px solid #ccc;\n                padding: 10px;\n                border-radius: 12px;\n                z-index: 999;\n              }\n              .queue-panel.show-mobile {\n                display: block;\n              }\n            }\n          `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"5nYZ9u0pcxiEIM9qFXZ87L2Srss=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","SockJS","Client","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","machines","setMachines","users","setUsers","id","name","currentUserId","setCurrentUserId","notifications","setNotifications","completedWashes","setCompletedWashes","Set","queueOpenMobile","setQueueOpenMobile","clientRef","intervalRef","fetch","method","headers","catch","e","console","error","socket","client","webSocketFactory","reconnectDelay","onConnect","log","subscribe","msg","JSON","parse","body","payload","handleNotification","completedUsers","onStompError","frame","activate","current","fetchMachines","setInterval","prev","Notification","permission","requestPermission","deactivate","clearInterval","then","r","ok","Error","json","data","remainingSeconds","endTime","diff","Math","floor","Date","getTime","now","fmtSeconds","totalSec","mins","secs","type","Number","userId","ceil","minutesUntilStart","machineName","machineId","notifMsg","notifId","message","setTimeout","filter","n","icon","addNewUser","prompt","trim","some","u","alert","totalRemainingSecondsForMachine","m","_m$queue","total","inUse","queue","length","forEach","q","minutes","remainingSecondsForUser","_m$queue2","getCurrentUserQueues","joinQueue","_machine$queue","_machine$queue2","machine","find","has","userInAnyMachine","mm","minutesStr","parseInt","isNaN","totalWaitSec","window","confirm","res","stringify","j","position","startWashing","started","toLocaleTimeString","currentUserQueues","className","children","style","top","right","zIndex","display","flexDirection","gap","map","notif","background","color","padding","borderRadius","boxShadow","maxWidth","animation","fontWeight","alignItems","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","onClick","border","cursor","value","onChange","target","textAlign","marginBottom","_m$queue3","waitSec","isWashing","queueIndex","findIndex","flex","gridTemplateColumns","_m$queue4","occupied","isOwner","hasCompletedWash","disabled","title","minWidth","transition","_users$find","_m$queue5","idx","_users$find2","_c","$RefreshReg$"],"sources":["/Users/aniketgaikwad011110/Projects/Wash_Machine/project-wash/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport { Client } from \"@stomp/stompjs\";\n\nexport default function Dashboard() {\n  const [machines, setMachines] = useState([]);\n  const [users, setUsers] = useState([{ id: 1, name: \"User1\" }]);\n  const [currentUserId, setCurrentUserId] = useState(1);\n  const [notifications, setNotifications] = useState([]);\n  const [completedWashes, setCompletedWashes] = useState(new Set());\n  const [queueOpenMobile, setQueueOpenMobile] = useState(false); // Mobile toggle\n  const clientRef = useRef(null);\n  const intervalRef = useRef(null);\n\n  useEffect(() => {\n    // Reset data on page load\n    fetch(\"/api/machines/reset\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" }\n    }).catch(e => console.error(\"Reset failed\", e));\n\n    const socket = new SockJS(\"http://localhost:8080/ws\");\n\n    const client = new Client({\n      webSocketFactory: () => socket,\n      reconnectDelay: 5000,\n      onConnect: () => {\n        console.log(\"WebSocket connected\");\n\n        client.subscribe(\"/topic/machines\", (msg) => {\n          try {\n            setMachines(JSON.parse(msg.body));\n          } catch (e) {\n            console.error(\"parse machines\", e);\n          }\n        });\n\n        client.subscribe(\"/topic/notifications\", (msg) => {\n          try {\n            const payload = JSON.parse(msg.body);\n            handleNotification(payload);\n          } catch (e) {\n            console.error(\"parse notification\", e);\n          }\n        });\n\n        client.subscribe(\"/topic/washHistory\", (msg) => {\n          try {\n            const completedUsers = JSON.parse(msg.body);\n            setCompletedWashes(new Set(completedUsers));\n          } catch (e) {\n            console.error(\"parse wash history\", e);\n          }\n        });\n      },\n      onStompError: (frame) => {\n        console.error('STOMP error', frame);\n      }\n    });\n    client.activate();\n    clientRef.current = client;\n\n    fetchMachines();\n\n    intervalRef.current = setInterval(() => {\n      setMachines(prev => [...prev]);\n    }, 1000);\n\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"default\") {\n      Notification.requestPermission();\n    }\n\n    return () => {\n      if (clientRef.current) clientRef.current.deactivate();\n      if (intervalRef.current) clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  function fetchMachines() {\n    fetch(\"/api/machines\")\n      .then((r) => {\n        if (!r.ok) throw new Error('Network response was not ok');\n        return r.json();\n      })\n      .then((data) => setMachines(data))\n      .catch((e) => console.error(\"fetch machines\", e));\n  }\n\n  function remainingSeconds(endTime) {\n    if (!endTime) return 0;\n    const diff = Math.floor(new Date(endTime).getTime() / 1000 - Date.now() / 1000);\n    return diff > 0 ? diff : 0;\n  }\n\n  function fmtSeconds(totalSec) {\n    if (totalSec <= 0) return \"0m 0s\";\n    const mins = Math.floor(totalSec / 60);\n    const secs = totalSec % 60;\n    return `${mins}m ${secs}s`;\n  }\n\n  function handleNotification(payload) {\n    if (!payload || payload.type !== \"PRE_NOTIFY\") return;\n    if (Number(payload.userId) !== Number(currentUserId)) return;\n\n    const mins = Math.ceil(payload.minutesUntilStart);\n    const machineName = payload.machineName || `Machine ${payload.machineId}`;\n\n    const notifMsg = `Your turn on ${machineName} starts in ${mins} minute(s)!`;\n\n    const notifId = Date.now();\n    setNotifications(prev => [...prev, {\n      id: notifId,\n      message: notifMsg,\n      machineId: payload.machineId\n    }]);\n\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== notifId));\n    }, 10000);\n\n    if (typeof Notification !== \"undefined\" && Notification.permission === \"granted\") {\n      new Notification(\"WashSimple\", {\n        body: notifMsg,\n        icon: \"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='75' font-size='80'>💧</text></svg>\"\n      });\n    }\n  }\n\n  function addNewUser() {\n    const name = prompt(\"Enter new username:\");\n    if (!name || !name.trim()) return;\n    if (users.some(u => u.name === name.trim())) {\n      alert(\"Username already exists!\");\n      return;\n    }\n    const id = Date.now();\n    setUsers(prev => [...prev, { id, name: name.trim() }]);\n    setCurrentUserId(id);\n  }\n\n  function totalRemainingSecondsForMachine(m) {\n    let total = 0;\n    if (m.inUse && m.endTime) total += remainingSeconds(m.endTime);\n    if (m.queue?.length) {\n      m.queue.forEach(q => {\n        total += (q.minutes || 50) * 60;\n      });\n    }\n    return total;\n  }\n\n  function remainingSecondsForUser(m, userId) {\n    let total = 0;\n\n    if (m.inUse && Number(m.currentUserId) === Number(userId)) {\n      return remainingSeconds(m.endTime);\n    }\n\n    if (m.inUse && m.endTime) {\n      total += remainingSeconds(m.endTime);\n    }\n\n    if (m.queue?.length) {\n      for (let q of m.queue) {\n        if (Number(q.userId) === Number(userId)) break;\n        total += (q.minutes || 50) * 60;\n      }\n    }\n\n    return total;\n  }\n\n  function getCurrentUserQueues() {\n    return machines.filter(m =>\n      Number(m.currentUserId) === Number(currentUserId) ||\n      (m.queue && m.queue.some(q => Number(q.userId) === Number(currentUserId)))\n    );\n  }\n\n  async function joinQueue(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n\n    const userInAnyMachine = machines.some(mm =>\n      Number(mm.currentUserId) === Number(currentUserId) ||\n      (mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)))\n    );\n\n    if (userInAnyMachine) {\n      alert(\"You are already using or queued for another machine.\");\n      return;\n    }\n\n    const minutesStr = prompt(\"Enter your wash duration (minutes):\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n\n    let totalWaitSec = 0;\n    if (machine.inUse && machine.endTime) totalWaitSec += remainingSeconds(machine.endTime);\n    machine.queue?.forEach(q => totalWaitSec += (q.minutes || 50) * 60);\n\n    const ok = window.confirm(\n      `Machine: ${machine.name}\\n` +\n      `Current queue: ${machine.queue?.length || 0} user(s)\\n` +\n      `Estimated wait: ${Math.ceil(totalWaitSec/60)} minutes\\n\\n` +\n      `Join queue?`\n    );\n    if (!ok) return;\n\n    try {\n      const res = await fetch(\"/api/machines/join\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n      });\n      if (!res.ok) throw new Error('Failed to join queue');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else {\n        alert(`Joined queue at position ${j.position}. You'll be notified 2 minutes before your turn.`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error joining queue:\", error);\n      alert(\"Failed to join queue. Please try again.\");\n    }\n  }\n\n  async function startWashing(machineId) {\n    const machine = machines.find(m => m.id === machineId);\n    if (!machine) return;\n\n    if (completedWashes.has(currentUserId)) {\n      alert(\"You have already washed your clothes today!\");\n      return;\n    }\n\n    const minutesStr = prompt(\"Enter minutes for wash:\", \"50\");\n    if (!minutesStr) return;\n    const minutes = parseInt(minutesStr, 10);\n    if (isNaN(minutes) || minutes <= 0) {\n      alert(\"Please enter a valid number of minutes.\");\n      return;\n    }\n\n    try {\n      const res = await fetch(\"/api/machines/start\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ machineId, userId: currentUserId, minutes })\n      });\n      if (!res.ok) throw new Error('Failed to start washing');\n      const j = await res.json();\n      if (j.error) {\n        alert(j.error);\n      } else if (j.started) {\n        alert(`Wash started! Will end at ${new Date(j.endTime).toLocaleTimeString()}`);\n        fetchMachines();\n      }\n    } catch (error) {\n      console.error(\"Error starting wash:\", error);\n      alert(\"Failed to start washing. Please try again.\");\n    }\n  }\n\n  const currentUserQueues = getCurrentUserQueues();\n\n  return (\n    <div className=\"dashboard-wrapper\">\n      <div className=\"container\">\n        {/* Notifications */}\n        {notifications.length > 0 && (\n          <div style={{\n            position: 'fixed',\n            top: '20px',\n            right: '20px',\n            zIndex: 1000,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '12px'\n          }}>\n            {notifications.map(notif => (\n              <div key={notif.id} style={{\n                background: 'linear-gradient(135deg, #10b981 0%, #059669 100%)',\n                color: 'white',\n                padding: '16px 20px',\n                borderRadius: '12px',\n                boxShadow: '0 8px 24px rgba(16, 185, 129, 0.4)',\n                maxWidth: '320px',\n                animation: 'slideIn 0.3s ease-out',\n                fontWeight: '600'\n              }}>\n                <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                  <span style={{ fontSize: '20px' }}>🔔</span>\n                  <span>{notif.message}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Header */}\n        <div className=\"header-card\">\n          <div className=\"header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <div className=\"header-title\">\n              <span className=\"header-title-icon\">💧</span>\n              <h1>WashSimple</h1>\n            </div>\n\n            {/* Hamburger Button for Mobile */}\n            <button\n              className=\"hamburger-btn\"\n              onClick={() => setQueueOpenMobile(!queueOpenMobile)}\n              style={{\n                display: 'none', // visible on mobile via media query\n                background: 'transparent',\n                border: 'none',\n                fontSize: '28px',\n                cursor: 'pointer'\n              }}\n            >\n              ☰\n            </button>\n\n            <div className=\"header-controls\">\n              <span className=\"header-controls-icon\">👤</span>\n              <select\n                value={currentUserId}\n                onChange={(e) => setCurrentUserId(Number(e.target.value))}\n                className=\"user-select\"\n              >\n                {users.map(u => (\n                  <option key={u.id} value={u.id}>{u.name}</option>\n                ))}\n              </select>\n              <button onClick={addNewUser} className=\"add-user-btn\">\n                + Add User\n              </button>\n            </div>\n          </div>\n\n          {/* Completed Wash or Active Sessions */}\n          {completedWashes.has(currentUserId) ? (\n            <div style={{\n              background: 'linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%)',\n              padding: '20px',\n              borderRadius: '12px',\n              border: '1px solid #10b981',\n              textAlign: 'center'\n            }}>\n              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', gap: '10px', marginBottom: '8px' }}>\n                <span style={{ fontSize: '24px' }}>✅</span>\n                <strong style={{ color: '#065f46', fontSize: '16px' }}>Wash Completed!</strong>\n              </div>\n              <div style={{ color: '#047857', fontSize: '14px', fontWeight: '500' }}>\n                You have already washed your clothes today.\n              </div>\n            </div>\n          ) : currentUserQueues.length > 0 ? (\n            <div className=\"active-sessions\">\n              <div className=\"active-sessions-label\">\n                <span className=\"active-sessions-label-icon\">🔔</span>\n                <strong>Your Active Sessions:</strong>\n              </div>\n              {currentUserQueues.map(m => {\n                const waitSec = remainingSecondsForUser(m, currentUserId);\n                const isWashing = Number(m.currentUserId) === Number(currentUserId) && m.inUse;\n                const queueIndex = m.queue?.findIndex(q => Number(q.userId) === Number(currentUserId));\n\n                return (\n                  <div key={m.id} className={`session-card ${isWashing ? 'session-card-washing' : 'session-card-queued'}`}>\n                    <strong>{m.name}</strong>\n                    <div className=\"session-card-details\">\n                      {isWashing ? (\n                        <>🔄 Washing • {fmtSeconds(waitSec)} left</>\n                      ) : (\n                        <>⏳ Position {queueIndex + 1} • ~{Math.ceil(waitSec / 60)} min wait</>\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            <div className=\"no-sessions\">\n              <span className=\"no-sessions-icon\">😊</span>\n              <div className=\"no-sessions-text\">No active sessions. Start a wash or join a queue below!</div>\n            </div>\n          )}\n        </div>\n\n        {/* Main Content */}\n        <div className=\"main-content\" style={{ display: 'flex', gap: '20px', position: 'relative' }}>\n          <div className=\"machine-grid\" style={{ flex: 2, display: 'grid', gridTemplateColumns: 'repeat(auto-fill,minmax(220px,1fr))', gap: '16px' }}>\n            {machines.map(m => {\n              const totalSec = totalRemainingSecondsForMachine(m);\n              const occupied = totalSec > 0;\n              const isOwner = Number(m.currentUserId) === Number(currentUserId);\n              const hasCompletedWash = completedWashes.has(currentUserId);\n              const userInAnyMachine = machines.some(mm =>\n                Number(mm.currentUserId) === Number(currentUserId) ||\n                (mm.queue && mm.queue.some(q => Number(q.userId) === Number(currentUserId)))\n              );\n\n              return (\n                <div key={m.id} className={`card ${isOwner ? 'card-owner' : ''}`}>\n                  <h3>{m.name}</h3>\n\n                  <div className=\"card-details\">\n                    <div className=\"status-row\">\n                      <div className={`status-indicator ${occupied ? 'status-indicator-occupied' : 'status-indicator-available'}`} />\n                      <strong>{occupied ? \"Occupied\" : \"Available\"}</strong>\n                    </div>\n\n                    <div className=\"info-row\">\n                      <span className=\"info-icon\">⏰</span>\n                      <span>Remaining: <strong>{fmtSeconds(totalSec)}</strong></span>\n                    </div>\n\n                    <div className=\"info-row\">\n                      <span className=\"info-icon\">👥</span>\n                      <span>Queue: <strong>{m.queue?.length || 0} user(s)</strong></span>\n                    </div>\n\n                    {isOwner && m.inUse && (\n                      <div className=\"info-row\" style={{ color: '#10b981', fontWeight: 600 }}>\n                        <span className=\"info-icon\">✓</span>\n                        <span>You're washing</span>\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"card-actions\">\n                    <button\n                      onClick={() => joinQueue(m.id)}\n                      disabled={userInAnyMachine || hasCompletedWash}\n                      className=\"btn-join-queue\"\n                      title={hasCompletedWash ? \"You've already washed today\" : \"\"}\n                    >\n                      Join Queue\n                    </button>\n                    <button\n                      onClick={() => startWashing(m.id)}\n                      disabled={(!isOwner && userInAnyMachine) || (m.inUse && !isOwner) || hasCompletedWash}\n                      className=\"btn-start\"\n                      title={hasCompletedWash ? \"You've already washed today\" : \"\"}\n                    >\n                      {isOwner && m.inUse ? \"Extend\" : \"Start\"}\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          {/* Queue Panel */}\n          <div className={`queue-panel ${queueOpenMobile ? 'show-mobile' : ''}`} style={{\n            flex: 1,\n            minWidth: '300px',\n            transition: 'all 0.3s ease',\n          }}>\n            <h3>All Queues</h3>\n            {machines.length === 0 ? (\n              <div className=\"queue-empty\">No machines available</div>\n            ) : (\n              machines.map(m => (\n                <div key={m.id} className=\"queue-machine\">\n                  <strong>{m.name}</strong>\n                  {!m.inUse && (!m.queue || m.queue.length === 0) ? (\n                    <div className=\"queue-no-users\">No active users</div>\n                  ) : (\n                    <div className=\"queue-details\">\n                      {m.inUse && (\n                        <div className=\"queue-current-user\">\n                          🔄 {users.find(u => u.id === m.currentUserId)?.name || `User${m.currentUserId}`}\n                          <div className=\"queue-current-user-time\">\n                            {fmtSeconds(remainingSeconds(m.endTime))} remaining\n                          </div>\n                        </div>\n                      )}\n                      {m.queue?.map((q, idx) => (\n                        <div key={q.userId} className=\"queue-item\">\n                          #{idx + 1} {users.find(u => u.id === q.userId)?.name || `User${q.userId}`}\n                          <div className=\"queue-item-time\">\n                            {q.minutes} minutes scheduled\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Inline CSS for Hamburger / Mobile */}\n        <style>\n          {`\n            @media (max-width: 768px) {\n              .hamburger-btn {\n                display: block;\n              }\n              .queue-panel {\n                display: none;\n                position: absolute;\n                top: 80px;\n                right: 10px;\n                width: 90%;\n                max-width: 320px;\n                background: white;\n                border: 1px solid #ccc;\n                padding: 10px;\n                border-radius: 12px;\n                z-index: 999;\n              }\n              .queue-panel.show-mobile {\n                display: block;\n              }\n            }\n          `}\n        </style>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}